{"type": "root", "attrs": {}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Properties"], "extent": [0, 15]}, {"type": "summary", "indent": 0, "text": ["Properties let you set up flexible and powerful hierarchies of rendering, shading, lighting, and camera parameters."], "extent": [15, 139]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [139, 154], "body": [{"type": "para", "indent": 0, "text": ["Properties supply options to the renderer, such as camera parameters, light positions and parameters, shader names, and so on."], "extent": [154, 283]}, {"type": "para", "indent": 0, "text": ["Many properties are renderer-specific, though some properties that are common to all renderers, such as camera focal length, will be the same for all renderers and automatically translated into the appropriate renderer option by the properties system. Basically, the properties system maintains a list of properties the renderer knows about, and list of properties defined in Houdini, and maps between them."], "extent": [283, 692]}, {"type": "para", "indent": 0, "text": ["The new properties-aware ", {"scheme": "Node", "value": "/nodes/out/ifd", "type": "link", "text": ["mantra"], "fullpath": "/nodes/out/ifd.html"}, ", ", {"scheme": "Node", "value": "/nodes/out/rib", "type": "link", "text": ["RenderMan"], "fullpath": "/nodes/out/rib.html"}, ", ", {"scheme": "Node", "value": "/nodes/out/alf", "type": "link", "text": ["Alfred"], "fullpath": "/nodes/out/alf.html"}, ", and other ", {"scheme": null, "value": "/nodes/out/", "type": "link", "text": ["render driver nodes"], "fullpath": "/nodes/out/index.html"}, " use Python scripts at render time to translate the scene data and properties sent from Houdini into ", {"scheme": null, "value": "/render/ifd", "type": "link", "text": ["IFD"], "fullpath": "/render/ifd.html"}, " (for mantra) or ", {"scheme": "Node", "value": "/nodes/out/rib", "type": "link", "text": ["RIB"], "fullpath": "/nodes/out/rib.html"}, ". The combination of property inheritance and scriptability makes the property system extremely flexible."], "extent": [692, 1093]}]}, {"level": 2, "id": "order", "container": true, "type": "h", "indent": 0, "text": ["Inheritance"], "extent": [1093, 1119], "body": [{"type": "para", "indent": 0, "text": ["The key feature of properties is ", {"type": "em", "text": ["inheritance"]}, ". You can properties at any of several levels, and properties at more specific levels override properties at more general levels."], "extent": [1119, 1297]}, {"type": "para", "indent": 0, "text": ["The inheritance order is:"], "extent": [1297, 1324]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Renderer defaults"]}, " \u2013 if you don\u2019t specify a property, the renderer uses its built-in (or configured) default value."], "extent": [1324, 1444]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Output driver"]}], "extent": [1444, 1462]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Material"]}], "extent": [1462, 1475]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Objects"]}], "extent": [1475, 1487]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Primitives"]}, " \u2013 See ", {"scheme": null, "value": "#perprim", "type": "link", "text": ["per-primitive properties"], "fullpath": "/props/index.html#perprim", "fragment": "#perprim"}, " below."], "extent": [1487, 1557]}], "container": true}, {"type": "para", "indent": 0, "text": ["At each level you can specify properties specific to that level. Any properties you define at higher levels are inherited by lower levels, so you can specify a default ", {"scheme": null, "value": "/shade/", "type": "link", "text": ["shader"], "fullpath": "/shade/index.html"}, " at the output driver level. Even though the shader definition is meaningless on an ", {"scheme": null, "value": "/nodes/out/", "type": "link", "text": ["output driver"], "fullpath": "/nodes/out/index.html"}, ", it\u2019s inherited as the default by all objects rendered through that driver."], "extent": [1557, 1930]}, {"type": "para", "indent": 0, "text": ["Properties at a lower level override properties at a higher level, so for example you can specify a ", {"scheme": null, "value": "/shade/", "type": "link", "text": ["surface shader"], "fullpath": "/shade/index.html"}, " on the object, and override it per-primitive."], "extent": [1930, 2102]}, {"type": "para", "indent": 0, "text": ["In practice, inheritance is somewhat limited by the fact that, for convenience, Houdini automatically adds common properties, such as light mask and default shader, to every object created, so every object will override any light mask or default shader you add higher up the chain (such as on the camera or output driver). However, a TD can edit the list of default properties added to new objects. See ", {"scheme": null, "value": "#advanced", "type": "link", "text": ["advanced uses"], "fullpath": "/props/index.html#advanced", "fragment": "#advanced"}, " below."], "extent": [2102, 2540]}]}, {"level": 2, "id": "edit", "container": true, "type": "h", "indent": 0, "text": ["Editing, adding or removing properties"], "extent": [2540, 2592], "body": [{"type": "para", "indent": 0, "text": ["Technically, properties are spare parameters. You can add them to a node using the ", {"scheme": null, "value": "/ref/windows/edit_parameter_interface", "type": "link", "text": ["Edit Parameter Interface window"], "fullpath": "/ref/windows/edit_parameter_interface.html"}, "."], "extent": [2592, 2750]}, {"type": "para", "indent": 0, "text": ["See the section on Inherence above for the different ", {"type": "q", "text": ["levels"]}, " at which you can add properties. "], "extent": [2750, 2847]}, {"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["Select the node you want to edit."], "extent": [2847, 2884]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["In the ", {"scheme": null, "value": "/ref/panes/parms", "type": "link", "text": ["parameter editor"], "fullpath": "/ref/panes/parms.html"}, ", open the ", {"scheme": "Icon", "value": "BUTTONS/gear", "type": "link", "text": "", "fullpath": "/props/BUTTONS/gear.html"}, " Gear menu and choose ", {"type": "ui", "text": ["Edit Rendering Parameters"]}, "."], "extent": [2884, 3012]}], "container": true}, {"type": "para", "indent": 0, "text": ["See the ", {"scheme": null, "value": "/ref/windows/edit_parameter_interface", "type": "link", "text": ["Edit Parameter Interface window"], "fullpath": "/ref/windows/edit_parameter_interface.html"}, " help for information on how to add and remove properties."], "extent": [3012, 3151]}, {"type": "para", "indent": 0, "text": ["Once you've added render properties you can edit their values in the ", {"scheme": null, "value": "/ref/panes/parms", "type": "link", "text": ["parameter editor"], "fullpath": "/ref/panes/parms.html"}, "."], "extent": [3151, 3258]}, {"type": "para", "indent": 0, "text": ["You can attach them to renderable nodes (such as objects). You can also use a Properties SHOP to hold properties and refer to it from renderable objects."], "extent": [3258, 3413]}, {"type": "para", "indent": 0, "text": ["Houdini decides what default properties to create on new objects. There are usually more properties available than just the defaults. You can add properties, or remove properties to clean up the interface, allow inheritance, or save memory."], "extent": [3413, 3656]}]}, {"level": 2, "id": "perprim", "container": true, "type": "h", "indent": 0, "text": ["Per-primitive properties"], "extent": [3656, 3697], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["The ", {"scheme": "Node", "value": "/nodes/shop/properties", "type": "link", "text": ["Properties shader"], "fullpath": "/nodes/shop/properties.html"}, " lets you attach arbitrary properties. Houdini will apply the shader\u2019s properties to any object ", {"type": "em", "text": ["or primitive"]}, " that uses the shader."], "extent": [3697, 3878]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Use the ", {"scheme": null, "value": "/ref/panes/materialpalette", "type": "link", "text": ["Material Palette"], "fullpath": "/ref/panes/materialpalette.html"}, " to apply ", {"scheme": null, "value": "/shade/", "type": "link", "text": ["shaders"], "fullpath": "/shade/index.html"}, " per-primitive. The Material node replaces the old Shader surface node."], "extent": [3878, 4034]}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Uses"], "extent": [4034, 4045], "body": [{"type": "para", "indent": 0, "text": ["The properties system enables many useful and powerful scenarios:"], "extent": [4045, 4117]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Override the object shader at the primitive level."], "extent": [4117, 4171], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["To set properties on primitives, create a Properties SHOP with just the properties you care about, and assign it as to the primitives you want to affect. Other primitive inherit their properties from the object."], "extent": [4171, 4394]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Per-primitive shaders and light mask."], "extent": [4394, 4443]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Per-primitive displacement bounds! This can be a huge performance boost: only increase the displacement bounds property on highly displaced primitives."], "extent": [4443, 4602]}], "container": true}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": null, "value": "/shelf/copytopoints", "type": "link", "text": ["Point instancing"], "fullpath": "/shelf/copytopoints.html"}], "extent": [4602, 4644], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["You can bind properties to points, and when geometry is instanced onto the point, the point\u2019s properties are inherited by the instanced geometry."], "extent": [4644, 4801]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": null, "value": "/shelf/scatter", "type": "link", "text": ["Scatter points"], "fullpath": "/shelf/scatter.html"}, " that will be instanced as an asteroid field. You can set properties on the individual points to control the look of the instanced geometry."], "extent": [4801, 4984]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": null, "value": "/copy/", "type": "link", "text": ["Use a procedural shader to instance geometry onto points"], "fullpath": "/copy/index.html"}, ", with properties on the points controlling the operation of the shader."], "extent": [4984, 5130]}], "container": true}], "container": true}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips"], "extent": [5130, 5141], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Define properties at the highest level that\u2019s practical. The lower the level at which you set things, the more places you\u2019ll have to edit when you want to change something."], "extent": [5141, 5319]}], "container": true}]}, {"level": 2, "id": "advanced", "container": true, "type": "h", "indent": 0, "text": ["Advanced uses"], "extent": [5319, 5350], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["You can bypass properties (that is, have Houdini pretend the property isn\u2019t present on a node) using a flag of the ", {"scheme": "Cmd", "value": "/commands/opparm", "type": "link", "text": "", "fallback_text": "opparm", "fullpath": "/commands/opparm.html"}, " HScript command."], "extent": [5350, 5499]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The Python scripts responsible for generating IFD/RIB are in ", {"type": "code", "text": ["$HFS/Houdini/soho"]}, "."], "extent": [5499, 5584]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The dialog scripts in ", {"type": "code", "text": ["$HFS/Houdini/soho/parameters"]}, " control the list of all available properties, as well as what properties are added to new objects."], "extent": [5584, 5739], "body": [{"type": "para", "indent": 4, "text": ["Each file ", {"type": "code", "text": ["include"]}, "s a ", {"type": "code", "text": ["parameters/", {"type": "var", "text": ["scriptname"]}, ".user.ds"]}, " file. If you have such a file in your Houdini path, it will get imported, which gives you the opportunity to override parameter definitions and ", {"type": "code", "text": ["define"]}, " symbols which control the operation of the parent scripts."], "extent": [5739, 6015]}], "container": true}], "container": true}]}, {"level": 1, "id": "subtopics", "container": true, "type": "subtopics_section", "indent": 0, "text": ["Properties"], "role": "section", "extent": [7645, 7667], "body": [{"type": "subtopics_item_group", "body": [{"ext": null, "type": "subtopics_item", "indent": 0, "text": [" ", {"scheme": null, "value": "mantra", "type": "link", "text": "", "fullpath": "/props/mantra.html"}], "role": "item", "extent": [7667, 7680]}, {"ext": null, "type": "subtopics_item", "indent": 0, "text": [" ", {"scheme": null, "value": "obj", "type": "link", "text": "", "fullpath": "/props/obj.html"}], "role": "item", "extent": [7680, 7689]}, {"ext": null, "type": "subtopics_item", "indent": 0, "text": [" ", {"scheme": null, "value": "material", "type": "link", "text": "", "fullpath": "/props/material.html"}], "role": "item", "extent": [7689, 7703]}, {"ext": null, "type": "subtopics_item", "indent": 0, "text": [" ", {"scheme": null, "value": "op", "type": "link", "text": "", "fullpath": "/props/op.html"}], "role": "item", "extent": [7703, 7711]}, {"ext": null, "type": "subtopics_item", "indent": 0, "text": [" ", {"scheme": null, "value": "viewport", "type": "link", "text": "", "fullpath": "/props/viewport.html"}], "role": "item", "extent": [7711, 7725]}, {"ext": null, "type": "subtopics_item", "indent": 0, "text": [" ", {"scheme": null, "value": "vop", "type": "link", "text": "", "fullpath": "/props/vop.html"}], "role": "item", "extent": [7725, 7734]}, {"ext": null, "type": "subtopics_item", "indent": 0, "text": [" ", {"scheme": null, "value": "vopnet", "type": "link", "text": "", "fullpath": "/props/vopnet.html"}], "role": "item", "extent": [7734, 7746]}, {"ext": null, "type": "subtopics_item", "indent": 0, "text": [" ", {"scheme": null, "value": "alembic", "type": "link", "text": "", "fullpath": "/props/alembic.html"}], "role": "item", "extent": [7746, 7759]}], "container": true, "role": "item_group"}]}], "title": ["Properties"], "summary": ["Properties let you set up flexible and powerful hierarchies of rendering, shading, lighting, and camera parameters."]}