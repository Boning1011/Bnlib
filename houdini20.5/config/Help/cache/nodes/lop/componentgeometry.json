{"type": "root", "attrs": {"type": "node", "context": "lop", "internal": "componentgeometry", "icon": "LOP/componentgeometry", "group": "usdassets   ", "since": "19.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Component Geometry"], "extent": [0, 23]}, {"type": "summary", "indent": 0, "text": ["Geometry container or import source, in a network created by the Component Builder tool."], "extent": [142, 239]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [239, 254], "body": [{"type": "para", "indent": 4, "text": [{"type": "strong", "text": ["This node is part of the network created by the ", {"scheme": null, "value": "/solaris/component_builder", "type": "link", "text": ["Component Builder tool"], "fullpath": "/solaris/component_builder.html"}]}, ". The component builder network gives you a framework in LOPs to create a Component model (usually a prop, such as a chair or tree) and export it to USD for re-use."], "extent": [40, 311]}, {"type": "para", "indent": 0, "text": ["This node is either a SOP network the user can use to build the component model from scratch, or an import node to grab the geometry from somewhere else (such as another SOP network or a geometry file)."], "extent": [286, 490]}, {"type": "para", "indent": 0, "text": ["You can dive inside this node, to a SOP network inside. In this network you can build the component model\u2019s geometry."], "extent": [490, 609]}, {"type": "para", "indent": 0, "text": ["To build a component with multiple geometry variants, you can insert a ", {"scheme": "Node", "value": "/nodes/lop/componentgeometryvariants", "type": "link", "text": ["Component Geometry Variants LOP"], "fullpath": "/nodes/lop/componentgeometryvariants.html"}, " between the initial Component Geometry node and the ", {"scheme": "Node", "value": "/nodes/lop/componentmaterial", "type": "link", "text": ["Component Material Node"], "fullpath": "/nodes/lop/componentmaterial.html"}, ". Then you can wire in more Component Geometry nodes representing the variants."], "extent": [609, 934]}, {"type": "para", "indent": 4, "text": ["See ", {"scheme": null, "value": "/solaris/component_builder", "type": "link", "text": ["how to use the component builder tool"], "fullpath": "/solaris/component_builder.html"}, " for more information."], "extent": [332, 429]}]}, {"level": 2, "id": "proxies", "container": true, "type": "h", "indent": 0, "text": ["Proxy outputs"], "extent": [963, 993], "body": [{"type": "para", "indent": 0, "text": ["The SOP network inside has three output nodes:"], "extent": [993, 1042]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Green (", {"type": "code", "text": ["default"]}, ") output node. This is the ", {"type": "q", "text": ["real"]}, " geometry of the component."], "extent": [1042, 1122]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["You can also optionally generate simplified proxy geometry and connect it to the yellow ", {"type": "code", "text": ["proxy"]}, " output. This geometry can be used for display in an OpenGL viewer. If you connect this output, the default output is used as the ", {"type": "code", "text": ["render"]}, " purpose."], "extent": [1122, 1368], "body": [{"type": "para", "indent": 4, "text": ["Generating efficient GL proxy geometry can make a big difference in performance. Use the following tips to make fast display proxy geometry:"], "extent": [1368, 1514]}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["When translating to USD, use as few mesh prims as possible, ideally just one."], "extent": [1514, 1599]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Triangulate your polygons and remove vertex attributes."], "extent": [1599, 1662]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Use the ", {"scheme": "Node", "value": "/nodes/sop/normal", "type": "link", "text": ["Normal SOP"], "fullpath": "/nodes/sop/normal.html"}, " to add a point normal attribute to the geometry, instead of making the GL viewer do it."], "extent": [1662, 1794]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/divide", "type": "link", "text": ["Divide"], "fullpath": "/nodes/sop/divide.html"}, " and ", {"scheme": "Node", "value": "/nodes/sop/vertexsplit", "type": "link", "text": ["Vertex Split"], "fullpath": "/nodes/sop/vertexsplit.html"}, " nodes may be helpful in creating proxy geometry."], "extent": [1794, 1915]}], "container": true}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["You can also optionally generate simplified collision geometry and connect it to the pink ", {"type": "code", "text": ["simproxy"]}, " output. This geometry is used for computing collisions in a simulation, as well as for things such as the ", {"scheme": "Node", "value": "/nodes/lop/edit", "type": "link", "text": ["Edit node\u2019s"], "fullpath": "/nodes/lop/edit.html"}, " ", {"type": "q", "text": ["Use Physics"]}, " mode or the ", {"scheme": "Node", "value": "/nodes/lop/drop", "type": "link", "text": ["Drop node"], "fullpath": "/nodes/lop/drop.html"}, "."], "extent": [1915, 2206], "body": [{"type": "para", "indent": 4, "text": ["Sim proxy geometry is often ", {"type": "em", "text": ["very"]}, " simple compared to the render or display geometry."], "extent": [2206, 2297]}, {"type": "para", "indent": 4, "text": ["For example, if you have an apple component, even the low-res ", {"type": "q", "text": ["display"]}, " proxy will probably be mostly round, have indentations with the top having stem coming out of it, a leaf on the stem, and so on, so you can tell what it represents in the viewer."], "extent": [2297, 2553]}, {"type": "para", "indent": 4, "text": ["The ", {"type": "q", "text": ["sim proxy"]}, " version of the geometry will almost certainly eliminate the indentations, stem, leaf, small bumps, and so on. It can be just a simple spheroid that approximates the geneeral shape of the original. Depending on how much you value speed vs. accuracy in the simulation, you could use quite a low-poly shape that is more blocky than round."], "extent": [2553, 2910]}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The ", {"scheme": "Node", "value": "/nodes/sop/polyreduce", "type": "link", "text": ["PolyReduce SOP"], "fullpath": "/nodes/sop/polyreduce.html"}, " is useful for quickly creating a low-res display proxy."], "extent": [2910, 3010]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The ", {"scheme": "Node", "value": "/nodes/sop/convexdecomposition", "type": "link", "text": ["Convex Decomposition SOP"], "fullpath": "/nodes/sop/convexdecomposition.html"}, " is useful for creating a low-res convex collision proxy."], "extent": [3010, 3131]}], "container": true}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [3131, 3143], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Input Source"], "extent": [3143, 3158], "body": [{"type": "para", "indent": 4, "text": ["The source of this node\u2019s geometry."], "extent": [3181, 3222]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Internal SOP Network"], "extent": [3222, 3248], "body": [{"type": "para", "indent": 8, "text": ["Use the output(s) of the SOP network inside this node."], "extent": [3248, 3312]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Imported Files"], "extent": [3312, 3332], "body": [{"type": "para", "indent": 8, "text": ["Use the contents of an external geometry file (or files)."], "extent": [3332, 3399]}], "container": true}, {"type": "dt", "indent": 4, "text": ["External SOP Network"], "extent": [3399, 3425], "body": [{"type": "para", "indent": 8, "text": ["Use the output of a SOP node (or nodes) somewhere else in this scene file."], "extent": [3425, 3509]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Referenced Files"], "extent": [3509, 3531], "body": [{"type": "para", "indent": 8, "text": ["Create references to external file (or files). Any USD File Format is supported. These relative references are never localized."], "extent": [3531, 3668]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "sourceinmput"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fix SOP Outputs"], "extent": [3668, 3685], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Input Source"]}, " is ", {"type": "ui", "text": ["Internal SOP network"]}, ", re-create the three output nodes in the contained SOP network. This can be useful if you accidentally delete one of the output nodes."], "extent": [3709, 3900]}], "container": true, "attrs": {"id": "fixsopoutputs"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Imported Files "], "extent": [3900, 3923]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Default/Render"], "extent": [3923, 3940], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Input Source"]}, " is ", {"type": "ui", "text": ["File"]}, ", the path to a file containing the default geometry (if the other fields are filled in, this is the render purpose geometry)."], "extent": [3957, 4122]}], "container": true, "attrs": {"id": "source"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Proxy"], "extent": [4122, 4129], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Input Source"]}, " is ", {"type": "ui", "text": ["File"]}, ", the path to a file containing the fast display proxy geometry."], "extent": [4151, 4254]}], "container": true, "attrs": {"id": "sourceproxy"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["SimProxy"], "extent": [4254, 4264], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Input Source"]}, " is ", {"type": "ui", "text": ["File"]}, ", the path to a file containing the simulation (collision) proxy geometry."], "extent": [4289, 4402]}], "container": true, "attrs": {"id": "sourcesimproxy"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Missing Frame"], "extent": [4402, 4417], "body": [{"type": "para", "indent": 4, "text": ["What to do when a file is missing from an animated sequence: either have no geometry just at that frame, or trigger an error."], "extent": [4417, 4549]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" External SOP Source "], "extent": [4549, 4577]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Default/Render"], "extent": [4577, 4594], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Input Source"]}, " is ", {"type": "ui", "text": ["External SOP"]}, ", the node path to the SOP node whose output to use as the default geometry."], "extent": [4614, 4737]}], "container": true, "attrs": {"id": "sourcesop"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Proxy"], "extent": [4737, 4744], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Input Source"]}, " is ", {"type": "ui", "text": ["External SOP"]}, ", the node path to the SOP node whose output to use as the fast display proxy geometry."], "extent": [4769, 4903]}], "container": true, "attrs": {"id": "sourcesopproxy"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["SimProxy"], "extent": [4903, 4913], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Input Source"]}, " is ", {"type": "ui", "text": ["External SOP"]}, ", the node path to the SOP node whose output to use as the simulation (collision) geometry."], "extent": [4941, 5080]}], "container": true, "attrs": {"id": "sourcesopsimproxy"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Attributes"], "extent": [5080, 5097], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Converted Attribs"], "extent": [5097, 5117], "body": [{"type": "para", "indent": 4, "text": ["Geometry attributes to be imported from SOPs as primvars."], "extent": [5117, 5180]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Index Attributes"], "extent": [5180, 5198], "body": [{"type": "para", "indent": 4, "text": ["Converted attributes which should be index primvars."], "extent": [5198, 5256]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Partition Attributes"], "extent": [5256, 5278], "body": [{"type": "para", "indent": 4, "text": ["Attributes for creating GeomSubsets on meshes."], "extent": [5278, 5330]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Prefix Subsets with Attribute Name"], "extent": [15904, 15940], "body": [{"type": "para", "indent": 4, "text": ["When creating subsets from ", {"type": "ui", "text": ["Partition Attributes"]}, ", the subsets are named by combining the attribute name with the partition attribute\u2019s value (a string or integer).\n    This avoids name collisions when multiple partition attributes contain the same values, but can be undesirable if precise control of the subset names is required.\n    For string attributes, if this option is turned off, the attribute values are directly used as the subset names."], "extent": [15972, 16428]}], "container": true, "attrs": {"id": "prefixpartitionsubsets"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Subset Groups"], "extent": [5382, 5397], "body": [{"type": "para", "indent": 4, "text": ["Primitive groups which will be converted into GeomSubests on meshes."], "extent": [5397, 5471]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Translate UV Attribute to ST"], "extent": [5471, 5501], "body": [{"type": "para", "indent": 4, "text": ["Converts the SOP vertex attribute 'uv' into a USD PrimVar called 'primvars:st'."], "extent": [5501, 5586]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Topology Attributes"], "extent": [5586, 5607], "body": [{"type": "para", "indent": 4, "text": ["Controls whether USD topology attributes should be authored as time sampled or default values."], "extent": [5607, 5707]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Treat Polygons as Subdivision Surfaces"], "extent": [5707, 5747], "body": [{"type": "para", "indent": 4, "text": ["Any polygon meshes not already tagged as subdivs, set the subdivisionScheme to 'catmullClark'."], "extent": [5747, 5847]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reverse Polygon Vertex Ordering"], "extent": [5847, 5880], "body": [{"type": "para", "indent": 4, "text": ["USD supports an ", {"type": "code", "text": ["orientation"]}, " attribute on mesh primitives that indicates whether polygons have a left-handed or right-handed ordering, while SOP geometry is always left-handed ordering. When this option is on, the importer always reorders vertices (and associated primvars) to be right-handed."], "extent": [5905, 6205]}, {"type": "para", "indent": 4, "text": ["This is useful when round tripping right-handed oriented polygons from USD into SOPs and back into USD. The data is always converted to a left handed ordering when importing it into SOPs. If you imported the polygons back into USD without this option, they would be left-handed, unlike the original."], "extent": [6205, 6514]}], "container": true, "attrs": {"id": "reversepolygons"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Set Missing Widths"], "extent": [6514, 6534], "body": [{"type": "para", "indent": 4, "text": ["USD has a fallback value of 1.0 for the width of Curves and Points, which is often far wider/thicker than desired. If the SOP geometry does not explicitly author width/pscale data, this control can be used instead to explicitly author a USD value."], "extent": [6560, 6813]}], "container": true, "attrs": {"id": "setmissingwidths"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Author Time Samples"], "extent": [6813, 6834], "body": [{"type": "para", "indent": 4, "text": ["Whether attributes imported from SOP should be imported as default values or as time samples."], "extent": [6834, 6933]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Compute Extents Hint"], "extent": [6933, 6955], "body": [{"type": "para", "indent": 4, "text": ["Generates extentsHint and extents on missing gprims, xforms, and scopes."], "extent": [6955, 7034]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Primitives"], "extent": [7034, 7051], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Packed Primitives"], "extent": [7051, 7071], "body": [{"type": "para", "indent": 4, "text": ["Configures how packed prims from SOPs should be converted to USD."], "extent": [7071, 7142]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Import Height Fields as Mesh"], "extent": [7142, 7172], "body": [{"type": "para", "indent": 4, "text": ["Converts imported height fields to geometry, rather than importing as Field prims."], "extent": [7172, 7260]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bind Materials"], "extent": [7260, 7276], "body": [{"type": "para", "indent": 4, "text": ["Creates empty materials and bindings, using the ", {"type": "code", "text": ["usdmaterialpath"]}, " attribute."], "extent": [7276, 7358]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Partitions"], "extent": [7358, 7370], "body": [{"type": "para", "indent": 4, "text": ["Automatically turns the material bindings into geomsubsets."], "extent": [7370, 7435]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Setup Quick Materials for Bindings"], "extent": [7435, 7471], "body": [{"type": "para", "indent": 4, "text": ["Appends a new Component Material node, and creates a ", {"scheme": null, "value": "/solaris/quick_materials", "type": "link", "text": ["Quick Surface Material"], "fullpath": "/solaris/quick_materials.html"}, " for each of the empty materials."], "extent": [7471, 7612]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Advanced"], "extent": [7612, 7627], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Geo Variant Name"], "extent": [7627, 7646], "body": [{"type": "para", "indent": 4, "text": ["Sets the variant name when this node is connected to a ", {"scheme": "Node", "value": "/nodes/lop/componentgeometryvariant", "type": "link", "text": ["Component Geometry Variant"], "fullpath": "/nodes/lop/componentgeometryvariant.html"}, "."], "extent": [7646, 7770]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Houdini Icon"], "extent": [7770, 7784], "body": [{"type": "para", "indent": 4, "text": ["Optional path to an icon file, or Houdini icon name (for example, ", {"type": "code", "text": ["SHELF_tree_conifer"]}, "). If you set this, Houdini\u2019s Scene Graph Tree pane will display this variant of the component prim using this icon."], "extent": [7784, 7992]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enforce Model Kind Hierarchy"], "extent": [7992, 8022], "body": [{"type": "para", "indent": 4, "text": ["Ensures that no model kind (component, assembly, etc\u2026) is found beneath the component root."], "extent": [8022, 8122]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Add GeomModelAPI"], "extent": [8122, 8147], "body": [{"type": "para", "indent": 0, "text": ["Turn this on to set the wireframe color and draw mode."], "extent": [8147, 8205]}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Custom Data"], "extent": [8205, 8225], "body": [{"type": "para", "indent": 0, "text": ["You can use this multiparm to add custom attributes to the geometry prim created by this node."], "extent": [8225, 8323]}]}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [8323, 8332], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/componentgeometryvariants", "type": "link", "text": "", "fullpath": "/nodes/lop/componentgeometryvariants.html"}], "extent": [8332, 8372]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/componentmaterial", "type": "link", "text": "", "fullpath": "/nodes/lop/componentmaterial.html"}], "extent": [8372, 8403]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/componentoutput", "type": "link", "text": "", "fullpath": "/nodes/lop/componentoutput.html"}], "extent": [8403, 8432]}], "container": true}], "text": "Related"}], "title": ["Component Geometry"], "summary": ["Geometry container or import source, in a network created by the Component Builder tool."], "included": ["/nodes/lop/_component", "/nodes/lop/_sopimport_shared"]}