{"type": "root", "attrs": {"type": "node", "context": "lop", "internal": "editmaterialproperties", "icon": "LOP/editmaterialproperties", "group": "attrs", "since": "19.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Edit Material Properties"], "extent": [0, 29]}, {"type": "summary", "indent": 0, "text": ["Lets you build a spare parameter interface that reflects material or shader input attributes to directly edit their values."], "extent": [151, 283]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [283, 298], "body": [{"type": "para", "indent": 0, "text": ["By itself, this nodes doesn\u2019t do anything. You must add ", {"scheme": null, "value": "/network/spare", "type": "link", "text": ["spare parameters"], "fullpath": "/network/spare.html"}, " corresponding to shader or material input attributes. Then when you edit the spare parameters, the node authors equivalent changes to the referenced attributes. "], "extent": [298, 552]}, {"type": "para", "indent": 0, "text": ["This is a streamlined version of a more generic ", {"scheme": "Node", "value": "/nodes/lop/editproperties", "type": "link", "text": ["Edit Properties LOP"], "fullpath": "/nodes/lop/editproperties.html"}, " , but focuses on editing shader and material primitives."], "extent": [552, 705]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["How to"], "extent": [705, 718], "body": [{"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["In the ", {"type": "ui", "text": ["Primitives"]}, " field, set the path(s) to the shader or material primitive(s) you want to edit."], "extent": [718, 824]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Click ", {"type": "ui", "text": ["Create Parameters"]}, "."], "extent": [824, 856], "body": [{"type": "para", "indent": 8, "text": ["This populates the node with spare parameters taken from the shader or material primitive."], "extent": [856, 956]}], "container": true}], "container": true}, {"level": 3, "id": "specialize_new_materials", "container": true, "type": "h", "indent": 0, "text": ["Specialize New Materials"], "extent": [956, 1016], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["In the Scene Graph Tree, RMB on a Material prim and choose ", {"type": "ui", "text": ["Specialize New Material"]}, "."], "extent": [1016, 1108]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["This creates an Edit Material Properties node, but configured to specialize new, derivative materials that are based on the ones selected in the Scene Graph Tree."], "extent": [1108, 1274]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["A spare parm ", {"type": "ui", "text": ["Source Material Path"]}, " is created, to clarify which parameter is the source for our new material. It is channel referenced to ", {"type": "ui", "text": ["Primitives"]}, "."], "extent": [1274, 1434]}], "container": true}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Control pop-up menus"], "extent": [1434, 1461], "body": [{"type": "para", "indent": 0, "text": ["The pop-up menu to the left of each parameter controls ", {"type": "em", "text": ["how"]}, " the node authors the attribute:"], "extent": [1461, 1556]}, {"type": "box_group", "body": [{"ext": null, "type": "box", "indent": 0, "role": "item", "extent": [6351, 6357], "body": [{"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Pop-up menu item "], "role": "th", "extent": [6384, 6408], "container": true, "attrs": {"width": "25%"}}, {"type": "cell", "indent": 8, "text": ["Meaning "], "role": "th", "extent": [6428, 6447]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Set or Create "], "role": "td", "extent": [6447, 6468], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Sets the attribute to the given value, whether it previously existed or not."], "extent": [6468, 6554]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Set If Exists "], "role": "td", "extent": [6554, 6574], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Only set the attribute to the given value if it previously existed."], "extent": [6574, 6651]}, {"type": "para", "indent": 8, "text": ["Use this mode to make sure an attribute is only set on primitives of the correct type. For example, only ", {"type": "code", "text": ["UsdGeomSphere"]}, " primitives are likely to have a ", {"type": "code", "text": ["radius"]}, " attribute."], "extent": [6651, 6833]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Block "], "role": "td", "extent": [6833, 6845], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Makes the attribute appear to not exist, so it takes on its default value. (If the attribute doesn\u2019t already exist on the prim, this does nothing.)"], "extent": [6845, 7002]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Disconnect Input "], "role": "td", "extent": [7002, 7025], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Deletes the attribute input connection to its source. Input connections take precedence over attribute values, so disconnecting an input allows the attribute value to take effect."], "extent": [7025, 7214]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Do Nothing "], "role": "td", "extent": [7214, 7231], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Ignore this parameter, don\u2019t create or change the attribute in any way."], "extent": [7231, 7313]}]}], "divider": false}]}], "container": true, "attrs": {"id": "control_menu"}}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips"], "extent": [1595, 1606], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["In any parameter setting an attribute value, you can use the\n  following local variables:"], "extent": [1606, 1700], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["@numprim"]}], "extent": [1700, 1716], "body": [{"type": "para", "indent": 8, "text": ["The total number of primitives being modified by this node."], "extent": [1716, 1784]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["@prim"]}], "extent": [1784, 1797], "body": [{"type": "para", "indent": 8, "text": ["Index of the primitive being modified. This value\n        goes from ", {"type": "code", "text": ["0"]}, " to '", {"type": "code", "text": ["numprim-1"]}, "."], "extent": [1797, 1894]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["@primpath"]}], "extent": [1894, 1911], "body": [{"type": "para", "indent": 8, "text": ["The path of the primitive being modified."], "extent": [1911, 1962]}], "container": true}], "container": true}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["If a Material has the customData ", {"type": "code", "text": ["houdini:dialogScript"]}, ", this node will use that to create a better editing experience. Currently this can only be authored on Builder subnets inside the Material Library LOP."], "extent": [1962, 2173]}], "container": true}, {"type": "para", "indent": 0, "text": ["This node belongs to a class of ", {"type": "strong", "text": ["nodes that create or edit USD prims directly"]}, ". These nodes operate in ", {"type": "em", "text": ["Create mode"]}, " or ", {"type": "em", "text": ["Edit mode"]}, ". This is controlled by a ", {"type": "ui", "text": ["Create primitives"]}, " checkbox or a ", {"type": "em", "text": ["Create/Edit popup menu"]}, ". In create mode, the node creates new prims. In edit mode, the node changes the attributes on an existing prim. The ", {"type": "em", "text": ["Edit mode"]}, " has two variations. ", {"type": "em", "text": ["Edit"]}, " will not modify primitives which have a ", {"type": "code", "text": ["houdini:editable"]}, " attribute set to ", {"type": "code", "text": ["false"]}, ". ", {"type": "em", "text": ["Force edit"]}, " will modify a primitive regardless of the existence or value of this attribute. This attribute can be set on a primitive using the ", {"scheme": null, "value": "/nodes/lop/configureprimitive", "type": "link", "text": ["Configure Primitives LOP"], "fullpath": "/nodes/lop/configureprimitive.html"}, "."], "extent": [5391, 6053]}, {"type": "para", "indent": 0, "text": ["Parameters that correspond to a USD attribute have a pop-up menu to the left that controls ", {"type": "em", "text": ["how"]}, " the node authors the attribute."], "extent": [6053, 6183]}, {"type": "para", "indent": 0, "text": ["In addition to that, any connectable USD attributes (i.e., the ones in the ", {"type": "code", "text": ["inputs:"]}, " namespace) will have menu items that allow disconnecting them from their sources."], "extent": [6183, 6351]}, {"type": "box_group", "body": [{"ext": null, "type": "box", "indent": 0, "role": "item", "extent": [6351, 6357], "body": [{"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Pop-up menu item "], "role": "th", "extent": [6384, 6408], "container": true, "attrs": {"width": "25%"}}, {"type": "cell", "indent": 8, "text": ["Meaning "], "role": "th", "extent": [6428, 6447]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Set or Create "], "role": "td", "extent": [6447, 6468], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Sets the attribute to the given value, whether it previously existed or not."], "extent": [6468, 6554]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Set If Exists "], "role": "td", "extent": [6554, 6574], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Only set the attribute to the given value if it previously existed."], "extent": [6574, 6651]}, {"type": "para", "indent": 8, "text": ["Use this mode to make sure an attribute is only set on primitives of the correct type. For example, only ", {"type": "code", "text": ["UsdGeomSphere"]}, " primitives are likely to have a ", {"type": "code", "text": ["radius"]}, " attribute."], "extent": [6651, 6833]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Block "], "role": "td", "extent": [6833, 6845], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Makes the attribute appear to not exist, so it takes on its default value. (If the attribute doesn\u2019t already exist on the prim, this does nothing.)"], "extent": [6845, 7002]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Disconnect Input "], "role": "td", "extent": [7002, 7025], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Deletes the attribute input connection to its source. Input connections take precedence over attribute values, so disconnecting an input allows the attribute value to take effect."], "extent": [7025, 7214]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Do Nothing "], "role": "td", "extent": [7214, 7231], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Ignore this parameter, don\u2019t create or change the attribute in any way."], "extent": [7231, 7313]}]}], "divider": false}]}], "container": true, "attrs": {"id": "control_menu"}}], "container": true, "role": "item_group"}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2205, 2217], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Sampling Behavior"], "extent": [2242, 2262], "body": [{"type": "para", "indent": 4, "text": ["Cooking this node can generate many USD time samples, rather than just a single time sample at the current time. This can be equivalent to having a ", {"scheme": "Node", "value": "/nodes/lop/cache", "type": "link", "text": ["Cache LOP"], "fullpath": "/nodes/lop/cache.html"}, " following this node, but it will evaluate much faster, and does not cache data from any other nodes. This allows animated data to be authored to USD without introducing a node time dependency which would then cause all following nodes to also be time dependent. This can vastly improve playback performance of some LOP Networks."], "extent": [2262, 2771]}, {"type": "para", "indent": 4, "text": ["In all sampling modes, if a parameter on this node does not vary with time, and does not rely on other time sampled data from the stage, only a single default value will be generated in USD for the corresponding attribute. USD time samples are only generated for parameters that may vary over time."], "extent": [2771, 3075]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Sample Current Frame"], "extent": [3075, 3101], "body": [{"type": "para", "indent": 8, "text": ["A single time sample will be generated for the current time."], "extent": [3101, 3171]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sample Frame Range If Input Is Not Time Dependent"], "extent": [3171, 3226], "body": [{"type": "para", "indent": 8, "text": ["If the input to this node is time dependent, this node behaves as if it is in ", {"type": "code", "text": ["Sample current frame"]}, " mode. Otherwise it behaves as if it is in ", {"type": "code", "text": ["Sample frame range"]}, " mode."], "extent": [3226, 3405]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sample Frame Range"], "extent": [3405, 3429], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "ui", "text": ["Start/End/Inc"]}, " parameter is used to generate multiple times at which this node\u2019s parameters are evaluated, and a USD time sample is created for each attribute at each one of these times."], "extent": [3429, 3632]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Start/End/Inc"], "extent": [3632, 3647], "body": [{"type": "para", "indent": 4, "text": ["When the ", {"type": "ui", "text": ["Sampling behavior"]}, " is ", {"type": "code", "text": ["Sample frame range"]}, ", this parameter controls the number and spacing of base time samples to be generated by this node. The default values of this parameter are ", {"type": "code", "text": ["@fstart"]}, ", ", {"type": "code", "text": ["@fend"]}, ", and ", {"type": "code", "text": ["@finc"]}, ". These values correspond to the start, end, and step size of the global Houdini animation settings when interacting with Houdini. When using a ROP node to generate a range of frames, these values correspond to the start, end, and increment values specified on the ROP node being executed. This default ensures that a USD file written to disk will contain time samples for exactly the frame range requested by the ROP (regardless of the Houdini animation settings)."], "extent": [3647, 4343]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Subframe Sampling"], "extent": [56, 79], "body": [{"type": "para", "indent": 8, "text": ["For each primary sample generated by this node, these parameters can cause additional samples to be generated around that primary sample time. This is most often used to ensure that accurate data exists at exactly the camera shutter open and close times, as well as at the primary sample time."], "extent": [79, 382]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Shutter"], "extent": [382, 395], "body": [{"type": "para", "indent": 8, "text": ["Controls the method used to specify the shutter open and close times relative to the primary sample times."], "extent": [395, 511]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Specify Manually"], "extent": [511, 537], "body": [{"type": "para", "indent": 12, "text": ["The ", {"type": "ui", "text": ["Shutter Open/Close"]}, " parameter values provide exact offset values relative to the primary sample time."], "extent": [537, 659]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Use Camera Prim"], "extent": [659, 684], "body": [{"type": "para", "indent": 12, "text": ["The ", {"type": "ui", "text": ["Camera Prim"]}, " parameter provides the scene graph path of a camera primitive from which the shutter open and close times are extracted to provide the offset values relative to the primary time sample."], "extent": [684, 903]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Shutter Open/Close"], "extent": [903, 927], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Shutter"]}, " is set to ", {"type": "ui", "text": ["Specify Manually"]}, ", these two offset values are added to the primary sample time to indicate the shutter open and close times. The open time should be less than or equal to zero, and the close time should be greater than or equal to zero."], "extent": [927, 1204]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Camera Prim"], "extent": [1204, 1221], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Shutter"]}, " is set to ", {"type": "ui", "text": ["Use Camera Prim"]}, ", this is the scene graph path of a camera prim on the input node\u2019s stage. The shutter open and close attribute values are read from this primitive."], "extent": [1221, 1425]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Samples"], "extent": [1425, 1438], "body": [{"type": "para", "indent": 8, "text": ["The number of subframe samples to create for each primary sample. These samples are evenly distributed between the shutter open and close times. Note that such an even distribution may or may not create a sample at exactly the primary sample time."], "extent": [1438, 1695]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Always Include Frame Sample"], "extent": [1695, 1728], "body": [{"type": "para", "indent": 8, "text": ["When turned on, forces a sample to be created at exactly the primary sample time. If the ", {"type": "ui", "text": ["Samples"]}, " value, together with the shutter open and close times, already place a sample at the primary sample time, turning on this option has no effect. Otherwise, this option causes an addition sample to be added. This means that the actual number of samples per primary sample may in fact be one more than the number specified in the ", {"type": "ui", "text": ["Samples"]}, " parameter."], "extent": [1728, 2189]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Primitives"], "extent": [16, 28], "body": [{"type": "para", "indent": 4, "text": ["The primitive(s) the node should operate on. You can drag primitives from the scene graph tree pane into this textbox to add their paths, or click the ", {"scheme": "Smallicon", "value": "BUTTONS/reselect", "type": "link", "text": "", "fullpath": "/nodes/lop/BUTTONS/reselect.html"}, " Reselect button beside the text box to select the primitives in the viewer, or ", {"keys": ["Ctrl"], "type": "keys", "text": null}, "-click the Reselect button to choose prims from a pop-up tree window. You can also use ", {"scheme": null, "value": "/solaris/pattern", "type": "link", "text": ["primitive patterns"], "fullpath": "/solaris/pattern.html"}, " for advanced matching, including matching all prims in a collection (using ", {"type": "code", "text": ["/path/to/prim.collection:", {"type": "var", "text": ["name"]}]}, ")."], "extent": [50, 560]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [560, 570], "body": [{"type": "para", "indent": 8, "text": ["This parameter needs to be exposed in order for the transform handles to be context-aware. Without it, the handles may not be positioned properly."], "extent": [570, 725]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "primpattern"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Class Prim Path"], "extent": [2712, 2729], "body": [{"type": "para", "indent": 4, "text": ["The path to an existing USD base class primitive from which the edited primitive should inherit the properties."], "extent": [2753, 2870]}], "container": true, "attrs": {"id": "classprimpath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Parameters"], "extent": [2870, 2889], "body": [{"type": "para", "indent": 8, "text": ["Creates spare parameters for editing the values of the input attributes of the material or a shader specified in the ", {"type": "ui", "text": ["Primitives"]}, " parameter."], "extent": [2889, 3041]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Material Outputs"], "extent": [3041, 3066], "body": [{"type": "para", "indent": 8, "text": ["Creates spare parameters for editing the connections of the output attributes of the material or a shader specified in the ", {"type": "ui", "text": ["Primitives"]}, " parameter. They enable changing the terminal shaders of the material."], "extent": [3066, 3284]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Initialize Parameters"], "extent": [1633, 1660], "body": [{"type": "para", "indent": 8, "text": ["Changes the state of all control menu parameters to ", {"type": "code", "text": ["Do Nothing"]}, ", so that this node will not apply any changes. Also grabs the current values of each property from the first ", {"type": "ui", "text": ["Primitives"]}, " match, and sets the values of the corresponding parameters to match. This means that changing any parameter\u2019s control menu to ", {"type": "code", "text": ["Set or Create"]}, " mode will set the property to its current value, making it easier to apply changes to an existing value rather than setting a brand new value."], "extent": [1686, 2169]}], "container": true, "attrs": {"id": "initforedit"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reference Type"], "extent": [3321, 3337], "body": [{"type": "para", "indent": 4, "text": ["This node can edit properties on an existing material primitive or it can create a new on, reference it to an existing primitive, and edit properties on the newly created one.  This is useful when the original material is bound to some geometry whose appearance you don\u2019t want to change, but instead you want to base a new material on an existing one, then tweak it, and bind it to another geometry."], "extent": [3337, 3742]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [3742, 3752], "body": [{"type": "para", "indent": 8, "text": ["Don\u2019t create any referencing primitives; edit the properties on an existing one."], "extent": [3752, 3842]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Reference"], "extent": [3842, 3857], "body": [{"type": "para", "indent": 8, "text": ["Reference an existing primitive and edit properties on the newly created primitive."], "extent": [3857, 3950]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Inherit"], "extent": [3950, 3963], "body": [{"type": "para", "indent": 8, "text": ["Create an ", {"type": "q", "text": ["inherits"]}, " composition arc to an existing primitive and edit properties on the newly created primitive."], "extent": [3963, 4094]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Specialize"], "extent": [4094, 4110], "body": [{"type": "para", "indent": 8, "text": ["Create an ", {"type": "q", "text": ["specializes"]}, " composition arc to an existing primitive and edit properties on the newly created primitive."], "extent": [4110, 4236]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Reference File"], "extent": [4236, 4256], "body": [{"type": "para", "indent": 8, "text": ["Reference an existing primitive in a file on disk and edit properties on the newly created primitive."], "extent": [4256, 4367]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Create Class"], "extent": [4367, 4385], "body": [{"type": "para", "indent": 8, "text": ["Don\u2019t create any referencing primitives. Instead, create a primitive with a ", {"type": "code", "text": ["Specifier"]}, " of ", {"type": "code", "text": ["Over"]}, " under an ancestor primitive with a ", {"type": "code", "text": ["Specifier"]}, " of ", {"type": "code", "text": ["Class"]}, ". This makes it easy to create a primitive that is the target of an inherit or specialize composition arc and override select attributes of the inheriting primitive."], "extent": [4385, 4715]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Class Ancestor"], "extent": [4715, 4731], "body": [{"type": "para", "indent": 4, "text": ["When the ", {"type": "ui", "text": ["Reference type"]}, " is ", {"type": "code", "text": ["Create Class"]}, ", this parameter controls where the ", {"type": "code", "text": ["Class"]}, " specifier primitives end and the ", {"type": "code", "text": ["Over"]}, " primitives begin. Usually the primitive being modified is a descendant of the primitive where the actual inherit composition arc lives, and all primitives below that point should use the ", {"type": "code", "text": ["Over"]}, " specifier, whereas primitives above this point should use ", {"type": "code", "text": ["Class"]}, "."], "extent": [4731, 5126]}], "container": true, "role": "item"}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" Destination Primitive "], "extent": [5126, 5158]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Reference Parent Material"], "extent": [5158, 5186], "body": [{"type": "para", "indent": 4, "text": ["If the ", {"type": "ui", "text": ["Primitives"]}, " parameter specifies a shader primitive, turning this\n    option on will ensure that the newly created primitive will reference its\n    parent material instead of the shader itself.."], "extent": [5209, 5418]}], "container": true, "attrs": {"id": "refparentmat"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Primitive Path"], "extent": [5418, 5434], "body": [{"type": "para", "indent": 4, "text": ["Scene graph path where the new referencing primitive will be created."], "extent": [5453, 5528]}], "container": true, "attrs": {"id": "primpath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Parent Primitive Type"], "extent": [5528, 5551], "body": [{"type": "para", "indent": 4, "text": ["If the prim at ", {"type": "ui", "text": ["Primitive Path"]}, " doesn\u2019t exist, this node will create it. If it has to create the prim, it will give any intermediate prims it has to create this type."], "extent": [5576, 5750]}], "container": true, "attrs": {"id": "parentprimtype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Make Instanceable"], "extent": [5750, 5769], "body": [{"type": "para", "indent": 4, "text": ["If the toggle is on, the newly created referencing primitive will be\n    instanceable."], "extent": [5792, 5883]}], "container": true, "attrs": {"id": "instanceable"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}], "title": ["Edit Material Properties"], "summary": ["Lets you build a spare parameter interface that reflects material or shader input attributes to directly edit their values."], "included": ["/nodes/lop/_primpattern", "/nodes/lop/_sampling", "/nodes/lop/_simple_prims"]}