{"type": "root", "attrs": {"type": "node", "context": "chop", "internal": "fbx", "icon": "ROP/fbx", "since": "17.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["FBX"], "extent": [71, 79]}, {"type": "summary", "indent": 0, "text": ["Reads in channel data from an FBX file."], "extent": [79, 127]}, {"type": "para", "indent": 0, "text": ["This CHOP reads in animation from an ", {"scheme": null, "value": "/io/fbx", "type": "link", "text": ["FBX file"], "fullpath": "/io/fbx.html"}, " for use by CHOPs.\nFBX files can be loaded through the ", {"scheme": "Node", "value": "/nodes/chop/file", "type": "link", "text": ["File CHOP"], "fullpath": "/nodes/chop/file.html"}, ", but this node provides a more convenient interface for the FBX-specific import options. "], "extent": [127, 355]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [355, 367], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["File"], "extent": [367, 379], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["File Name"], "extent": [379, 391], "body": [{"type": "para", "indent": 4, "text": ["The name of the file to load."], "extent": [391, 426]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reload File"], "extent": [426, 439], "body": [{"type": "para", "indent": 4, "text": ["Reload the file to react to external changes to it."], "extent": [439, 496]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Take Name"], "extent": [496, 507], "body": [{"type": "para", "indent": 4, "text": ["Specifies which take in the FBX file to import animation from.\n    If empty, the file\u2019s default take will be used."], "extent": [524, 644]}], "container": true, "attrs": {"id": "fbxtake"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Override Sample Rate"], "extent": [13890, 13912], "body": [{"type": "para", "indent": 4, "text": ["Specifies whether to use the value of the ", {"type": "ui", "text": ["Sample Rate"]}, " parameter instead of the sample rate stored in the FBX file.\n    This is useful if the application that exported the original FBX file did not set the sample rate correctly."], "extent": [13944, 14181]}], "container": true, "attrs": {"id": "fbxoverridesamplerate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sample Rate"], "extent": [14181, 14194], "body": [{"type": "para", "indent": 4, "text": ["Sample rate to use for the clip when ", {"type": "ui", "text": ["Override Sample Rate"]}, " is enabled."], "extent": [14218, 14297]}], "container": true, "attrs": {"id": "fbxsamplerate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Convert Units"], "extent": [12487, 12502], "body": [{"type": "para", "indent": 4, "text": ["Specifies whether to convert to Houdini units when importing the FBX file."], "extent": [12524, 12604]}], "container": true, "attrs": {"id": "convertunits"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Minimal Nodes"], "extent": [777, 792], "body": [{"type": "para", "indent": 4, "text": ["Only include animation for nodes whose display flags are on.\n    If you turn this off, ", {"type": "em", "text": ["all"]}, " nodes in the hierarchy are included in the clip."], "extent": [814, 961]}], "container": true, "attrs": {"id": "minimalnodes"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Transforms for Deforming Shapes"], "extent": [961, 999], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Minimal Nodes"]}, " is enabled, specifies whether channels for nodes containing deforming geometry are included in the clip."], "extent": [1033, 1166]}], "container": true, "attrs": {"id": "keepdeformingshapexforms"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rate Options"], "extent": [1166, 1180], "body": [{"type": "para", "indent": 4, "text": ["Allows you to change the sample rate of the file."], "extent": [1180, 1235]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["No Change"], "extent": [1235, 1250], "body": [{"type": "para", "indent": 8, "text": ["Use the file\u2019s sample rate."], "extent": [1250, 1286]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Override"], "extent": [1286, 1300], "body": [{"type": "para", "indent": 8, "text": ["Change the file\u2019s sample rate to a new rate."], "extent": [1300, 1353]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample"], "extent": [1353, 1367], "body": [{"type": "para", "indent": 8, "text": ["Change the file\u2019s sample rate to a new rate and keep the\n        time range constant."], "extent": [1367, 1462]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sample Rate"], "extent": [1462, 1475], "body": [{"type": "para", "indent": 4, "text": ["The new sample rate to use if Override or Resample is selected."], "extent": [1475, 1544]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Extend Left"], "extent": [1544, 1557], "body": [{"type": "para", "indent": 4, "text": ["The extend condition before the channel\u2019s beginning."], "extent": [1557, 1615]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Extend Right"], "extent": [1615, 1629], "body": [{"type": "para", "indent": 4, "text": ["The extend condition after the channel\u2019s ending."], "extent": [1629, 1683]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Default Value"], "extent": [1683, 1698], "body": [{"type": "para", "indent": 4, "text": ["The value of the default value extend condition."], "extent": [1698, 1752]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": "common", "container": true, "type": "h", "indent": 0, "text": ["Common"], "extent": [2334, 2356], "body": [{"type": "para", "indent": 0, "text": ["Some of these parameters may not be available on all CHOP nodes."], "extent": [2356, 2423]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Scope"], "extent": [2423, 2430], "body": [{"type": "para", "indent": 4, "text": ["To determine the channels that are affected, some CHOPs have a scope string. Patterns can be used in ", {"type": "ui", "text": ["Scope"]}, ", for example ", {"type": "code", "text": ["*"]}, " (match all), and ", {"type": "code", "text": ["?"]}, " (match single character). "], "extent": [2430, 2615]}, {"type": "para", "indent": 4, "text": ["The following are examples of possible channel name matching options:"], "extent": [2615, 2694]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan2"]}], "extent": [2694, 2707], "body": [{"type": "para", "indent": 8, "text": ["Matches a single channel name."], "extent": [2707, 2751]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan3 tx ty tz"]}], "extent": [2751, 2773], "body": [{"type": "para", "indent": 8, "text": ["Matches four channel names, separated by spaces."], "extent": [2773, 2835]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan*"]}], "extent": [2835, 2848], "body": [{"type": "para", "indent": 8, "text": ["Matches each channel that starts with ", {"type": "code", "text": ["chan"]}, "."], "extent": [2848, 2911]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["*foot*"]}], "extent": [2911, 2925], "body": [{"type": "para", "indent": 8, "text": ["Matches each channel that has ", {"type": "code", "text": ["foot"]}, " in it."], "extent": [2925, 2982]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["t?"]}], "extent": [2982, 2992], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "code", "text": ["?"]}, " matches a single character. ", {"type": "code", "text": ["t?"]}, " matches two-character channels starting with t.  "], "extent": [2992, 3096]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["blend[3-7:2]"]}], "extent": [3096, 3116], "body": [{"type": "para", "indent": 8, "text": ["Matches number ranges, giving ", {"type": "code", "text": ["blend3"]}, ", ", {"type": "code", "text": ["blend5"]}, ", and ", {"type": "code", "text": ["blend7"]}, "."], "extent": [3116, 3197]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["blend[2-3,5,13]"]}], "extent": [3197, 3220], "body": [{"type": "para", "indent": 8, "text": ["Matches channels ", {"type": "code", "text": ["blend2"]}, ", ", {"type": "code", "text": ["blend3"]}, ", ", {"type": "code", "text": ["blend5"]}, ", ", {"type": "code", "text": ["blend13"]}, "."], "extent": [3220, 3291]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["t[xyz]"]}], "extent": [3291, 3305], "body": [{"type": "para", "indent": 8, "text": [{"type": "code", "text": ["[xyz]"]}, "matches three characters, giving channels ", {"type": "code", "text": ["tx"]}, ", ", {"type": "code", "text": ["ty"]}, " and ", {"type": "code", "text": ["tz"]}, "."], "extent": [3305, 3393]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sample Rate Match"], "extent": [3393, 3412], "body": [{"type": "para", "indent": 4, "text": ["The ", {"type": "ui", "text": ["Sample Rate Match"]}, " options handle cases where multiple input CHOPs\u2019 sample rates are different."], "extent": [3412, 3524]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Resample At First Input\u2019s Rate"], "extent": [3524, 3560], "body": [{"type": "para", "indent": 8, "text": ["Use the rate of the first input to resample the others."], "extent": [3560, 3633]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample At Maximum Rate"], "extent": [3633, 3663], "body": [{"type": "para", "indent": 8, "text": ["Resample to the highest sample rate."], "extent": [3663, 3713]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample At Minimum Rate"], "extent": [3713, 3743], "body": [{"type": "para", "indent": 8, "text": ["Resample to the lowest sample rate."], "extent": [3743, 3796]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Error if Rates Differ"], "extent": [3796, 3823], "body": [{"type": "para", "indent": 8, "text": ["Does not accept conflicting sample rates."], "extent": [3823, 3878]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Units"], "extent": [3878, 3885], "body": [{"type": "para", "indent": 4, "text": ["The units of the time parameters."], "extent": [3885, 3928]}, {"type": "para", "indent": 4, "text": ["For example, you can specify the amount of time a lag should last for in seconds (default), frames (at the Houdini FPS), or samples (in the CHOP\u2019s sample rate)."], "extent": [3928, 4098]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [4098, 4108], "body": [{"type": "para", "indent": 8, "text": ["When you change the ", {"type": "ui", "text": ["Units"]}, " parameter, the existing parameters are not converted to the new units."], "extent": [4108, 4222]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Time Slice"], "extent": [4222, 4234], "body": [{"type": "para", "indent": 4, "text": ["Time slicing is a feature that boosts cooking performance and reduces memory usage. Traditionally, CHOPs calculate the channel over its entire frame range. If the channel needs to be evaluated every frame, then cooking the entire range of the channel is unnecessary. It is more efficient to calculate only the fraction of the channel that is needed. This fraction is the ", {"type": "ui", "text": ["Time Slice"]}, "."], "extent": [4234, 4626]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Unload"], "extent": [4626, 4634], "body": [{"type": "para", "indent": 4, "text": ["Causes the memory consumed by a CHOP to be released after it is cooked, and the data passed to the next CHOP."], "extent": [4634, 4749]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Export Prefix"], "extent": [4749, 4764], "body": [{"type": "para", "indent": 4, "text": ["The ", {"type": "ui", "text": ["Export Prefix"]}, " is prepended to CHOP channel names to determine where to export to. "], "extent": [4764, 4864]}, {"type": "para", "indent": 4, "text": ["For example, if the CHOP channel was named ", {"type": "code", "text": ["geo1:tx"]}, ", and the prefix was ", {"type": "code", "text": ["/obj"]}, ", the channel would be exported to ", {"type": "code", "text": ["/obj/geo1/tx"]}, "."], "extent": [4864, 5003]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [5003, 5013], "body": [{"type": "para", "indent": 8, "text": ["You can leave the ", {"type": "ui", "text": ["Export Prefix"]}, " blank, but then your CHOP track names need to be absolute paths, such as ", {"type": "code", "text": ["obj:geo1:tx"]}, "."], "extent": [5013, 5146]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Graph Color"], "extent": [5146, 5159], "body": [{"type": "para", "indent": 4, "text": ["Every CHOP has this option. Each CHOP gets a default color assigned to it for display in the graph, but you can override the color with the ", {"type": "ui", "text": ["Graph Color"]}, ". There are 36 RGB color combinations in the palette."], "extent": [5159, 5373]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Graph Color Step"], "extent": [5373, 5391], "body": [{"type": "para", "indent": 4, "text": ["When the graph displays the animation curves, and a CHOP has two or more channels, this defines the difference in color from one channel to the next, giving a rainbow spectrum of colors."], "extent": [5391, 5583]}], "container": true, "role": "item"}], "container": true}]}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [1777, 1786], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/chop/file", "type": "link", "text": "", "fullpath": "/nodes/chop/file.html"}], "extent": [1786, 1809]}], "container": true}], "text": "Related"}], "title": ["FBX"], "summary": ["Reads in channel data from an FBX file."], "included": ["/nodes/chop/common", "/nodes/sop/agent", "/nodes/sop/lopimport"]}