{"type": "root", "attrs": {"type": "node", "context": "top", "internal": "ffmpegextractimages", "icon": "TOP/ffmpeg", "tags": "ffmpeg, video, extract", "since": "17.5", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["FFmpeg Extract Images"], "extent": [144, 170]}, {"type": "summary", "indent": 0, "text": ["Extracts a sequence of still images from a video file."], "extent": [170, 233]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [233, 239], "body": [{"type": "para", "indent": 5, "text": ["For information about the opposite operation of compiling frame images into a video, see the ", {"scheme": "Node", "value": "/nodes/top/ffmpegencodevideo", "type": "link", "text": ["FFmpeg Encode Video"], "fullpath": "/nodes/top/ffmpegencodevideo.html"}, " node documentation."], "extent": [239, 407]}], "container": true}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [407, 422], "body": [{"type": "para", "indent": 0, "text": ["You can use this node in two ways:"], "extent": [422, 458]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["If the node has no inputs, you can specify a video file from which to extract images."], "extent": [458, 546]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["If the node has incoming work items with a video file ", {"type": "code", "text": ["output"]}, ", you can extract frames for each incoming work item."], "extent": [546, 665], "body": [{"type": "para", "indent": 4, "text": ["This node generates ", {"type": "em", "text": ["one"]}, " work item to extract all images from the input video. It does ", {"type": "em", "text": ["not"]}, " generate separate work items for each frame."], "extent": [665, 809]}, {"type": "para", "indent": 4, "text": ["The ", {"type": "code", "text": ["output"]}, " of the work item is an array of output file names. If you want to wire the output to nodes that expect separate work items per file, use the ", {"scheme": "Icon", "value": "TOP/workitemexpand.svg", "type": "link", "text": "", "fullpath": "/nodes/top/TOP/workitemexpand.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/top/workitemexpand", "type": "link", "text": ["Work Item Expand"], "fullpath": "/nodes/top/workitemexpand.html"}, " node to split out the output files in the work item(s)."], "extent": [809, 1097]}], "container": true}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Installation"], "extent": [1097, 1116], "body": [{"type": "para", "indent": 0, "text": ["This node is a wrapper around the ", {"type": "code", "text": ["ffmpeg"]}, " command line tool. By default, it uses the version of FFmpeg that ships with Houdini as `$HFS/bin/hffmpeg. You can also install your own version of FFmpeg and use that instead."], "extent": [613, 835]}, {"type": "para", "indent": 0, "text": ["For the node to find a custom installation of the FFmpeg command line tool, the path to the tool\u2019s executable binary must be available via one of the following methods:"], "extent": [835, 1004]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["The system path."], "extent": [1004, 1023]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Specified in an environment variable ", {"type": "code", "text": ["PDG_FFMPEG"]}, "."], "extent": [1023, 1076]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Specified directly in the node by the ", {"type": "ui", "text": ["FFmpeg Binary Path"]}, " parameter."], "extent": [1076, 1151]}], "container": true}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [1151, 1156], "body": [{"type": "para", "indent": 4, "text": ["The ", {"type": "code", "text": ["$HH/help/files/pdg_examples/top_multishot"]}, " and ", {"type": "code", "text": ["$HH/help/files/pdg_examples/top_rop"]}, " examples show how you can use this node to create a movie from rendered images."], "extent": [1156, 1331]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 1, "id": "top_attributes", "container": true, "type": "top_attributes_section", "indent": 0, "role": "section", "extent": [1155, 1171], "body": [{"type": "top_attributes_item_group", "body": [{"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["height"]}], "role": "item", "extent": [1171, 1183], "body": [{"type": "para", "indent": 4, "text": ["The height of the outputted images."], "extent": [1203, 1244]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["width"]}], "role": "item", "extent": [1244, 1255], "body": [{"type": "para", "indent": 4, "text": ["The width of the outputted images."], "extent": [1275, 1315]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["fps"]}], "role": "item", "extent": [1315, 1324], "body": [{"type": "para", "indent": 4, "text": ["The frames per second."], "extent": [1342, 1370]}], "container": true, "attrs": {"type": "float"}}], "container": true, "role": "item_group"}], "text": "Top_attributes"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1370, 1382], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Node"], "extent": [1382, 1394], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Generate When"], "extent": [16, 31], "body": [{"type": "para", "indent": 4, "text": ["Determines when this node will generate work items. You should generally leave this set to ", {"type": "q", "text": ["Automatic"]}, " unless you know the node requires a specific generation mode, or that the work items need to be generated dynamically."], "extent": [64, 291]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["All Upstream Items are Generated"], "extent": [291, 329], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items once all of the input nodes have generated their work items."], "extent": [329, 437]}], "container": true}, {"type": "dt", "indent": 4, "text": ["All Upstream Items are Cooked"], "extent": [437, 472], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items once all of the input nodes have cooked their work items."], "extent": [472, 577]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Each Upstream Item is Cooked"], "extent": [577, 611], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items each time a work item in an input node is cooked."], "extent": [611, 708]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [708, 723], "body": [{"type": "para", "indent": 11, "text": ["The generation mode is selected based on the generation mode of the input nodes. If any of the input nodes are generating work items when their inputs cook, this node will be set to ", {"type": "ui", "text": ["Each Upstream Item is Cooked"]}, ". Otherwise, it will be set to ", {"type": "ui", "text": ["All Upstream Items are Generated"]}, "."], "extent": [723, 1018]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemgeneration"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cook Type"], "extent": [2304, 2315], "body": [{"type": "para", "indent": 4, "text": ["Determines how work items in the node should cook, e.g. if they should run in process, out of process, or using services."], "extent": [2338, 2465]}], "container": true, "attrs": {"id": "pdg_cooktype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Run on Service Block"], "extent": [2465, 2487], "body": [{"type": "para", "indent": 4, "text": ["Determines whether or not work items in this node should run on the parent service block, if one exists."], "extent": [2517, 2627]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Always"], "extent": [2627, 2639], "body": [{"type": "para", "indent": 8, "text": ["Always run work items on the block\u2019s service, regardless of any other service settings on this node."], "extent": [2639, 2749]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Match"], "extent": [2749, 2760], "body": [{"type": "para", "indent": 8, "text": ["Only run work items on the block\u2019s service if ", {"type": "ui", "text": ["Service Name"]}, " matches the service name that\u2019s used by the block."], "extent": [2760, 2883]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Never"], "extent": [2883, 2894], "body": [{"type": "para", "indent": 8, "text": ["Never run work items on the block\u2019s service."], "extent": [2894, 2948]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_useserviceblock"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Service Name"], "extent": [2948, 2962], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Cook Type"]}, " is set to the ", {"type": "ui", "text": ["Service"]}, ", this parameter is used to specify the name of the service. For more information on using services, see the ", {"scheme": null, "value": "/tops/services", "type": "link", "text": ["PDG Service Manager"], "fullpath": "/tops/services.html"}, " documentation."], "extent": [2988, 3198]}], "container": true, "attrs": {"id": "pdg_servicename"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 0, "text": [" Source "], "extent": [1579, 1596], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Input Source"], "extent": [1596, 1615], "body": [{"type": "para", "indent": 8, "text": ["Specifies the input source."], "extent": [1641, 1678]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Upstream Output File"], "extent": [1678, 1708], "body": [{"type": "para", "indent": 12, "text": ["Sets the input as the first output file from the upstream work item with the tag specified by the ", {"type": "ui", "text": ["File Tag"]}, " parameter."], "extent": [1708, 1843]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Custom File Path"], "extent": [1843, 1869], "body": [{"type": "para", "indent": 12, "text": ["Sets the input as the video specified by the ", {"type": "ui", "text": ["File Path"]}, " parameter. "], "extent": [1869, 1953]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "inputsource"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["File Tag"], "extent": [1953, 1967], "body": [{"type": "para", "indent": 8, "text": ["Specifies the file tag of the input source."], "extent": [1994, 2047]}], "container": true, "attrs": {"id": "inputfiletag"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["File Path"], "extent": [2047, 2062], "body": [{"type": "para", "indent": 8, "text": ["Specifies the file path of the input source."], "extent": [2090, 2144]}], "container": true, "attrs": {"id": "inputfilepath"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" Controls "], "extent": [2144, 2163], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Frames per Second"], "extent": [2163, 2187], "body": [{"type": "para", "indent": 8, "text": ["Sets the number of images to extract per second."], "extent": [2205, 2263]}], "container": true, "attrs": {"id": "fps"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Output File Pattern"], "extent": [2263, 2288], "body": [{"type": "para", "indent": 8, "text": ["Specifies the output pattern of the extracted images."], "extent": [2320, 2383]}], "container": true, "attrs": {"id": "outputfilepattern"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["File Tag"], "extent": [2383, 2397], "body": [{"type": "para", "indent": 8, "text": ["Specifies the file tag of the outputted images."], "extent": [2425, 2482]}], "container": true, "attrs": {"id": "outputfiletag"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" Options "], "extent": [2482, 2500], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Width"], "extent": [2500, 2512], "body": [{"type": "para", "indent": 8, "text": ["When on, specifies the width of the output images."], "extent": [2532, 2592]}], "container": true, "attrs": {"id": "width"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Height"], "extent": [2592, 2604], "body": [{"type": "para", "indent": 8, "text": ["When on, specifies the height of the output images."], "extent": [2625, 2686]}], "container": true, "attrs": {"id": "height"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" FFmpeg "], "extent": [2686, 2703], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["FFmpeg Binary"], "extent": [2703, 2723], "body": [{"type": "para", "indent": 8, "text": ["Specifies how FFmpeg is called."], "extent": [2750, 2791]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["System Path"], "extent": [2791, 2812], "body": [{"type": "para", "indent": 12, "text": ["Calls FFmpeg from the system path (if available)."], "extent": [2812, 2875]}], "container": true}, {"type": "dt", "indent": 8, "text": ["$PDG_FFMPEG"], "extent": [2875, 2896], "body": [{"type": "para", "indent": 12, "text": ["Calls FFmpeg using the path stored in the ", {"type": "code", "text": ["PDG_FFMPEG"]}, " environment variable. This environment variable ", {"type": "em", "text": ["must"]}, " be user-created."], "extent": [2896, 3036]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Custom Path"], "extent": [3036, 3057], "body": [{"type": "para", "indent": 12, "text": ["Calls the FFmpeg binary using the path specified by the ", {"type": "ui", "text": ["FFmpeg Binary Path"]}, " parameter."], "extent": [3057, 3160]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Houdini FFmpeg"], "extent": [3160, 3184], "body": [{"type": "para", "indent": 12, "text": ["Uses the copy of FFmpeg that ships with Houdini, i.e. ", {"type": "code", "text": ["$HFS/bin/hffmpeg"]}, "."], "extent": [3184, 3271]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "ffmpegbinary"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["FFmpeg Binary Path"], "extent": [3271, 3295], "body": [{"type": "para", "indent": 8, "text": ["Specifies the path to the FFmpeg binary."], "extent": [3326, 3376]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["FFmpeg Binary"]}, " is set to ", {"type": "ui", "text": ["Custom Path"]}, "."], "extent": [3376, 3468]}], "container": true, "attrs": {"id": "ffmpegbinarypath"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["FFmpeg Command"], "extent": [3468, 3488], "body": [{"type": "para", "indent": 8, "text": ["When on, specifies the FFmpeg command that is called when the work item cooks. You can modify this command, but it will ", {"type": "em", "text": ["not"]}, " automatically update if the other parameters change."], "extent": [3516, 3704]}], "container": true, "attrs": {"id": "ffmpegcommand"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Schedulers"], "extent": [3704, 3721], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["TOP Scheduler Override"], "extent": [6683, 6707], "body": [{"type": "para", "indent": 4, "text": ["This parameter overrides the TOP scheduler for this node."], "extent": [6730, 6793]}], "container": true, "attrs": {"id": "topscheduler"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Schedule When"], "extent": [10796, 10811], "body": [{"type": "para", "indent": 4, "text": ["When enabled, this parameter can be used to specify an expression that determines which work items from the node should be scheduled. If the expression returns zero for a given work item, that work item will immediately be marked as cooked instead of being queued with a scheduler. If the expression returns a non-zero value, the work item is scheduled normally."], "extent": [10838, 11206]}], "container": true, "attrs": {"id": "pdg_schedulewhen"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Add Job Parms"], "extent": [6793, 6808], "body": [{"type": "para", "indent": 4, "text": ["Opens the ", {"scheme": null, "value": "/ref/windows/edit_parameter_interface", "type": "link", "text": ["Edit Parameter Interface"], "fullpath": "/ref/windows/edit_parameter_interface.html"}, "  window for the purpose of adding scheduler parameters to the node\u2019s interface."], "extent": [6830, 6990]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["In-Process Scheduler"], "extent": [6990, 7016], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "ui", "text": ["Edit Parameter Interface"]}, " window opens with the ", {"scheme": "Icon", "value": "/icons/TOP/scheduler.svg", "type": "link", "text": "", "fullpath": "/icons/TOP/scheduler.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/top/inprocessscheduler", "type": "link", "text": ["In-Process Scheduler\u2019s"], "fullpath": "/nodes/top/inprocessscheduler.html"}, " parameter folder selected in the ", {"type": "ui", "text": ["Create Parameters"]}, " column."], "extent": [7016, 7228]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Local Scheduler"], "extent": [7228, 7249], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "ui", "text": ["Edit Parameter Interface"]}, " window opens with the ", {"scheme": "Icon", "value": "/icons/TOP/scheduler.svg", "type": "link", "text": "", "fullpath": "/icons/TOP/scheduler.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/top/localscheduler", "type": "link", "text": ["Local Scheduler\u2019s"], "fullpath": "/nodes/top/localscheduler.html"}, " parameter folder selected in the ", {"type": "ui", "text": ["Create Parameters"]}, " column."], "extent": [7249, 7452]}], "container": true}, {"type": "dt", "indent": 4, "text": ["HQueue Scheduler"], "extent": [7452, 7474], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "ui", "text": ["Edit Parameter Interface"]}, " window opens with the ", {"scheme": "Icon", "value": "/icons/MISC/hqueue_logo.svg", "type": "link", "text": "", "fullpath": "/icons/MISC/hqueue_logo.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/top/hqueuescheduler", "type": "link", "text": ["HQueue Scheduler\u2019s"], "fullpath": "/nodes/top/hqueuescheduler.html"}, " parameter folder selected in the ", {"type": "ui", "text": ["Create Parameters"]}, " column."], "extent": [7474, 7682]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "addjobparms"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Work Item Label"], "extent": [9661, 9678], "body": [{"type": "para", "indent": 4, "text": ["Determines how the node should label its work items. This parameter allows you to assign non-unique label strings to your work items which are then used to identify the work items in the attribute panel, task bar, and scheduler job names."], "extent": [9706, 9950]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Use Default Label"], "extent": [9950, 9974], "body": [{"type": "para", "indent": 8, "text": ["The work items in this node will use the default label from the TOP network, or have no label if the default is unset."], "extent": [9974, 10102]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Inherit From Upstream Item"], "extent": [10102, 10135], "body": [{"type": "para", "indent": 8, "text": ["The work items inherit their labels from their parent work items.        "], "extent": [10135, 10218]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom Expression"], "extent": [10218, 10242], "body": [{"type": "para", "indent": 8, "text": ["The work item label is set to the ", {"type": "ui", "text": ["Label Expression"]}, " custom expression which is evaluated for each item."], "extent": [10242, 10358]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Node Defines Label"], "extent": [10358, 10383], "body": [{"type": "para", "indent": 8, "text": ["The work item label is defined in the node\u2019s internal logic."], "extent": [10383, 10453]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemlabel"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Label Expression"], "extent": [10453, 10471], "body": [{"type": "para", "indent": 4, "text": ["When on, this parameter specifies a custom label for work items created by this node. The parameter can be an expression that includes references to work item attributes or built-in properties. For example, ", {"type": "code", "text": ["$OS: @pdg_frame"]}, " will set the label of each work item based on its frame value."], "extent": [10503, 10796]}], "container": true, "attrs": {"id": "pdg_workitemlabelexpr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Work Item Priority"], "extent": [7682, 7702], "body": [{"type": "para", "indent": 4, "text": ["This parameter determines how the current scheduler prioritizes the work items in this node."], "extent": [7733, 7831]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Inherit From Upstream Item"], "extent": [7831, 7864], "body": [{"type": "para", "indent": 11, "text": ["The work items inherit their priority from their parent items. If a work item has no parent, its priority is set to 0."], "extent": [7864, 7995]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom Expression"], "extent": [7995, 8019], "body": [{"type": "para", "indent": 11, "text": ["The work item priority is set to the value of ", {"type": "ui", "text": ["Priority Expression"]}, "."], "extent": [8019, 8102]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Node Defines Priority"], "extent": [8102, 8130], "body": [{"type": "para", "indent": 7, "text": ["The work item priority is set based on the node\u2019s own internal priority calculations."], "extent": [8130, 8235]}, {"type": "para", "indent": 7, "text": ["This option is only available on the ", {"scheme": "Icon", "value": "MISC/python.svg", "type": "link", "text": "", "fullpath": "/nodes/top/MISC/python.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/top/pythonprocessor", "type": "link", "text": ["Python Processor TOP"], "fullpath": "/nodes/top/pythonprocessor.html"}, ", ", {"scheme": "Icon", "value": "TOP/ropfetch.svg", "type": "link", "text": "", "fullpath": "/nodes/top/TOP/ropfetch.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/top/ropfetch", "type": "link", "text": ["ROP Fetch TOP"], "fullpath": "/nodes/top/ropfetch.html"}, ", and ROP Output TOP nodes. These nodes define their own prioritization schemes that are implemented in their node logic."], "extent": [8235, 8531]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitempriority"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Priority Expression"], "extent": [8531, 8552], "body": [{"type": "para", "indent": 4, "text": ["This parameter specifies an expression for work item priority. The expression is evaluated for each work item in the node."], "extent": [8587, 8715]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Work Item Priority"]}, " is set to ", {"type": "ui", "text": ["Custom Expression"]}, "."], "extent": [8715, 8814]}], "container": true, "attrs": {"id": "pdg_workitempriorityexpr"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [4075, 4084], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/ffmpegencodevideo", "type": "link", "text": "", "fullpath": "/nodes/top/ffmpegencodevideo.html"}], "extent": [4084, 4116]}], "container": true}], "text": "Related"}], "title": ["FFmpeg Extract Images"], "summary": ["Extracts a sequence of still images from a video file."], "included": ["/nodes/top/ffmpegencodevideo", "/nodes/top/processor_common"]}