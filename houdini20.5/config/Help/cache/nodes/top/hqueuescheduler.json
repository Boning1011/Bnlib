{"type": "root", "attrs": {"type": "node", "context": "top", "internal": "hqueuescheduler", "icon": "MISC/hqueue_logo", "since": "17.5", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["HQueue Scheduler"], "extent": [100, 121]}, {"type": "summary", "indent": 0, "text": ["Schedules work items using HQueue."], "extent": [121, 164]}, {"type": "para", "indent": 0, "text": ["This node schedules work items using ", {"scheme": null, "value": "/hqueue/overview", "type": "link", "text": ["HQueue"], "fullpath": "/hqueue/overview.html"}, " in order to execute them on remote machines."], "extent": [164, 273]}, {"type": "para", "indent": 0, "text": ["For more information on configuring HQueue, see ", {"scheme": null, "value": "https://vimeo.com/290594152", "type": "link", "text": ["Getting Started with HQueue"], "exists": true}, " or ", {"scheme": null, "value": "https://vimeo.com/323269057", "type": "link", "text": ["PDG For Design Work Pt. 3 - Setting Up Distributed PDG"], "exists": true}, "."], "extent": [273, 468], "body": [], "container": true, "attrs": {"glyph": "fa-vimeo-square"}}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Cook Modes"], "extent": [495, 512], "body": [{"type": "para", "indent": 0, "text": ["This scheduler can operate in two different cook modes:"], "extent": [512, 569]}, {"type": "bullet_group", "body": [{"blevel": 3, "type": "bullet", "indent": 0, "text": ["The ", {"type": "em", "text": ["normal cook"]}, " mode connects to your HQueue scheduler and creates jobs for work items as they become ready to execute, and the jobs then communicate back to the submitting machine with status changes. This means that the submitting Houdini session ", {"type": "em", "text": ["must"]}, " remain open for the duration of the cook."], "extent": [569, 873], "body": [{"type": "para", "indent": 4, "text": ["This mode is used whenever you select ", {"type": "ui", "text": ["Cook"]}, " from any of the menus or buttons in the TOP UI."], "extent": [873, 973]}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The ", {"type": "em", "text": ["standalone job"]}, " mode cooks the entire TOP network as a standalone job. In this mode, the submitting Houdini session is detached from the cooking of the TOP network, the ", {"type": "code", "text": [".hip"]}, " file is copied if necessary, and a ", {"type": "code", "text": ["hython"]}, " process executes the TOP network using the default scheduler for that topnet. You will also ", {"type": "em", "text": ["not"]}, " see any updates to your current Houdini session. To check the progress of your job when using this mode, you will need to use the HQueue web portal."], "extent": [973, 1448], "body": [{"type": "para", "indent": 4, "text": ["This mode is used whenever you click the ", {"scheme": null, "value": "#submitjob", "type": "link", "text": ["Submit Graph As Job"], "fullpath": "/nodes/top/hqueuescheduler.html#submitjob", "fragment": "#submitjob"}, " > ", {"type": "ui", "text": ["Submit"]}, " button in the HQueue Scheduler\u2019s parameters."], "extent": [1448, 1585]}], "container": true}], "container": true}, {"level": 3, "id": "network", "container": true, "type": "h", "indent": 0, "text": ["Network Requirements"], "extent": [3215, 3252], "body": [{"type": "para", "indent": 0, "text": ["As part of the cook, a message queue (MQ) job is submitted. This job is used to communicate information from executing jobs back to the submitting machine. For this reason, your farm machines must be able to resolve the hostnames of other farm machines."], "extent": [3252, 3508]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [3508, 3513], "body": [{"type": "para", "indent": 4, "text": ["This is as simple as editing the ", {"type": "code", "text": ["/etc/hosts"]}, " (Linux / macOS) or ", {"type": "code", "text": ["C:\\Windows\\System32\\Drivers\\etc\\hosts"]}, " (Windows)."], "extent": [3513, 3634]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["In addition, farm machines must ", {"type": "em", "text": ["not"]}, " have firewalls between them, or you need to use the ", {"type": "ui", "text": ["Task Callback Port"]}, " parameter to specify the open port to use."], "extent": [3634, 3791]}, {"type": "para", "indent": 0, "text": ["When the cook starts, the submitting machine connects to the farm machine that is running the MQ job. So farm machines also must ", {"type": "em", "text": ["not"]}, " have firewalls between them and the submitting machine, or you need to use the ", {"type": "ui", "text": ["Relay Port"]}, " parameter to specify the open port to use."], "extent": [3791, 4064]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Enable Server"], "extent": [4064, 4079], "body": [{"type": "para", "indent": 4, "text": ["When on, turns on the data layer server for the TOP job that will cook on the farm. This allows PilotPDG or other WebSocket clients to connect to the cooking job remotely to view the state of PDG."], "extent": [4111, 4313]}], "container": true, "attrs": {"id": "enabledatalayerserver"}}, {"type": "dt", "indent": 0, "text": ["Server Port"], "extent": [4313, 4326], "body": [{"type": "para", "indent": 4, "text": ["Determines which server port to use for the data layer server."], "extent": [4353, 4421]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Enable Server"]}, " is ", {"type": "em", "text": ["on"]}, "."], "extent": [4421, 4491]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [4491, 4506], "body": [{"type": "para", "indent": 8, "text": ["A free TCP port to use for the data layer server chosen by the node."], "extent": [4506, 4584]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [4584, 4596], "body": [{"type": "para", "indent": 8, "text": ["A custom TCP port to use for the data layer server specified by the user."], "extent": [4596, 4679]}, {"type": "para", "indent": 8, "text": ["This is useful when there is a firewall between the farm machine and the monitoring machine."], "extent": [4679, 4781]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "usedatalayerport"}}, {"type": "dt", "indent": 0, "text": ["Auto Connect"], "extent": [4781, 4795], "body": [{"type": "para", "indent": 4, "text": ["When on, the scheduler will try to send a command to create a remote visualizer when the job starts. If successful, then a remote graph is created and is automatically connected to the server executing the job. The client submitting the job ", {"type": "em", "text": ["must"]}, " be visible to the server running the job or the connection will fail."], "extent": [4823, 5146]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Enable Server"]}, " is ", {"type": "em", "text": ["on"]}, "."], "extent": [5146, 5216]}], "container": true, "attrs": {"id": "createremotegraph"}}, {"type": "dt", "indent": 0, "text": ["When Finished"], "extent": [5216, 5231], "body": [{"type": "para", "indent": 4, "text": ["Determines what to do when the TOP Cook finishes. This allows the TOP Cook job to continue running after the graph cook completes so that it can be inspected by a wrangler using a ", {"scheme": null, "value": "/tops/datalayer", "type": "link", "text": ["Data Layer"], "fullpath": "/tops/datalayer.html"}, " viewer. For example, with ", {"type": "ui", "text": ["When Finished"]}, " you can retry a failed work item without restarting its whole job."], "extent": [5263, 5592]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Terminate"], "extent": [5592, 5607], "body": [{"type": "para", "indent": 8, "text": ["Exit the job as normal."], "extent": [5607, 5644]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Keep Open If Error"], "extent": [5644, 5668], "body": [{"type": "para", "indent": 8, "text": ["Keep the job running only if there is an error detected. You will need to kill the job manually."], "extent": [5668, 5774]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Keep Open"], "extent": [5774, 5789], "body": [{"type": "para", "indent": 8, "text": ["Keep the job running. You will need to kill the job manually."], "extent": [5789, 5860]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "submitjobwhenfinished"}}, {"type": "dt", "indent": 0, "text": ["Block on Failed Work Items"], "extent": [5860, 5888], "body": [{"type": "para", "indent": 4, "text": ["When on, if there are any failed work items on the scheduler, then the cook is blocked from completing and the PDG graph cook is prevented from ending. This allows you to manually retry your failed work items. You can ", {"type": "em", "text": ["cancel"]}, " the scheduler\u2019s cook when it is blocked by failed work items by pressing the ", {"keys": ["ESC"], "type": "keys", "text": null}, " key, clicking the ", {"type": "ui", "text": ["Cancels the current cook"]}, " button in the ", {"scheme": null, "value": "/tops/ui#tasks_bar", "type": "link", "text": ["TOP tasks bar"], "fullpath": "/tops/ui.html#tasks_bar", "fragment": "#tasks_bar"}, ", or by using the cancel API method."], "extent": [5918, 6367]}], "container": true, "attrs": {"id": "pdg_waitforfailures"}}, {"type": "dt", "indent": 0, "text": ["Auto retry downstream tasks"], "extent": [6367, 6396], "body": [{"type": "para", "indent": 4, "text": ["When on, if a parent tasks is retried manually, then its child tasks will also be retried. This parameter is only available when ", {"type": "ui", "text": ["Block on Failed Work Items"]}, " is turned ", {"type": "em", "text": ["on"]}, "."], "extent": [6426, 6607]}], "container": true, "attrs": {"id": "autoretryfailedtask"}}, {"type": "dt", "indent": 0, "text": ["Hython"], "extent": [6607, 6615], "body": [{"type": "para", "indent": 4, "text": ["Determines which Houdini Python interpreter (hython) is used for your Houdini jobs. You can also specify this hython in a command using the ", {"type": "code", "text": ["PDG_HYTHON"]}, " token."], "extent": [6639, 6804]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Default"], "extent": [6804, 6817], "body": [{"type": "para", "indent": 8, "text": ["Use the default hython interpreter that is installed with Houdini."], "extent": [6817, 6893]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [6893, 6905], "body": [{"type": "para", "indent": 8, "text": ["Use the executable path specified by the ", {"type": "ui", "text": ["Hython Executable"]}, " parameter."], "extent": [6905, 6988]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_hythonbin"}}, {"type": "dt", "indent": 0, "text": ["Hython Executable"], "extent": [6988, 7007], "body": [{"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Hython"]}, " is set to ", {"type": "ui", "text": ["Custom"]}, "."], "extent": [7046, 7122]}, {"type": "para", "indent": 4, "text": ["The full path to the hython executable to use for your Houdini jobs."], "extent": [7122, 7196]}], "container": true, "attrs": {"id": "pdg_hythonbincustomuniversal"}}, {"type": "dt", "indent": 0, "text": ["Load Item Data From"], "extent": [7196, 7217], "body": [{"type": "para", "indent": 4, "text": ["Determines how jobs processed by this scheduler should load work item attributes and data. "], "extent": [7250, 7347]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Temporary JSON File"], "extent": [7347, 7372], "body": [{"type": "para", "indent": 8, "text": ["The scheduler writes out a ", {"type": "code", "text": [".json"]}, " file for each work item to the PDG temporary file directory. This option is selected by default."], "extent": [7372, 7513]}], "container": true}, {"type": "dt", "indent": 4, "text": ["RPC Message"], "extent": [7513, 7530], "body": [{"type": "para", "indent": 8, "text": ["The scheduler\u2019s running work items request attributes and data over RPC. If the scheduler is a farm scheduler, then the job scripts running on the farm will also request item data from the submitter when creating their out-of-process work item objects. "], "extent": [7530, 7793]}, {"type": "para", "indent": 8, "text": ["This parameter option removes the need to write data files to disk and is useful when your local and remote machines ", {"type": "em", "text": ["do not"]}, " share a file system."], "extent": [7793, 7949]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemdatasource"}}, {"type": "dt", "indent": 0, "text": ["Delete Temp Dir"], "extent": [7949, 7966], "body": [{"type": "para", "indent": 4, "text": ["Determines when PDG should automatically delete the temporary file directory associated with the scheduler."], "extent": [7994, 8107]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Never"], "extent": [8107, 8118], "body": [{"type": "para", "indent": 8, "text": ["PDG never automatically deletes the temp file directory."], "extent": [8118, 8184]}], "container": true}, {"type": "dt", "indent": 4, "text": ["When Scheduler is Deleted"], "extent": [8184, 8215], "body": [{"type": "para", "indent": 8, "text": ["PDG automatically deletes the temp file directory when the scheduler is deleted or when Houdini is closed."], "extent": [8215, 8331]}], "container": true}, {"type": "dt", "indent": 4, "text": ["When Cook Completes"], "extent": [8331, 8356], "body": [{"type": "para", "indent": 8, "text": ["PDG automatically deletes the temp file directory each time a cook completes."], "extent": [8356, 8443]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_deletetempdir"}}, {"type": "dt", "indent": 0, "text": ["Compress Work Item Data"], "extent": [8443, 8468], "body": [{"type": "para", "indent": 4, "text": ["When on, PDG compresses the work item ", {"type": "code", "text": [".json"]}, " files when writing them to disk."], "extent": [8503, 8587]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Load Item Data From"]}, " is set to ", {"type": "ui", "text": ["Temporary JSON File"]}, "."], "extent": [8587, 8689]}], "container": true, "attrs": {"id": "pdg_compressworkitemdata"}}, {"type": "dt", "indent": 0, "text": ["Ignore RPC Errors"], "extent": [8689, 8708], "body": [{"type": "para", "indent": 4, "text": ["Determines whether RPC errors should cause out of process jobs to fail."], "extent": [8738, 8815]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Never"], "extent": [8815, 8826], "body": [{"type": "para", "indent": 8, "text": ["RPC connection errors will cause work items to fail."], "extent": [8826, 8888]}], "container": true}, {"type": "dt", "indent": 4, "text": ["When Cooking Batches"], "extent": [8888, 8914], "body": [{"type": "para", "indent": 8, "text": ["RPC connection errors are ignored for batch work items, which typically make a per-frame RPC back to PDG to report output files and communicate sub item status. This option prevents long-running simulations from being killed on the farm, if the submitter Houdini session crashes or becomes unresponsive."], "extent": [8914, 9227]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Always"], "extent": [9227, 9239], "body": [{"type": "para", "indent": 8, "text": ["RPC connection errors will never cause a work item to fail. Note that if a work item can\u2019t communicate with the scheduler, it will be unable to report output files, attributes or its cook status back to the PDG graph."], "extent": [9239, 9466]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_rpcignoreerrors"}}, {"type": "dt", "indent": 0, "text": ["Max RPC Errors"], "extent": [9466, 9482], "body": [{"type": "para", "indent": 4, "text": ["The maximum number of RPC failures that can occur before RPC is disabled in an out of process job."], "extent": [9509, 9613]}], "container": true, "attrs": {"id": "pdg_rpcmaxerrors"}}, {"type": "dt", "indent": 0, "text": ["Connection Timeout"], "extent": [9613, 9633], "body": [{"type": "para", "indent": 4, "text": ["The number of seconds to wait when an out of process jobs makes an RPC connection to the main PDG graph, before assuming the connection failed."], "extent": [9658, 9807]}], "container": true, "attrs": {"id": "pdg_rpctimeout"}}, {"type": "dt", "indent": 0, "text": ["Connection Retries"], "extent": [9807, 9827], "body": [{"type": "para", "indent": 4, "text": ["The number of times to retry a failed RPC call made by an out of process job."], "extent": [9852, 9935]}], "container": true, "attrs": {"id": "pdg_rpcretries"}}, {"type": "dt", "indent": 0, "text": ["Retry Backoff"], "extent": [9935, 9950], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Connection Retries"]}, " is greater than 0, this parameter determines how much time should be spent between consecutive retries."], "extent": [9975, 10112]}], "container": true, "attrs": {"id": "pdg_rpcbackoff"}}, {"type": "dt", "indent": 0, "text": ["Batch Poll Rate"], "extent": [10112, 10129], "body": [{"type": "para", "indent": 4, "text": ["Determines how quickly an out of process batch work item should poll the main Houdini session for dependency status updates, if the batch is configured to cook when it\u2019s first frame of work is ready. This has no impact on other types of batch work items."], "extent": [10152, 10412]}], "container": true, "attrs": {"id": "pdg_rpcbatch"}}, {"type": "dt", "indent": 0, "text": ["Release Job Slot When Polling"], "extent": [10412, 10443], "body": [{"type": "para", "indent": 4, "text": ["Determines whether or not the scheduler should decrement the number of active workers when a batch is polling for dependency updates."], "extent": [10468, 10606]}], "container": true, "attrs": {"id": "pdg_rpcrelease"}}], "container": true}]}, {"type": "platform_group", "body": [{"ext": null, "type": "platform", "indent": 0, "text": ["Windows"], "role": "item", "extent": [1622, 1640], "body": [{"type": "para", "indent": 4, "text": ["Windows Services ", {"type": "em", "text": ["cannot"]}, " use network-mounted drives. Since HQueue jobs on Windows are executed by a Windows Service, you should only use ", {"type": "em", "text": ["UNC paths"]}, ". For example, use ", {"type": "code", "text": ["//myserver/hq/project/myhip.hip"]}, " instead of ", {"type": "code", "text": ["H:/project/myhip.hip"]}, ". Also be careful with backslashes in paths, as they are interpreted as escape sequences when evaluated by Houdini or the command shell."], "extent": [1640, 2021]}], "container": true}], "container": true, "role": "item_group"}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [2021, 2026], "body": [{"type": "para", "indent": 4, "text": ["On the HQueue Scheduler Node, press the ", {"scheme": null, "value": "#loadpathmap", "type": "link", "text": ["Load Path Map"], "fullpath": "/nodes/top/hqueuescheduler.html#loadpathmap", "fragment": "#loadpathmap"}, " button in the ", {"type": "ui", "text": ["Path Mapping"]}, " section to automatically load the necessary path maps."], "extent": [2026, 2186]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 1, "id": "top_attributes", "container": true, "type": "top_attributes_section", "indent": 0, "role": "section", "extent": [2186, 2202], "body": [{"type": "top_attributes_item_group", "body": [{"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["hqueue_jobid"]}], "role": "item", "extent": [2202, 2220], "body": [{"type": "para", "indent": 4, "text": ["When the scheduler submits a work item to HQueue, it adds this attribute to the work item in order to track the HQueue job ID."], "extent": [2240, 2372]}], "container": true, "attrs": {"type": "integer"}}], "container": true, "role": "item_group"}], "text": "Top_attributes"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2372, 2384], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Scheduler"], "extent": [2384, 2401], "body": [{"type": "para", "indent": 0, "text": ["These are the global parameters that configure the behavior of the connection and file paths for HQueue."], "extent": [2401, 2508]}, {"level": 3, "type": "sep", "indent": 0, "text": [" HQueue "], "extent": [2508, 2523], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["HQueue Server"], "extent": [2523, 2543], "body": [{"type": "para", "indent": 8, "text": ["URL of the HQueue server. For example, ", {"type": "code", "text": ["http://localhost:5000"]}, "."], "extent": [2565, 2638]}], "container": true, "attrs": {"id": "address"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Job Name"], "extent": [2638, 2652], "body": [{"type": "para", "indent": 8, "text": ["The name of the top-level HQueue Job for submitted cooks."], "extent": [2674, 2741]}], "container": true, "attrs": {"id": "jobname"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Job Description"], "extent": [2741, 2762], "body": [{"type": "para", "indent": 8, "text": ["The description of the top-level HQueue job. This can be seen in the Job\n        Properties for the job."], "extent": [2788, 2902]}], "container": true, "attrs": {"id": "description"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Limit Jobs"], "extent": [1860, 1872], "body": [{"type": "para", "indent": 4, "text": ["When enabled, sets the maximum number of jobs that can be submitted by the scheduler at the same time."], "extent": [1895, 2003]}, {"type": "para", "indent": 4, "text": ["For farm schedulers like Tractor or HQueue, this parameter can be used to limit the total number of jobs submitted to the render farm itself. Setting this parameter can help limit the load on the render farm, especially when the PDG graph has a large number of small tasks."], "extent": [2003, 2282]}], "container": true, "attrs": {"id": "pdg_maxtasks"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Block on Failed Work Items"], "extent": [5860, 5888], "body": [{"type": "para", "indent": 4, "text": ["When on, if there are any failed work items on the scheduler, then the cook is blocked from completing and the PDG graph cook is prevented from ending. This allows you to manually retry your failed work items. You can ", {"type": "em", "text": ["cancel"]}, " the scheduler\u2019s cook when it is blocked by failed work items by pressing the ", {"keys": ["ESC"], "type": "keys", "text": null}, " key, clicking the ", {"type": "ui", "text": ["Cancels the current cook"]}, " button in the ", {"scheme": null, "value": "/tops/ui#tasks_bar", "type": "link", "text": ["TOP tasks bar"], "fullpath": "/tops/ui.html#tasks_bar", "fragment": "#tasks_bar"}, ", or by using the cancel API method."], "extent": [5918, 6367]}], "container": true, "attrs": {"id": "pdg_waitforfailures"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 4, "text": [" Advanced "], "extent": [3001, 3023], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Verbose Logging"], "extent": [3023, 3049], "body": [{"type": "para", "indent": 12, "text": ["Turn on printing output to console.  Can be useful for debugging problems."], "extent": [3075, 3163]}], "container": true, "attrs": {"id": "verbose"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tick Period"], "extent": [2282, 2295], "body": [{"type": "para", "indent": 4, "text": ["Sets the minimum time (in seconds) between calls to the ", {"type": "code", "text": ["onTick"]}, " callback."], "extent": [2320, 2400]}], "container": true, "attrs": {"id": "pdg_tickperiod"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Items Per Tick"], "extent": [2400, 2420], "body": [{"type": "para", "indent": 4, "text": ["Sets the maximum number of ready item ", {"type": "code", "text": ["onSchedule"]}, " callbacks between ticks."], "extent": [2443, 2524]}], "container": true, "attrs": {"id": "pdg_maxitems"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}], "container": true}, {"level": 3, "type": "sep", "indent": 0, "text": [" Paths "], "extent": [3265, 3279], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Working Directory"], "extent": [3279, 3303], "body": [{"type": "para", "indent": 8, "text": ["Specifies the directory where the cook generates intermediate files and output. The intermediate files are placed in a subdirectory named ", {"type": "code", "text": ["pdgtemp"]}, "."], "extent": [3332, 3490]}, {"type": "para", "indent": 8, "text": ["If you are opening your ", {"type": "code", "text": [".hip"]}, " file in Houdini from the shared network path (for example, from ", {"type": "code", "text": ["H:/myproj/myhip.hip"]}, "), you can use ", {"type": "code", "text": ["$HIP"]}, " here (the default).  However, if you are opening your ", {"type": "code", "text": [".hip"]}, " file from a local directory (for example, from ", {"type": "code", "text": ["C:/temp/myhip.hip"]}, "), you have to copy it to a shared network before it can be accessed by farm machines. In this case, the ", {"type": "ui", "text": ["Working Directory"]}, " should be an absolute or relative path to that shared network location (for example, ", {"type": "code", "text": ["//MYPC/Shared/myproj"]}, ").  The ", {"type": "code", "text": [".hip"]}, " file will be copied automatically in that case, but note that for cross-platform compatibility you will need to add a ", {"type": "ui", "text": ["Path Map"]}, " from your local $HIP path to the farm ", {"type": "ui", "text": ["Working Directory"]}, " (for example c:/temp  \u2192 /mnt/hq/pyproj)"], "extent": [3490, 4244]}], "container": true, "attrs": {"id": "pdg_workingdir"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Load Item Data From"], "extent": [7196, 7217], "body": [{"type": "para", "indent": 4, "text": ["Determines how jobs processed by this scheduler should load work item attributes and data. "], "extent": [7250, 7347]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Temporary JSON File"], "extent": [7347, 7372], "body": [{"type": "para", "indent": 8, "text": ["The scheduler writes out a ", {"type": "code", "text": [".json"]}, " file for each work item to the PDG temporary file directory. This option is selected by default."], "extent": [7372, 7513]}], "container": true}, {"type": "dt", "indent": 4, "text": ["RPC Message"], "extent": [7513, 7530], "body": [{"type": "para", "indent": 8, "text": ["The scheduler\u2019s running work items request attributes and data over RPC. If the scheduler is a farm scheduler, then the job scripts running on the farm will also request item data from the submitter when creating their out-of-process work item objects. "], "extent": [7530, 7793]}, {"type": "para", "indent": 8, "text": ["This parameter option removes the need to write data files to disk and is useful when your local and remote machines ", {"type": "em", "text": ["do not"]}, " share a file system."], "extent": [7793, 7949]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemdatasource"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Delete Temp Dir"], "extent": [7949, 7966], "body": [{"type": "para", "indent": 4, "text": ["Determines when PDG should automatically delete the temporary file directory associated with the scheduler."], "extent": [7994, 8107]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Never"], "extent": [8107, 8118], "body": [{"type": "para", "indent": 8, "text": ["PDG never automatically deletes the temp file directory."], "extent": [8118, 8184]}], "container": true}, {"type": "dt", "indent": 4, "text": ["When Scheduler is Deleted"], "extent": [8184, 8215], "body": [{"type": "para", "indent": 8, "text": ["PDG automatically deletes the temp file directory when the scheduler is deleted or when Houdini is closed."], "extent": [8215, 8331]}], "container": true}, {"type": "dt", "indent": 4, "text": ["When Cook Completes"], "extent": [8331, 8356], "body": [{"type": "para", "indent": 8, "text": ["PDG automatically deletes the temp file directory each time a cook completes."], "extent": [8356, 8443]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_deletetempdir"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Compress Work Item Data"], "extent": [8443, 8468], "body": [{"type": "para", "indent": 4, "text": ["When on, PDG compresses the work item ", {"type": "code", "text": [".json"]}, " files when writing them to disk."], "extent": [8503, 8587]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Load Item Data From"]}, " is set to ", {"type": "ui", "text": ["Temporary JSON File"]}, "."], "extent": [8587, 8689]}], "container": true, "attrs": {"id": "pdg_compressworkitemdata"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Validate Outputs When Recooking"], "extent": [832, 865], "body": [{"type": "para", "indent": 4, "text": ["When on, PDG validates the output files of the scheduler\u2019s cooked work items when the graph is recooked to see if the files still exist on disk. Work items that are missing output files are then automatically dirtied and cooked again. If any work items are dirtied by parameter changes, then their cache files are also automatically invalidated. ", {"type": "ui", "text": ["Validate Outputs When Recooking"]}, " is ", {"type": "em", "text": ["on"]}, " by default."], "extent": [895, 1302]}], "container": true, "attrs": {"id": "pdg_validateoutputs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Check Expected Outputs on Disk"], "extent": [1302, 1334], "body": [{"type": "para", "indent": 4, "text": ["When on, PDG looks for any unexpected outputs (for example, like outputs that can result from custom output handling internal logic) that were not explicitly reported when the scheduler\u2019s work items finished cooking. This check occurs immediately after the scheduler marks work items as cooked, and expected outputs that were reported normally are not checked. If PDG finds any files that are different from the expected outputs, then they are automatically added as real output files."], "extent": [1369, 1860]}], "container": true, "attrs": {"id": "pdg_checkexpectedoutputs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Path Mapping"], "extent": [433, 447], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Global"], "extent": [469, 481], "body": [{"type": "para", "indent": 8, "text": ["If the ", {"scheme": null, "value": "/ref/panes/pdgpathmap", "type": "link", "text": ["PDG Path Map"], "fullpath": "/ref/panes/pdgpathmap.html"}, " exists, then it is applied to file paths."], "extent": [481, 576]}], "container": true}, {"type": "dt", "indent": 4, "text": ["None"], "extent": [576, 586], "body": [{"type": "para", "indent": 8, "text": ["Delocalizes paths using the ", {"type": "code", "text": ["PDG_DIR"]}, " token."], "extent": [586, 640]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_mapmode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Path Map Zone"], "extent": [640, 655], "body": [{"type": "para", "indent": 4, "text": ["When on, specifies a custom mapping zone to apply to all jobs executed by this scheduler. Otherwise, the local platforms are ", {"type": "code", "text": ["LINUX"]}, ", ", {"type": "code", "text": ["MAC"]}, " or ", {"type": "code", "text": ["WIN"]}, "."], "extent": [677, 832]}], "container": true, "attrs": {"id": "pdg_mapzone"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Load Path Map"], "extent": [4610, 4629], "body": [{"type": "para", "indent": 8, "text": ["Opens the ", {"scheme": null, "value": "/ref/panes/pdgpathmap", "type": "link", "text": ["PDG Path Map Panel"], "fullpath": "/ref/panes/pdgpathmap.html"}, " and populates it with path mappings based on the ", {"scheme": null, "value": "/hqueue/gettingstarted#before-you-begin", "type": "link", "text": ["configuration"], "fullpath": "/hqueue/gettingstarted.html#before-you-begin", "fragment": "#before-you-begin"}, " of your HQueue Server for the default LINUX, MAC, and WIN zones."], "extent": [4655, 4887]}], "container": true, "attrs": {"id": "loadpathmap"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Override Local Shared Root"], "extent": [4887, 4919], "body": [{"type": "para", "indent": 8, "text": ["When on, the location of the local shared root directory is overridden by the ", {"type": "ui", "text": ["Local Shared Root Paths"]}, " parameters."], "extent": [4952, 5079]}], "container": true, "attrs": {"id": "uselocalsharedroot"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 4, "text": [" Local Shared Root "], "extent": [5079, 5109], "body": [{"type": "para", "indent": 8, "text": ["The HQueue farm should be configured with a ", {"scheme": null, "value": "/hqueue/gettingstarted#before-you-begin", "type": "link", "text": ["shared network filesystem"], "fullpath": "/hqueue/gettingstarted.html#before-you-begin", "fragment": "#before-you-begin"}, " and the mount point of this shared file system is specified for each platform."], "extent": [5109, 5310]}, {"type": "para", "indent": 8, "text": ["These parameters are only available when ", {"type": "ui", "text": ["Override Local Shared Root"]}, " is ", {"type": "em", "text": ["on"]}, "."], "extent": [5310, 5400]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Load from HQueue"], "extent": [5400, 5426], "body": [{"type": "para", "indent": 12, "text": ["Queries the HQueue server to retrieve the local shared root paths for each platform and fills the parameters below."], "extent": [5452, 5581]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Windows"], "extent": [5581, 5602], "body": [{"type": "para", "indent": 16, "text": ["The local shared root path on Windows machines. For example, ", {"type": "code", "text": ["I:/"]}, "."], "extent": [5644, 5729]}], "container": true, "attrs": {"id": "localsharedroot_win"}}, {"type": "dt", "indent": 12, "text": ["macOS"], "extent": [5729, 5748], "body": [{"type": "para", "indent": 16, "text": ["The local shared root path on macOS machines. For example, ", {"type": "code", "text": ["/Volumes/hq"]}, "."], "extent": [5793, 5884]}], "container": true, "attrs": {"id": "localsharedroot_macosx"}}, {"type": "dt", "indent": 12, "text": ["Linux"], "extent": [5884, 5903], "body": [{"type": "para", "indent": 16, "text": ["The local shared root path on Linux machines. For example, ", {"type": "code", "text": ["/mnt/hq"]}, "."], "extent": [5947, 6034]}], "container": true, "attrs": {"id": "localsharedroot_linux"}}], "container": true}], "container": true, "attrs": {"id": "queryhq"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 3, "type": "sep", "indent": 4, "text": [" HFS "], "extent": [6034, 6050], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Universal HFS"], "extent": [6050, 6074], "body": [{"type": "para", "indent": 12, "text": ["When on, a single path to the ", {"type": "code", "text": ["$HFS"]}, " directory (the Houdini install directory) is used by all platforms. You can use ", {"type": "code", "text": ["$HQROOT"]}, " and ", {"type": "code", "text": ["$HQCLIENTARCH"]}, " to help specify the directory path."], "extent": [6109, 6305]}], "container": true, "attrs": {"id": "hfspathuniversal"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Linux HFS Path"], "extent": [6305, 6329], "body": [{"type": "para", "indent": 12, "text": [{"type": "code", "text": ["$HFS"]}, " path for Linux."], "extent": [6362, 6398]}, {"type": "para", "indent": 12, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Universal HFS"]}, " is off."], "extent": [6398, 6475]}], "container": true, "attrs": {"id": "hfs_linux_path"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["macOS HFS Path"], "extent": [6475, 6499], "body": [{"type": "para", "indent": 12, "text": [{"type": "code", "text": ["$HFS"]}, " path for macOS."], "extent": [6533, 6569], "body": [{"type": "para", "indent": 13, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Universal HFS"]}, " is off."], "extent": [6569, 6647]}], "container": true}], "container": true, "attrs": {"id": "hfs_macosx_path"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Windows HFS Path"], "extent": [6647, 6673], "body": [{"type": "para", "indent": 12, "text": [{"type": "code", "text": ["$HFS"]}, " path for Windows."], "extent": [6708, 6746]}, {"type": "para", "indent": 12, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Universal HFS"]}, " is off."], "extent": [6746, 6823]}], "container": true, "attrs": {"id": "hfs_windows_path"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Python"], "extent": [6823, 6839], "body": [{"type": "para", "indent": 12, "text": ["Determines which Python interpreter is used for your Python jobs. You can also specify this Python in a command using the ", {"type": "code", "text": ["PDG_PYTHON"]}, " token."], "extent": [6867, 7022]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["From HFS"], "extent": [7022, 7044], "body": [{"type": "para", "indent": 16, "text": ["Use the Python interpreter that is installed with Houdini."], "extent": [7044, 7120]}], "container": true}, {"type": "dt", "indent": 12, "text": ["From HQClient"], "extent": [7120, 7147], "body": [{"type": "para", "indent": 16, "text": ["Use the same Python interpreter that HQClient is using on the farm machine."], "extent": [7147, 7240]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Custom"], "extent": [7240, 7260], "body": [{"type": "para", "indent": 16, "text": ["Use the executable path specified by the ", {"type": "ui", "text": ["Python Executable"]}, " parameter."], "extent": [7260, 7351]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pythonbin"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Python Executable"], "extent": [7351, 7378], "body": [{"type": "para", "indent": 12, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Python"]}, " is set to ", {"type": "ui", "text": ["Custom"]}, "."], "extent": [7421, 7505]}, {"type": "para", "indent": 12, "text": ["The full path to the Python executable to use for your Python jobs."], "extent": [7505, 7586]}], "container": true, "attrs": {"id": "pythonbincustomuniversal"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Hython"], "extent": [6607, 6615], "body": [{"type": "para", "indent": 4, "text": ["Determines which Houdini Python interpreter (hython) is used for your Houdini jobs. You can also specify this hython in a command using the ", {"type": "code", "text": ["PDG_HYTHON"]}, " token."], "extent": [6639, 6804]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Default"], "extent": [6804, 6817], "body": [{"type": "para", "indent": 8, "text": ["Use the default hython interpreter that is installed with Houdini."], "extent": [6817, 6893]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [6893, 6905], "body": [{"type": "para", "indent": 8, "text": ["Use the executable path specified by the ", {"type": "ui", "text": ["Hython Executable"]}, " parameter."], "extent": [6905, 6988]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_hythonbin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Hython Executable"], "extent": [6988, 7007], "body": [{"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Hython"]}, " is set to ", {"type": "ui", "text": ["Custom"]}, "."], "extent": [7046, 7122]}, {"type": "para", "indent": 4, "text": ["The full path to the hython executable to use for your Houdini jobs."], "extent": [7122, 7196]}], "container": true, "attrs": {"id": "pdg_hythonbincustomuniversal"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Submit As Job"], "extent": [7703, 7723], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Submit"], "extent": [7723, 7736], "body": [{"type": "para", "indent": 8, "text": ["Cooks the entire TOP network as a standalone job. Displays the status URI for the submitted job. The submitting Houdini session is detached from the cooking of the TOP network. The ", {"type": "code", "text": [".hip"]}, " file is copied if necessary and a ", {"type": "code", "text": ["hython"]}, " process executes the TOP network normally using the default scheduler for that topnet."], "extent": [7760, 8087]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 8, "role": "item", "extent": [8087, 8100], "body": [{"type": "para", "indent": 12, "text": ["You can restart a finished standalone jobs using the HQueue Web UI. However, you should restart the child job named ", {"type": "em", "text": ["TOP Cook"]}, " instead of the parent job."], "extent": [8100, 8267]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "submitjob"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Job Name"], "extent": [8267, 8281], "body": [{"type": "para", "indent": 8, "text": ["Specifies the name of the submitted job."], "extent": [8309, 8359]}], "container": true, "attrs": {"id": "submitjobname"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Output Node"], "extent": [8359, 8376], "body": [{"type": "para", "indent": 7, "text": ["When on, specifies the path to the node to cook. If a node is not specified, the display node of the network that contains the Scheduler is cooked instead."], "extent": [8403, 8567]}], "container": true, "attrs": {"id": "submitjobnode"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Save Task Graph File"], "extent": [8567, 8593], "body": [{"type": "para", "indent": 8, "text": ["When on, the submitted job will save a task graph ", {"type": "code", "text": [".py"]}, " file once the cook completes."], "extent": [8621, 8716]}], "container": true, "attrs": {"id": "submitjobfile"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 4, "text": [" Job Parms "], "extent": [8716, 8738]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Assign To"], "extent": [8738, 8754], "body": [{"type": "para", "indent": 8, "text": ["Which clients to assign priority to."], "extent": [8784, 8830]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Any Client"], "extent": [8830, 8850], "body": [{"type": "para", "indent": 12, "text": ["Assign to any client."], "extent": [8850, 8885]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Listed Clients"], "extent": [8885, 8909], "body": [{"type": "para", "indent": 12, "text": ["Assign to specified clients."], "extent": [8909, 8951]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Clients from Listed Groups"], "extent": [8951, 8987], "body": [{"type": "para", "indent": 12, "text": ["Assign to specified client groups."], "extent": [8987, 9035]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "submitjobassign"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Clients"], "extent": [9035, 9048], "body": [{"type": "para", "indent": 8, "text": ["Names of clients to assign jobs to separated by spaces."], "extent": [9079, 9144]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Assign To"]}, " is set to ", {"type": "ui", "text": ["Listed Clients"]}, "."], "extent": [9144, 9235]}], "container": true, "attrs": {"id": "submitjobclients"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Client Groups"], "extent": [9235, 9254], "body": [{"type": "para", "indent": 8, "text": ["Names of client groups to assign jobs to separated by spaces."], "extent": [9284, 9355]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Assign To"]}, " is set to ", {"type": "ui", "text": ["Clients from Listed Groups"]}, "."], "extent": [9355, 9458]}], "container": true, "attrs": {"id": "submitjobgroups"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["CPUs per Job"], "extent": [9458, 9476], "body": [{"type": "para", "indent": 8, "text": ["The maximum number of ", {"scheme": null, "value": "/hqueue/configuration#values", "type": "link", "text": ["CPUs"], "fullpath": "/hqueue/configuration.html#values", "fragment": "#values"}, " that will be consumed by the job. If the number exceeds a client machine\u2019s number of free CPUs, then the client machine will ", {"type": "em", "text": ["not"]}, " be assigned the job."], "extent": [9504, 9723]}], "container": true, "attrs": {"id": "submitjobcpus"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 4, "text": [" Data Layer Server "], "extent": [9723, 9753], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Server"], "extent": [4064, 4079], "body": [{"type": "para", "indent": 4, "text": ["When on, turns on the data layer server for the TOP job that will cook on the farm. This allows PilotPDG or other WebSocket clients to connect to the cooking job remotely to view the state of PDG."], "extent": [4111, 4313]}], "container": true, "attrs": {"id": "enabledatalayerserver"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Server Port"], "extent": [4313, 4326], "body": [{"type": "para", "indent": 4, "text": ["Determines which server port to use for the data layer server."], "extent": [4353, 4421]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Enable Server"]}, " is ", {"type": "em", "text": ["on"]}, "."], "extent": [4421, 4491]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [4491, 4506], "body": [{"type": "para", "indent": 8, "text": ["A free TCP port to use for the data layer server chosen by the node."], "extent": [4506, 4584]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [4584, 4596], "body": [{"type": "para", "indent": 8, "text": ["A custom TCP port to use for the data layer server specified by the user."], "extent": [4596, 4679]}, {"type": "para", "indent": 8, "text": ["This is useful when there is a firewall between the farm machine and the monitoring machine."], "extent": [4679, 4781]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "usedatalayerport"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Auto Connect"], "extent": [4781, 4795], "body": [{"type": "para", "indent": 4, "text": ["When on, the scheduler will try to send a command to create a remote visualizer when the job starts. If successful, then a remote graph is created and is automatically connected to the server executing the job. The client submitting the job ", {"type": "em", "text": ["must"]}, " be visible to the server running the job or the connection will fail."], "extent": [4823, 5146]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Enable Server"]}, " is ", {"type": "em", "text": ["on"]}, "."], "extent": [5146, 5216]}], "container": true, "attrs": {"id": "createremotegraph"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["When Finished"], "extent": [5216, 5231], "body": [{"type": "para", "indent": 4, "text": ["Determines what to do when the TOP Cook finishes. This allows the TOP Cook job to continue running after the graph cook completes so that it can be inspected by a wrangler using a ", {"scheme": null, "value": "/tops/datalayer", "type": "link", "text": ["Data Layer"], "fullpath": "/tops/datalayer.html"}, " viewer. For example, with ", {"type": "ui", "text": ["When Finished"]}, " you can retry a failed work item without restarting its whole job."], "extent": [5263, 5592]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Terminate"], "extent": [5592, 5607], "body": [{"type": "para", "indent": 8, "text": ["Exit the job as normal."], "extent": [5607, 5644]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Keep Open If Error"], "extent": [5644, 5668], "body": [{"type": "para", "indent": 8, "text": ["Keep the job running only if there is an error detected. You will need to kill the job manually."], "extent": [5668, 5774]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Keep Open"], "extent": [5774, 5789], "body": [{"type": "para", "indent": 8, "text": ["Keep the job running. You will need to kill the job manually."], "extent": [5789, 5860]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "submitjobwhenfinished"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Message Queue"], "extent": [9981, 10001], "body": [{"type": "para", "indent": 4, "text": ["The Message Queue (MQ) server is required to get work item results from the jobs running on the farm. Several types of MQ are provided to work around networking issues such as firewalls."], "extent": [10024, 10216]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Type"], "extent": [10216, 10226], "body": [{"type": "para", "indent": 8, "text": ["The type of Message Queue (MQ) server to use."], "extent": [10248, 10303]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Local"], "extent": [10303, 10318], "body": [{"type": "para", "indent": 12, "text": ["Starts or shares the MQ server on your local machine."], "extent": [10318, 10385]}, {"type": "para", "indent": 12, "text": ["If another HQueue scheduler node (in the current Houdini session) already started a MQ server locally, then this scheduler node uses that MQ server automatically. "], "extent": [10385, 10562]}, {"type": "para", "indent": 12, "text": ["If there are ", {"type": "em", "text": ["not"]}, " any firewalls between your local machine and the farm machines, then we recommend you use this setting."], "extent": [10562, 10698]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Farm"], "extent": [10698, 10712], "body": [{"type": "para", "indent": 12, "text": ["Starts or shares the MQ server on the farm as a separate job. "], "extent": [10712, 10788]}, {"type": "para", "indent": 12, "text": ["If there are firewalls between your local machine and the farm machines, then we recommend you use this parameter."], "extent": [10788, 10916]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Connect"], "extent": [10916, 10933], "body": [{"type": "para", "indent": 12, "text": ["Connects to an already running MQ server. "], "extent": [10933, 10989]}, {"type": "para", "indent": 12, "text": ["The ", {"scheme": null, "value": "/ref/utils/mqserver", "type": "link", "text": ["MQ server"], "fullpath": "/ref/utils/mqserver.html"}, " needs to have been started manually. This is the manual option for managing the MQ and useful for running MQ as a centralized service on a single machine to serve all PDG jobs which use this setting."], "extent": [10989, 11238]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "mqusage"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Task Callback Port"], "extent": [11238, 11262], "body": [{"type": "para", "indent": 8, "text": ["Sets the TCP Port used by the Message Queue Server for the ", {"type": "code", "text": ["XMLRPC"]}, " callback API. This port must be accessible between farm clients."], "extent": [11293, 11435]}], "container": true, "attrs": {"id": "taskcallbackport"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Relay Port"], "extent": [11435, 11451], "body": [{"type": "para", "indent": 8, "text": ["Sets the TCP Port used by the Message Queue Server connection between PDG and the client that is running the Message Queue Command. This port must be reachable on farm clients by the PDG/user machine."], "extent": [11477, 11687]}], "container": true, "attrs": {"id": "mqrelayport"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Address"], "extent": [11687, 11700], "body": [{"type": "para", "indent": 8, "text": ["IP address of the machine running the persistent MQ server."], "extent": [11722, 11791]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Type"]}, " is set to ", {"type": "ui", "text": ["Connect"]}, "."], "extent": [11791, 11870]}], "container": true, "attrs": {"id": "address"}, "role": "item"}], "container": true, "role": "item_group"}], "attrs": {"id": "messagequeue"}}, {"level": 2, "id": "rpcserver", "container": true, "type": "h", "indent": 0, "text": ["RPC Server"], "extent": [11870, 11899], "body": [{"type": "para", "indent": 0, "text": ["Parameters for configuring the behavior of RPC connections from out of process jobs back to a scheduler instance."], "extent": [11899, 12015]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Ignore RPC Errors"], "extent": [8689, 8708], "body": [{"type": "para", "indent": 4, "text": ["Determines whether RPC errors should cause out of process jobs to fail."], "extent": [8738, 8815]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Never"], "extent": [8815, 8826], "body": [{"type": "para", "indent": 8, "text": ["RPC connection errors will cause work items to fail."], "extent": [8826, 8888]}], "container": true}, {"type": "dt", "indent": 4, "text": ["When Cooking Batches"], "extent": [8888, 8914], "body": [{"type": "para", "indent": 8, "text": ["RPC connection errors are ignored for batch work items, which typically make a per-frame RPC back to PDG to report output files and communicate sub item status. This option prevents long-running simulations from being killed on the farm, if the submitter Houdini session crashes or becomes unresponsive."], "extent": [8914, 9227]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Always"], "extent": [9227, 9239], "body": [{"type": "para", "indent": 8, "text": ["RPC connection errors will never cause a work item to fail. Note that if a work item can\u2019t communicate with the scheduler, it will be unable to report output files, attributes or its cook status back to the PDG graph."], "extent": [9239, 9466]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_rpcignoreerrors"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max RPC Errors"], "extent": [9466, 9482], "body": [{"type": "para", "indent": 4, "text": ["The maximum number of RPC failures that can occur before RPC is disabled in an out of process job."], "extent": [9509, 9613]}], "container": true, "attrs": {"id": "pdg_rpcmaxerrors"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Connection Timeout"], "extent": [9613, 9633], "body": [{"type": "para", "indent": 4, "text": ["The number of seconds to wait when an out of process jobs makes an RPC connection to the main PDG graph, before assuming the connection failed."], "extent": [9658, 9807]}], "container": true, "attrs": {"id": "pdg_rpctimeout"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Connection Retries"], "extent": [9807, 9827], "body": [{"type": "para", "indent": 4, "text": ["The number of times to retry a failed RPC call made by an out of process job."], "extent": [9852, 9935]}], "container": true, "attrs": {"id": "pdg_rpcretries"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Retry Backoff"], "extent": [9935, 9950], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Connection Retries"]}, " is greater than 0, this parameter determines how much time should be spent between consecutive retries."], "extent": [9975, 10112]}], "container": true, "attrs": {"id": "pdg_rpcbackoff"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Batch Poll Rate"], "extent": [10112, 10129], "body": [{"type": "para", "indent": 4, "text": ["Determines how quickly an out of process batch work item should poll the main Houdini session for dependency status updates, if the batch is configured to cook when it\u2019s first frame of work is ready. This has no impact on other types of batch work items."], "extent": [10152, 10412]}], "container": true, "attrs": {"id": "pdg_rpcbatch"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Release Job Slot When Polling"], "extent": [10412, 10443], "body": [{"type": "para", "indent": 4, "text": ["Determines whether or not the scheduler should decrement the number of active workers when a batch is polling for dependency updates."], "extent": [10468, 10606]}], "container": true, "attrs": {"id": "pdg_rpcrelease"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Job Parms"], "extent": [12328, 12344], "body": [{"type": "para", "indent": 0, "text": ["These job-specific parameters affect all submitted jobs, but can be overridden on a node-by-node basis. For more information, see ", {"scheme": null, "value": "/tops/schedulers#jobparms", "type": "link", "text": ["Scheduler Job Parms / Properties"], "fullpath": "/tops/schedulers.html#jobparms", "fragment": "#jobparms"}, "."], "extent": [12344, 12538]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [12538, 12544], "body": [{"type": "para", "indent": 4, "text": ["Many of these parameters correspond directly to the ", {"scheme": null, "value": "/hqueue/jobdetails#properties", "type": "link", "text": ["HQueue Job Properties"], "fullpath": "/hqueue/jobdetails.html#properties", "fragment": "#properties"}, "."], "extent": [12544, 12656]}], "container": true}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Scheduling "], "extent": [12656, 12675], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Job Priority"], "extent": [12675, 12694], "body": [{"type": "para", "indent": 8, "text": ["The job\u2019s HQueue priority."], "extent": [12724, 12760]}, {"type": "para", "indent": 8, "text": ["Jobs with higher priorities are scheduled and processed before jobs with lower priorities. ", {"type": "code", "text": ["0"]}, " is the lowest priority."], "extent": [12760, 12888]}], "container": true, "attrs": {"id": "hqueue_priority"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Assign To"], "extent": [12888, 12903], "body": [{"type": "para", "indent": 8, "text": ["Which clients to assign priority to."], "extent": [12934, 12980]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Any Client"], "extent": [12980, 13000], "body": [{"type": "para", "indent": 12, "text": ["Assign to any client."], "extent": [13000, 13035]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Listed Clients"], "extent": [13035, 13059], "body": [{"type": "para", "indent": 12, "text": ["Assign to specified clients."], "extent": [13059, 13101]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Clients from Listed Groups"], "extent": [13101, 13137], "body": [{"type": "para", "indent": 12, "text": ["Assign to specified client groups."], "extent": [13137, 13185]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "hqueue_assign_to"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Clients"], "extent": [13185, 13198], "body": [{"type": "para", "indent": 8, "text": ["Names of clients to assign jobs to separated by spaces."], "extent": [13227, 13292]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Assign To"]}, " is set to ", {"type": "ui", "text": ["Listed Clients"]}, "."], "extent": [13292, 13383]}], "container": true, "attrs": {"id": "hqueue_clients"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Select Clients"], "extent": [13383, 13403], "body": [{"type": "para", "indent": 8, "text": ["Selects clients from HQueue to populate the ", {"type": "ui", "text": ["Clients"]}, " list."], "extent": [13432, 13503]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Assign To"]}, " is set to ", {"type": "ui", "text": ["Listed Clients"]}, "."], "extent": [13503, 13594]}], "container": true, "attrs": {"id": "select_clients"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Client Groups"], "extent": [13594, 13613], "body": [{"type": "para", "indent": 8, "text": ["Names of client groups to assign jobs to separated by spaces."], "extent": [13648, 13719]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Assign To"]}, " is set to ", {"type": "ui", "text": ["Clients from Listed Groups"]}, "."], "extent": [13719, 13822]}], "container": true, "attrs": {"id": "hqueue_client_groups"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Select Groups"], "extent": [13822, 13841], "body": [{"type": "para", "indent": 8, "text": ["Selects client groups from HQueue to populate the ", {"type": "ui", "text": ["Client Groups"]}, " list."], "extent": [13876, 13959]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Assign To"]}, " is set to ", {"type": "ui", "text": ["Clients from Listed Groups"]}, "."], "extent": [13959, 14062]}], "container": true, "attrs": {"id": "select_client_groups"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["CPUs per Job"], "extent": [14062, 14080], "body": [{"type": "para", "indent": 8, "text": ["The maximum number of ", {"scheme": null, "value": "/hqueue/configuration#values", "type": "link", "text": ["CPUs"], "fullpath": "/hqueue/configuration.html#values", "fragment": "#values"}, " that will be consumed by the job. If the number exceeds a client machine\u2019s number of free CPUs, then the client machine will ", {"type": "em", "text": ["not"]}, " be assigned the job."], "extent": [14113, 14332]}, {"type": "para", "indent": 8, "text": ["Note that you can control the multi-threading of some jobs with ", {"scheme": null, "value": "#hqueue_houdinimaxthreads", "type": "link", "text": ["Houdini Max Threads"], "fullpath": "/nodes/top/hqueuescheduler.html#hqueue_houdinimaxthreads", "fragment": "#hqueue_houdinimaxthreads"}, ".  You can also use the ", {"type": "ui", "text": ["Tags"]}, " parm to control if this job needs a dedicated machine."], "extent": [14332, 14540]}], "container": true, "attrs": {"id": "hqueue_CPUs_to_use"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Houdini Max Threads"], "extent": [14540, 14565], "body": [{"type": "para", "indent": 8, "text": ["When on, sets the ", {"type": "code", "text": ["HOUDINI_MAXTHREADS"]}, " environment to the specified value. If ", {"type": "ui", "text": ["CPUS per Job"]}, " is enabled, ", {"type": "code", "text": ["HOUDINI_MAXTHREADS"]}, " is set to the same value unless this parameter is also enabled."], "extent": [14604, 14805]}, {"type": "para", "indent": 8, "text": ["A value of 0 indicates that the job should use all available CPUs cores."], "extent": [14805, 14887]}, {"type": "para", "indent": 8, "text": ["Positive values limit the number of threads that can be used. For example, a value of ", {"type": "code", "text": ["1"]}, " disables multi-threading entirely by limiting the job to one thread. Positive values are also clamped to the number of available CPU cores."], "extent": [14887, 15126]}, {"type": "para", "indent": 8, "text": ["If the value is negative, the value is added to the maximum number of processors to determine the threading limit for the job. For example, a value of ", {"type": "code", "text": ["-1"]}, " uses all CPU cores except 1."], "extent": [15126, 15320]}, {"type": "para", "indent": 8, "text": ["See ", {"scheme": null, "value": "/tops/schedulers#limits", "type": "link", "text": ["limiting resource usage"], "fullpath": "/tops/schedulers.html#limits", "fragment": "#limits"}, "."], "extent": [15320, 15384]}], "container": true, "attrs": {"id": "hqueue_houdinimaxthreads"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Max Run Time"], "extent": [15384, 15402], "body": [{"type": "para", "indent": 8, "text": ["The maximum amount of time (in seconds) that the work item is permitted to run for. If it\u2019s running time exceeds the maximum time then it is automatically canceled by HQueue."], "extent": [15434, 15618]}], "container": true, "attrs": {"id": "hqueue_maxruntime"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Job Description"], "extent": [15618, 15639], "body": [{"type": "para", "indent": 8, "text": ["Description property for the job."], "extent": [15672, 15715]}], "container": true, "attrs": {"id": "hqueue_description"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Tags"], "extent": [15715, 15725], "body": [{"type": "para", "indent": 8, "text": ["Space-separated ", {"scheme": null, "value": "/hqueue/jobdetails#tags", "type": "link", "text": ["Job Tags"], "fullpath": "/hqueue/jobdetails.html#tags", "fragment": "#tags"}, ", which can be used to indicate if this job requires a dedicated machine. When ", {"type": "ui", "text": ["Tags"]}, " is set to ", {"type": "code", "text": ["single"]}, ", the job will occupy all slots on the machine that it runs on, and it will ", {"type": "em", "text": ["not"]}, " run concurrently with the other jobs on its machine. To run multiple jobs on the same machine, ", {"scheme": "Node", "value": "/nodes/top/hqueuescheduler#hqueue_CPUs_to_use", "type": "link", "text": ["CPUs per Job"], "fullpath": "/nodes/top/hqueuescheduler.html#hqueue_CPUs_to_use", "fragment": "#hqueue_CPUs_to_use"}, " needs to be set on either the Scheduler itself or via a Scheduler property added to the job\u2019s particular TOP node."], "extent": [15751, 16267]}], "container": true, "attrs": {"id": "hqueue_tags"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Allowed Host"], "extent": [16267, 16285], "body": [{"type": "para", "indent": 8, "text": ["The host name of the machine that the job should execute on."], "extent": [16311, 16381]}], "container": true, "attrs": {"id": "hqueue_host"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Resources"], "extent": [16381, 16396], "body": [{"type": "para", "indent": 8, "text": ["Adds custom resource-quantity pairings of ", {"scheme": null, "value": "/hqueue/resourcedetails", "type": "link", "text": ["HQueue Resources"], "fullpath": "/hqueue/resourcedetails.html"}, " to the job."], "extent": [16426, 16532]}], "container": true, "attrs": {"id": "hqueue_resmulti"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 3, "type": "sep", "indent": 0, "text": [" Non-Zero Exit Code Handling "], "extent": [16532, 16568], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Handle By"], "extent": [16568, 16584], "body": [{"type": "para", "indent": 8, "text": ["Customize what to do when the command fails (Returns a non-zero exit code)."], "extent": [16616, 16701]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Reporting Error"], "extent": [16701, 16726], "body": [{"type": "para", "indent": 12, "text": ["The work item fails."], "extent": [16726, 16760]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Reporting Warning"], "extent": [16760, 16787], "body": [{"type": "para", "indent": 12, "text": ["The work item succeeds and a warning is added to the node."], "extent": [16787, 16859]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Retrying Task"], "extent": [16859, 16882], "body": [{"type": "para", "indent": 12, "text": ["The work item is retried by HQueue for the number of ", {"type": "ui", "text": ["Retries"]}, " remaining."], "extent": [16882, 16971]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Ignoring Exit Code"], "extent": [16971, 16999], "body": [{"type": "para", "indent": 12, "text": ["The work item succeeds."], "extent": [16999, 17036]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "hqueue_echandleby"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Handle All Non Zero"], "extent": [17036, 17061], "body": [{"type": "para", "indent": 8, "text": ["When off, you can specify a particular exit code."], "extent": [17094, 17153]}], "container": true, "attrs": {"id": "hqueue_echandleall"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Exit Code"], "extent": [17153, 17168], "body": [{"type": "para", "indent": 8, "text": ["Specifies the exit code that you want to handle using ", {"type": "ui", "text": ["Handle By"]}, ". All other non-zero exit codes will be treated as a failure as normal."], "extent": [17202, 17350]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Handle All Non Zero"]}, " is off."], "extent": [17350, 17429]}], "container": true, "attrs": {"id": "hqueue_eccustomcode"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Retries"], "extent": [17429, 17442], "body": [{"type": "para", "indent": 8, "text": ["Number of times to retry the job when the command fails."], "extent": [17473, 17539]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Handle By"]}, " is set to ", {"type": "ui", "text": ["Retrying Task"]}, "."], "extent": [17539, 17629]}], "container": true, "attrs": {"id": "hqueue_triesleft"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 3, "type": "sep", "indent": 0, "text": [" Task Environment "], "extent": [17629, 17654], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Inherit Local Environment"], "extent": [17654, 17686], "body": [{"type": "para", "indent": 8, "text": ["When on, the environment variables in the current Houdini session are copied into the job\u2019s environment."], "extent": [17723, 17837]}], "container": true, "attrs": {"id": "hqueue_inheritlocalenv"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Unset Variables"], "extent": [17837, 17858], "body": [{"type": "para", "indent": 8, "text": ["Space-separated list of environment variables that should be unset in the task environment."], "extent": [17888, 17989]}], "container": true, "attrs": {"id": "hqueue_envunset"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Environment File"], "extent": [17989, 18011], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Environment Variables"], "extent": [16, 39], "body": [{"type": "para", "indent": 4, "text": ["Additional work item environment variables can be specified here.  These will be added to the job\u2019s environment.  If the value of the variable is empty, it will be removed from the job\u2019s environment."], "extent": [61, 266]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Name"], "extent": [266, 276], "body": [{"type": "para", "indent": 8, "text": ["Name of the work item environment variable."], "extent": [305, 366]}], "container": true, "attrs": {"id": "local_envname#"}}, {"type": "dt", "indent": 4, "text": ["Value"], "extent": [366, 377], "body": [{"type": "para", "indent": 8, "text": ["Value of the work item environment variable."], "extent": [407, 461]}], "container": true, "attrs": {"id": "local_envvalue#"}}], "container": true}], "container": true, "attrs": {"id": "pdg_env_vars"}}], "container": true}, {"type": "para", "indent": 0, "text": ["Specifies an environment file for environment variables to be added to the job\u2019s environment. An environment variable from the file will overwrite an existing environment variable if they share identical names."], "extent": [461, 672], "body": [], "container": true, "attrs": {"id": "pdg_env_file_txt"}}], "container": true, "attrs": {"id": "hqueue_env_file"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Environment Variables"], "extent": [18115, 18142], "body": [{"type": "para", "indent": 8, "text": ["Adds custom key-value environment variables to each task."], "extent": [18172, 18239]}], "container": true, "attrs": {"id": "hqueue_envmulti"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" Job Scripts "], "extent": [18239, 18261], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Pre Shell"], "extent": [18261, 18277], "body": [{"type": "para", "indent": 8, "text": ["Specifies a shell script to be executed/sourced before the command is executed."], "extent": [18307, 18396]}], "container": true, "attrs": {"id": "hqueue_preshell"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Post Shell"], "extent": [18396, 18412], "body": [{"type": "para", "indent": 8, "text": ["Specifies a shell script to be executed/sourced after the command is executed."], "extent": [18443, 18531]}], "container": true, "attrs": {"id": "hqueue_postshell"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Pre Python"], "extent": [18531, 18547], "body": [{"type": "para", "indent": 8, "text": ["Specifies the Python script to be executed in the wrapper script before the command process is spawned."], "extent": [18574, 18687]}], "container": true, "attrs": {"id": "hqueue_prepy"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Post Python"], "extent": [18687, 18704], "body": [{"type": "para", "indent": 8, "text": ["Specifies the Python script to be executed in the wrapper script after the command process exits."], "extent": [18732, 18839]}], "container": true, "attrs": {"id": "hqueue_postpy"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [18839, 18848], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": null, "value": "https://vimeo.com/290594152", "type": "link", "text": ["Getting Started with HQueue"], "exists": true}], "extent": [18848, 18908]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/localscheduler", "type": "link", "text": "", "fullpath": "/nodes/top/localscheduler.html"}], "extent": [18908, 18936]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/pythonscheduler", "type": "link", "text": "", "fullpath": "/nodes/top/pythonscheduler.html"}], "extent": [18936, 18965]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/tractorscheduler", "type": "link", "text": "", "fullpath": "/nodes/top/tractorscheduler.html"}], "extent": [18965, 18995]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/deadlinescheduler", "type": "link", "text": "", "fullpath": "/nodes/top/deadlinescheduler.html"}], "extent": [18995, 19026]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": null, "value": "/ref/utils/mqserver", "type": "link", "text": ["MQ Server"], "fullpath": "/ref/utils/mqserver.html"}], "extent": [19026, 19060]}], "container": true}], "text": "Related"}], "title": ["HQueue Scheduler"], "summary": ["Schedules work items using HQueue."], "included": ["/nodes/top/_scheduler_common", "/nodes/top/_scheduler_task_env_common"]}