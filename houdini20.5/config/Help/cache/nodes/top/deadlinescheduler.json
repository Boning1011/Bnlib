{"type": "root", "attrs": {"type": "node", "context": "top", "internal": "deadlinescheduler", "icon": "TOP/deadlinescheduler", "since": "17.5", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Deadline Scheduler"], "extent": [107, 130]}, {"type": "summary", "indent": 0, "text": ["The PDG scheduler for Thinkbox\u2019s Deadline software."], "extent": [130, 190]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [190, 205], "body": [{"type": "para", "indent": 0, "text": ["This scheduler node utilizes Thinkbox\u2019s Deadline to schedule and execute PDG work items on a Deadline farm."], "extent": [205, 315]}, {"type": "para", "indent": 0, "text": ["To use this scheduler, you need to have the Deadline client installed and working on your local machine. Additionally, you must also have Deadline set-up on your farm machines to receive and execute jobs. "], "extent": [315, 522]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [522, 528], "body": [{"type": "para", "indent": 4, "text": ["The Deadline Scheduler TOP supports Deadline 10 and greater."], "extent": [528, 594]}, {"type": "para", "indent": 4, "text": ["It is recommended that Deadline 10.1.17.4 or greater is used.  Version\n    10.1.17.4 released a fix for a regression introduced in Deadline 10.1.15.X\n    that broke job submissions from PDG."], "extent": [594, 790]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Scheduling"], "extent": [790, 807], "body": [{"type": "para", "indent": 0, "text": ["This node can do two types of scheduling using a Deadline farm:"], "extent": [807, 873]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["The first type of scheduling runs an instance of Houdini on a local submission machine that coordinates the PDG cook on the farm and waits until the cook has completed. This allows you to cook the entire TOP graph, only part of the TOP graph, or a specific node. "], "extent": [873, 1140], "body": [{"type": "para", "indent": 4, "text": ["With this scheduling type, the node also schedules one main job with a task for each work item generated, and if necessary, schedules a second Message Queue (MQ) job to run the MQ server that receives the work item results over the network. For more information on MQ, see the ", {"scheme": null, "value": "#messagequeue", "type": "link", "text": ["Message Queue"], "fullpath": "/nodes/top/deadlinescheduler.html#messagequeue", "fragment": "#messagequeue"}, " section below."], "extent": [1140, 1467]}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The second type of scheduling uses ", {"scheme": null, "value": "#submitgraph", "type": "link", "text": ["Submit Graph As Job"], "fullpath": "/nodes/top/deadlinescheduler.html#submitgraph", "fragment": "#submitgraph"}, ". "], "extent": [1467, 1542], "body": [{"type": "para", "indent": 4, "text": ["With this scheduling type, the node schedules a hython session that opens up the current ", {"type": "code", "text": [".hip"]}, " file and cooks the entire TOP network. If the TOP network uses the Deadline scheduler node(s), then another job might also be scheduled on the farm, and that job will follow the scheduling behavior mentioned above."], "extent": [1542, 1858]}], "container": true}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["PDGDeadline plugin"], "extent": [1858, 1883], "body": [{"type": "para", "indent": 0, "text": ["By default, this Deadline scheduler requires and uses the custom ", {"type": "code", "text": ["PDGDeadline"]}, " plugin (located in ", {"type": "code", "text": ["$HFS/houdini/pdg/plugins/PDGDeadline"]}, ") that ships with Houdini. You do ", {"type": "em", "text": ["not"]}, " have to set-up the plugin to enable it as it should work out-of-the-box. Please note that the rest of this documentation page assumes that you are using the ", {"type": "code", "text": ["PDGDeadline"]}, " plugin."], "extent": [1883, 2240]}, {"type": "para", "indent": 0, "text": ["On Windows, Deadline processes require executables to have the ", {"type": "code", "text": [".exe"]}, " suffix. To meet this requirement, you can append ", {"type": "code", "text": ["\\$PDG_EXE"]}, " to executables. "], "extent": [2240, 2389]}, {"type": "para", "indent": 0, "text": ["The ", {"type": "code", "text": ["PDGDeadline"]}, " plugin evaluates the ", {"type": "code", "text": ["\\$PDG_EXE"]}, " specified in work item executables as follows:"], "extent": [2389, 2487]}, {"type": "platform_group", "body": [{"ext": null, "type": "platform", "indent": 0, "text": ["Windows"], "role": "item", "extent": [2487, 2505], "body": [{"type": "para", "indent": 4, "text": [{"type": "code", "text": ["$PDG_EXE"]}, " is replaced by ", {"type": "code", "text": [".exe"]}, "."], "extent": [2505, 2544]}, {"type": "para", "indent": 4, "text": ["For example, ", {"type": "code", "text": ["hython"]}, " will be framed between ", {"type": "code", "text": ["$HFS"]}, " and ", {"type": "code", "text": ["\\$PDG_EXE"]}, " and evaluated on Windows as:"], "extent": [2544, 2646]}, {"type": "para", "indent": 4, "text": [{"type": "code", "text": ["\\$HFS/bin/hython\\$PDG_EXE"]}, "  \u2192 ", {"type": "code", "text": ["C:/Program Files/Side Effects Software/Houdini 17.5.173/bin/hython.exe"]}], "extent": [2646, 2755]}], "container": true}, {"ext": null, "type": "platform", "indent": 0, "text": ["Mac"], "role": "item", "extent": [2755, 2769], "body": [{"type": "para", "indent": 4, "text": [{"type": "code", "text": ["$PDG_EXE"]}, " is removed."], "extent": [2769, 2797]}], "container": true}, {"ext": null, "type": "platform", "indent": 0, "text": ["Linux"], "role": "item", "extent": [2797, 2813], "body": [{"type": "para", "indent": 4, "text": [{"type": "code", "text": ["$PDG_EXE"]}, " is removed."], "extent": [2813, 2841]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["If you set the ", {"type": "code", "text": ["PATH"]}, " environment in a work item, then the path separators in the task\u2019s specification file are replaced with ", {"type": "code", "text": ["__PDG_PATHSEP__"]}, " to support cross-platform farms. And when you run that task on the farm, the ", {"type": "code", "text": ["PDGDeadline"]}, " plugin converts ", {"type": "code", "text": ["__PDG_PATHSEP__"]}, " to the local OS path separator. Please note though, if the work item\u2019s ", {"type": "code", "text": ["PATH"]}, "is set, then it will override the local machine\u2019s ", {"type": "code", "text": ["PATH"]}, " environment."], "extent": [2841, 3258]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Installation"], "extent": [3258, 3277], "body": [{"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["Install the Deadline client on the machine from which you will cook the TOP network. Refer to Thinkbox\u2019s instructions for how to install Deadline on each platform."], "extent": [3277, 3445]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Make sure of the following:"], "extent": [3445, 3476], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["The ", {"type": "code", "text": ["deadlinecommand"]}, " executable is working. See the ", {"type": "code", "text": ["$DEADLINE_PATH"]}, " note below."], "extent": [3476, 3565]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["The Deadline repository is accessible on the machine where the TOPs network will cook (either the repository is local, or the network mount/share it\u2019s on is available locally)."], "extent": [3565, 3749]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["If you are using a mixed farm set-up (for example, a farm with any combination of Linux, macOS, and Windows machines), then set the following path mapping for each OS:"], "extent": [3749, 3924], "body": [{"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": ["Navigate to Deadline\u2019s ", {"type": "code", "text": ["Configure Repository Options"]}, " > ", {"type": "code", "text": ["Mapped Paths"]}, "."], "extent": [3924, 4007]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["On ", {"type": "strong", "text": ["Windows"]}, ":"], "extent": [4007, 4031], "body": [{"type": "bullet_group", "body": [{"blevel": 14, "type": "bullet", "indent": 12, "text": ["Set up path mapping for ", {"type": "code", "text": ["$HFS"]}, " to the Houdini install directory on Deadline Worker machines."], "extent": [4031, 4139]}, {"blevel": 14, "type": "bullet", "indent": 12, "text": ["Set up path mapping for ", {"type": "code", "text": ["$PYTHON"]}, " to ", {"type": "code", "text": ["<expanded HFS path>/bin/python.exe"]}, " or your local Python installation."], "extent": [4139, 4263]}], "container": true}], "container": true}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["On ", {"type": "strong", "text": ["macOS"]}, " and ", {"type": "strong", "text": ["Linux"]}, ":"], "extent": [4263, 4298], "body": [{"type": "bullet_group", "body": [{"blevel": 14, "type": "bullet", "indent": 12, "text": ["Set up path mapping for ", {"type": "code", "text": ["$HFS"]}, " to the Houdini install director, or override the default parm values for Hython and Python in the Job Parms interface."], "extent": [4298, 4463], "body": [{"type": "para", "indent": 16, "text": [{"scheme": "Image", "value": "/images/nodes/top/deadline_hfs_config_repo.png", "type": "img", "text": ""}], "extent": [4463, 4535]}, {"type": "para", "indent": 16, "text": ["Use ", {"type": "code", "text": ["\\"]}, " in front of ", {"type": "code", "text": ["$HFS"]}, " to escape Houdini\u2019s local evaluation. Using ", {"type": "code", "text": ["\\$HFS"]}, " makes sure that the node evaluates the variable on the farm machine running the job."], "extent": [4535, 4716]}, {"type": "para", "indent": 16, "text": [{"scheme": "Image", "value": "/images/nodes/top/deadline_hfs_mapping_h.png", "type": "img", "text": ""}], "extent": [4716, 4786]}], "container": true}, {"blevel": 14, "type": "bullet", "indent": 12, "text": ["Repeat for any other variable that needs to be evaluated on the farm machine."], "extent": [4786, 4879]}], "container": true}], "container": true}], "container": true}], "container": true}], "container": true}], "container": true}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Set the ", {"type": "code", "text": ["$DEADLINE_PATH"]}, " variable to point to the Deadline installation directory."], "extent": [4879, 4965], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["If ", {"type": "code", "text": ["DEADLINE_PATH"]}, " is not set:"], "extent": [4965, 5003], "body": [{"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": ["You can add the Deadline installation directory to the system path."], "extent": [5003, 5082]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["On ", {"type": "strong", "text": ["macOS"]}, ", the node falls back to checking the standard Deadline install directory."], "extent": [5082, 5179]}], "container": true}], "container": true}], "container": true}], "container": true}], "container": true}]}, {"level": 1, "id": "top_attributes", "container": true, "type": "top_attributes_section", "indent": 0, "role": "section", "extent": [5179, 5195], "body": [{"type": "top_attributes_item_group", "body": [{"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["deadline_job_task_id"]}], "role": "item", "extent": [5195, 5222], "body": [{"type": "para", "indent": 4, "text": ["When the schedule submits a work item to Deadline, it adds this\n    attribute to the work item in order to track the Deadline job and task IDs."], "extent": [5241, 5391]}], "container": true, "attrs": {"type": "string"}}], "container": true, "role": "item_group"}], "text": "Top_attributes"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [5391, 5403], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Scheduler"], "extent": [5403, 5420], "body": [{"type": "para", "indent": 0, "text": ["Global parameters for all work items."], "extent": [5420, 5460]}, {"level": 4, "type": "sep", "indent": 0, "text": [" Deadline "], "extent": [5460, 5479], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Verbose Logging"], "extent": [5479, 5501], "body": [{"type": "para", "indent": 8, "text": ["When on, information is printed out to the console that could be useful for debugging problems during cooking."], "extent": [5535, 5655]}], "container": true, "attrs": {"id": "deadline_verboselog"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Block on Failed Work Items"], "extent": [5860, 5888], "body": [{"type": "para", "indent": 4, "text": ["When on, if there are any failed work items on the scheduler, then the cook is blocked from completing and the PDG graph cook is prevented from ending. This allows you to manually retry your failed work items. You can ", {"type": "em", "text": ["cancel"]}, " the scheduler\u2019s cook when it is blocked by failed work items by pressing the ", {"keys": ["ESC"], "type": "keys", "text": null}, " key, clicking the ", {"type": "ui", "text": ["Cancels the current cook"]}, " button in the ", {"scheme": null, "value": "/tops/ui#tasks_bar", "type": "link", "text": ["TOP tasks bar"], "fullpath": "/tops/ui.html#tasks_bar", "fragment": "#tasks_bar"}, ", or by using the cancel API method."], "extent": [5918, 6367]}], "container": true, "attrs": {"id": "pdg_waitforfailures"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Limit Jobs"], "extent": [1860, 1872], "body": [{"type": "para", "indent": 4, "text": ["When enabled, sets the maximum number of jobs that can be submitted by the scheduler at the same time."], "extent": [1895, 2003]}, {"type": "para", "indent": 4, "text": ["For farm schedulers like Tractor or HQueue, this parameter can be used to limit the total number of jobs submitted to the render farm itself. Setting this parameter can help limit the load on the render farm, especially when the PDG graph has a large number of small tasks."], "extent": [2003, 2282]}], "container": true, "attrs": {"id": "pdg_maxtasks"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Ignore Command Exit Code"], "extent": [5754, 5784], "body": [{"type": "para", "indent": 8, "text": ["When on, Deadline ignores the exit codes of tasks so that they always succeed, even if the tasks return non-zero exit codes (like error codes)."], "extent": [5825, 5978]}], "container": true, "attrs": {"id": "deadline_ignorecmdexitcode"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Force Reload Plugin"], "extent": [5978, 6003], "body": [{"type": "para", "indent": 8, "text": ["When on, Deadline reloads the plugin between frames of a job. This can help you deal with memory leaks or applications that do ", {"type": "em", "text": ["not"]}, " unload all job aspects properly."], "extent": [6044, 6219]}, {"type": "para", "indent": 8, "text": ["By default, ", {"type": "ui", "text": ["Force Reload Plugin"]}, " is ", {"type": "em", "text": ["off"]}, "."], "extent": [6219, 6274]}], "container": true, "attrs": {"id": "deadline_forcereloadplugin"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Task File Timeout"], "extent": [6274, 6297], "body": [{"type": "para", "indent": 8, "text": ["The maximum number of milliseconds that Deadline will wait for the task file to appear.  If the timeout is reached, then the task will fail."], "extent": [6329, 6483]}], "container": true, "attrs": {"id": "task_file_timeout"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Monitor Machine Name"], "extent": [6483, 6509], "body": [{"type": "para", "indent": 8, "text": ["Specifies the name of the machine to launch the Deadline Monitor on when jobs are scheduled."], "extent": [6551, 6653]}], "container": true, "attrs": {"id": "deadline_monitormachinename"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 4, "text": [" Advanced "], "extent": [6653, 6676], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Task Submit Batch Max"], "extent": [6676, 6708], "body": [{"type": "para", "indent": 12, "text": ["Sets the maximum number of tasks that can be submitted at a time to Deadline. Increase this value to submit more tasks, or decrease this value if your number of tasks are affecting UI performance in Houdini."], "extent": [6751, 6972]}], "container": true, "attrs": {"id": "deadline_tasksubbatchmix"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Tasks Check Batch Max"], "extent": [6972, 7003], "body": [{"type": "para", "indent": 12, "text": ["Sets the maximum number of tasks that can be checked in at a time in Deadline. Increase this value to check more tasks, or decrease this value if your number of tasks are affecting UI performance in Houdini."], "extent": [7048, 7269]}], "container": true, "attrs": {"id": "deadline_taskcheckbatchmax"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 8, "text": [" Repository "], "extent": [7269, 7298], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 12, "text": ["Repository Path"], "extent": [7298, 7328], "body": [{"type": "para", "indent": 16, "text": ["When on, overrides the system default Deadline repository with the one you specify."], "extent": [7370, 7471]}, {"type": "para", "indent": 16, "text": ["If you have a single Deadline repository or you want to use your system\u2019s default Deadline Repository, you should leave this field empty. Otherwise, you can specify another Deadline repository to use, along with SSL credentials if required. "], "extent": [7471, 7730]}], "container": true, "attrs": {"id": "deadline_repository"}, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Connection Type"], "extent": [7730, 7759], "body": [{"type": "para", "indent": 16, "text": ["The type of connection to the repository."], "extent": [7805, 7864]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 16, "text": ["Direct"], "extent": [7864, 7888], "body": [{"type": "para", "indent": 20, "text": ["Lets you specify the path to the mounted directory. For example: ", {"type": "code", "text": ["//testserver.com/DeadlineRepository"]}, ". "], "extent": [7888, 8014]}], "container": true}, {"type": "dt", "indent": 16, "text": ["Proxy"], "extent": [8014, 8037], "body": [{"type": "para", "indent": 20, "text": ["Lets you specify the URL to the repository along with the port and login information."], "extent": [8037, 8144]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "deadline_connectiontype"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 4, "type": "sep", "indent": 8, "text": [" PDG Deadline Plugin "], "extent": [8144, 8182], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 12, "text": ["Plugin"], "extent": [8182, 8203], "body": [{"type": "para", "indent": 16, "text": ["When on, allows you to specify a custom Deadline plugin to execute each PDG work item. When off, the PDGDeadline plugin that ships with Houdini is used."], "extent": [8241, 8411]}, {"type": "para", "indent": 16, "text": ["Do ", {"type": "em", "text": ["not"]}, " turn on this parameter unless you have written a custom Deadline plugin that supports the PDG cooking process. The other plugins shipped with Deadline will ", {"type": "em", "text": ["not"]}, " work out-of-the-box."], "extent": [8411, 8620]}, {"type": "para", "indent": 16, "text": ["If you want to control the execution of the PDG work items' processes, then you can write a custom Deadline plugin and specify it here along with the ", {"type": "ui", "text": ["Plugin Directory"]}, " below. The custom plugin must utilize the task files written out for each work item, and set the evaluated environment variables in the process. For reference, please see the ", {"type": "code", "text": ["PDGDeadline.py"]}, "."], "extent": [8620, 9001]}], "container": true, "attrs": {"id": "deadline_plugin"}, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Plugin Directory"], "extent": [9001, 9031], "body": [{"type": "para", "indent": 16, "text": ["Specifies the path to the custom Deadline plugin listed in the ", {"type": "ui", "text": ["Plugin"]}, " parameter field."], "extent": [9078, 9186]}, {"type": "para", "indent": 16, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Plugin"]}, " is turned ", {"type": "em", "text": ["on"]}, "."], "extent": [9186, 9268]}], "container": true, "attrs": {"id": "deadline_plugindirectory"}, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Copy Plugin to Working Directory"], "extent": [9268, 9314], "body": [{"type": "para", "indent": 16, "text": ["When on, copies the Deadline plugin files from the local Houdini installation or specified custom path to the PDG working directory so that farm machines can access them. "], "extent": [9356, 9545]}, {"type": "para", "indent": 16, "text": ["Do ", {"type": "em", "text": ["not"]}, " turn on this parameter if you are using an override path and the plugin is already available on the farm."], "extent": [9545, 9677]}], "container": true, "attrs": {"id": "deadline_copyplugin"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}], "container": true}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" Paths "], "extent": [9677, 9693], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Local Shared Path"], "extent": [9693, 9717], "body": [{"type": "para", "indent": 8, "text": ["Specifies the root path on your local machine that points to the directory where the job generates intermediate files and output. The intermediate files are placed in a subdirectory. "], "extent": [9746, 9939]}, {"type": "para", "indent": 8, "text": ["Use this parameter if your local and farm machines have the same path configuration."], "extent": [9939, 10037]}], "container": true, "attrs": {"id": "pdg_workingdir"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Remote Shared Path"], "extent": [10037, 10061], "body": [{"type": "para", "indent": 8, "text": ["When on, overrides the path to the mounted directory on the Deadline Worker machines that the working directory is rooted at and lets you specify a different path. "], "extent": [10092, 10266]}, {"type": "para", "indent": 8, "text": ["This path can include variables that allow the node to resolve to platform-specific paths (if using a multi-platform farm). If using the default value of ", {"type": "code", "text": ["$PDG_DIR"]}, ", then ", {"type": "code", "text": ["$PDG_DIR"]}, " should be mapped to the actual mounted value for each operating system used by Workers in Deadline\u2019s path mapping. You can also set this path to a value that Workers are already using in an existing farm."], "extent": [10266, 10662]}, {"type": "para", "indent": 8, "text": ["Use this parameter if your farm machines have different path configurations than your local submission machine. This is required for mixed farms where the mounted paths are different due to OS differences."], "extent": [10662, 10877]}], "container": true, "attrs": {"id": "remotesharedroot"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Load Item Data From"], "extent": [7196, 7217], "body": [{"type": "para", "indent": 4, "text": ["Determines how jobs processed by this scheduler should load work item attributes and data. "], "extent": [7250, 7347]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Temporary JSON File"], "extent": [7347, 7372], "body": [{"type": "para", "indent": 8, "text": ["The scheduler writes out a ", {"type": "code", "text": [".json"]}, " file for each work item to the PDG temporary file directory. This option is selected by default."], "extent": [7372, 7513]}], "container": true}, {"type": "dt", "indent": 4, "text": ["RPC Message"], "extent": [7513, 7530], "body": [{"type": "para", "indent": 8, "text": ["The scheduler\u2019s running work items request attributes and data over RPC. If the scheduler is a farm scheduler, then the job scripts running on the farm will also request item data from the submitter when creating their out-of-process work item objects. "], "extent": [7530, 7793]}, {"type": "para", "indent": 8, "text": ["This parameter option removes the need to write data files to disk and is useful when your local and remote machines ", {"type": "em", "text": ["do not"]}, " share a file system."], "extent": [7793, 7949]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemdatasource"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Delete Temp Dir"], "extent": [7949, 7966], "body": [{"type": "para", "indent": 4, "text": ["Determines when PDG should automatically delete the temporary file directory associated with the scheduler."], "extent": [7994, 8107]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Never"], "extent": [8107, 8118], "body": [{"type": "para", "indent": 8, "text": ["PDG never automatically deletes the temp file directory."], "extent": [8118, 8184]}], "container": true}, {"type": "dt", "indent": 4, "text": ["When Scheduler is Deleted"], "extent": [8184, 8215], "body": [{"type": "para", "indent": 8, "text": ["PDG automatically deletes the temp file directory when the scheduler is deleted or when Houdini is closed."], "extent": [8215, 8331]}], "container": true}, {"type": "dt", "indent": 4, "text": ["When Cook Completes"], "extent": [8331, 8356], "body": [{"type": "para", "indent": 8, "text": ["PDG automatically deletes the temp file directory each time a cook completes."], "extent": [8356, 8443]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_deletetempdir"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Compress Work Item Data"], "extent": [8443, 8468], "body": [{"type": "para", "indent": 4, "text": ["When on, PDG compresses the work item ", {"type": "code", "text": [".json"]}, " files when writing them to disk."], "extent": [8503, 8587]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Load Item Data From"]}, " is set to ", {"type": "ui", "text": ["Temporary JSON File"]}, "."], "extent": [8587, 8689]}], "container": true, "attrs": {"id": "pdg_compressworkitemdata"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Validate Outputs When Recooking"], "extent": [832, 865], "body": [{"type": "para", "indent": 4, "text": ["When on, PDG validates the output files of the scheduler\u2019s cooked work items when the graph is recooked to see if the files still exist on disk. Work items that are missing output files are then automatically dirtied and cooked again. If any work items are dirtied by parameter changes, then their cache files are also automatically invalidated. ", {"type": "ui", "text": ["Validate Outputs When Recooking"]}, " is ", {"type": "em", "text": ["on"]}, " by default."], "extent": [895, 1302]}], "container": true, "attrs": {"id": "pdg_validateoutputs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Check Expected Outputs on Disk"], "extent": [1302, 1334], "body": [{"type": "para", "indent": 4, "text": ["When on, PDG looks for any unexpected outputs (for example, like outputs that can result from custom output handling internal logic) that were not explicitly reported when the scheduler\u2019s work items finished cooking. This check occurs immediately after the scheduler marks work items as cooked, and expected outputs that were reported normally are not checked. If PDG finds any files that are different from the expected outputs, then they are automatically added as real output files."], "extent": [1369, 1860]}], "container": true, "attrs": {"id": "pdg_checkexpectedoutputs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Path Mapping"], "extent": [433, 447], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Global"], "extent": [469, 481], "body": [{"type": "para", "indent": 8, "text": ["If the ", {"scheme": null, "value": "/ref/panes/pdgpathmap", "type": "link", "text": ["PDG Path Map"], "fullpath": "/ref/panes/pdgpathmap.html"}, " exists, then it is applied to file paths."], "extent": [481, 576]}], "container": true}, {"type": "dt", "indent": 4, "text": ["None"], "extent": [576, 586], "body": [{"type": "para", "indent": 8, "text": ["Delocalizes paths using the ", {"type": "code", "text": ["PDG_DIR"]}, " token."], "extent": [586, 640]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_mapmode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Path Map Zone"], "extent": [640, 655], "body": [{"type": "para", "indent": 4, "text": ["When on, specifies a custom mapping zone to apply to all jobs executed by this scheduler. Otherwise, the local platforms are ", {"type": "code", "text": ["LINUX"]}, ", ", {"type": "code", "text": ["MAC"]}, " or ", {"type": "code", "text": ["WIN"]}, "."], "extent": [677, 832]}], "container": true, "attrs": {"id": "pdg_mapzone"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Job Spec"], "extent": [11243, 11259], "body": [{"level": 4, "type": "sep", "indent": 0, "text": [" Job Description "], "extent": [11259, 11286], "body": [{"type": "para", "indent": 4, "text": ["Job description properties that will be written to a Deadline job file."], "extent": [11286, 11364]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Batch Name"], "extent": [11364, 11380], "body": [{"type": "para", "indent": 8, "text": ["(Optional) Specifies the batch name under which to group the job."], "extent": [11416, 11491]}], "container": true, "attrs": {"id": "deadline_jobbatchname"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Job Name"], "extent": [11491, 11505], "body": [{"type": "para", "indent": 8, "text": ["(Required) Specifies the name of the job."], "extent": [11536, 11587]}], "container": true, "attrs": {"id": "deadline_jobname"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Comment"], "extent": [11587, 11600], "body": [{"type": "para", "indent": 8, "text": ["(Optional) Specifies the comment to add to all jobs."], "extent": [11634, 11696]}], "container": true, "attrs": {"id": "deadline_jobcomment"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Job Department"], "extent": [11696, 11716], "body": [{"type": "para", "indent": 8, "text": ["(Optional) Specifies the default department (for example, Lighting) for all jobs. This allows you to group jobs together and provide information to the farm operator."], "extent": [11747, 11923]}], "container": true, "attrs": {"id": "deadline_jobdept"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" Job Options "], "extent": [11923, 11945], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Pool"], "extent": [11945, 11956], "body": [{"type": "para", "indent": 8, "text": ["Specifies a named pool to use to execute the job. "], "extent": [11987, 12047]}, {"type": "para", "indent": 8, "text": ["By default, ", {"type": "ui", "text": ["Pool"]}, " is ", {"type": "code", "text": ["none"]}, "."], "extent": [12047, 12092]}], "container": true, "attrs": {"id": "deadline_jobpool"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Group"], "extent": [12092, 12103], "body": [{"type": "para", "indent": 8, "text": ["Specifies a named group to use to execute the job. "], "extent": [12135, 12196]}, {"type": "para", "indent": 8, "text": ["By default, ", {"type": "ui", "text": ["Group"]}, " is ", {"type": "code", "text": ["none"]}, "."], "extent": [12196, 12242]}], "container": true, "attrs": {"id": "deadline_jobgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Priority"], "extent": [12242, 12256], "body": [{"type": "para", "indent": 8, "text": ["Specifies the priority for all new jobs. The minimum value is ", {"type": "code", "text": ["0"]}, " and the maximum value is a setting from Deadline\u2019s repository options (usually ", {"type": "code", "text": ["100"]}, ")."], "extent": [12291, 12453]}, {"type": "para", "indent": 8, "text": ["By default, ", {"type": "ui", "text": ["Priority"]}, " is ", {"type": "code", "text": ["50"]}, "."], "extent": [12453, 12496]}], "container": true, "attrs": {"id": "deadline_jobpriority"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Concurrent Tasks"], "extent": [12496, 12518], "body": [{"type": "para", "indent": 8, "text": ["Specifies the number of tasks to run simultaneously for each Deadline Worker. "], "extent": [12557, 12645]}, {"type": "para", "indent": 8, "text": ["By default, ", {"type": "ui", "text": ["Concurrent Tasks"]}, " is ", {"type": "code", "text": ["1"]}, " (one task at a time)."], "extent": [12645, 12716]}], "container": true, "attrs": {"id": "deadline_concurrenttasks"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Limit Concurrent Tasks to CPUs"], "extent": [12716, 12752], "body": [{"type": "para", "indent": 8, "text": ["When on, limits the number of concurrent tasks to the number of CPUs on the Deadline Worker or the current ", {"type": "ui", "text": ["CPU Affinity"]}, " settings in Deadline."], "extent": [12796, 12951]}], "container": true, "attrs": {"id": "deadline_limitconcurrenttasks"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Pre Job Script"], "extent": [12951, 12971], "body": [{"type": "para", "indent": 8, "text": ["Specifies the path to the Python script to run when the job starts."], "extent": [13007, 13088]}], "container": true, "attrs": {"id": "deadline_prejobscript"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Post Job Script"], "extent": [13088, 13109], "body": [{"type": "para", "indent": 8, "text": ["Specifies the path to the Python script to run after the job finishes."], "extent": [13150, 13230]}], "container": true, "attrs": {"id": "deadline_postjobscript"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Machine Limit"], "extent": [13230, 13249], "body": [{"type": "para", "indent": 8, "text": ["Specifies the maximum number of Deadline Worker machines that can execute this job. "], "extent": [13289, 13383]}, {"type": "para", "indent": 8, "text": ["By default, ", {"type": "ui", "text": [" Machine Limit"]}, " is ", {"type": "code", "text": ["0"]}, " (no limit)."], "extent": [13383, 13442]}], "container": true, "attrs": {"id": "deadline_machinelimit"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Machine List"], "extent": [13442, 13460], "body": [{"type": "para", "indent": 8, "text": ["Specifies a restricted list of Deadline Workers that can execute this job. The kind of list that is written out is determined by the ", {"type": "ui", "text": ["Machine List is A Blacklist"]}, " parameter below."], "extent": [13499, 13690]}, {"type": "para", "indent": 8, "text": ["If the ", {"type": "ui", "text": ["Machine List is A Blacklist"]}, " parameter is ", {"type": "em", "text": ["off"]}, ", the list is written out as ", {"type": "code", "text": ["Whitelist"]}, " in the job info file. If ", {"type": "ui", "text": ["Machine List is A Blacklist"]}, " is ", {"type": "em", "text": ["on"]}, ", it is written out as ", {"type": "code", "text": ["Blacklist"]}, "."], "extent": [13690, 13897]}], "container": true, "attrs": {"id": "deadline_machinelist"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Machine List is a Blacklist"], "extent": [13897, 13930], "body": [{"type": "para", "indent": 8, "text": ["When on, the ", {"type": "ui", "text": ["Machine List"]}, " is written out as ", {"type": "code", "text": ["Blacklist"]}, ". This means that the listed machines are ", {"type": "em", "text": ["not"]}, " allowed to execute this job. When off, only the machines in the list are allowed to execute this job."], "extent": [13970, 14188]}], "container": true, "attrs": {"id": "deadline_machinelistblack"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Limits"], "extent": [14188, 14200], "body": [{"type": "para", "indent": 8, "text": ["Specifies the Deadline Limits (Resource or License type) required for the scheduled job. The limits are created and managed through the ", {"type": "ui", "text": ["Deadline Monitor"]}, " in Deadline."], "extent": [14230, 14409]}], "container": true, "attrs": {"id": "deadline_limits"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["On Job Complete"], "extent": [14409, 14430], "body": [{"type": "para", "indent": 8, "text": ["Determines what happens to with the job\u2019s information when it finishes. "], "extent": [14467, 14549]}, {"type": "para", "indent": 8, "text": ["By default, ", {"type": "ui", "text": ["On Job Complete"]}, " is ", {"type": "ui", "text": ["Nothing"]}, ". "], "extent": [14549, 14607]}, {"type": "para", "indent": 8, "text": ["For more information, see Deadline\u2019s documentation."], "extent": [14607, 14668]}], "container": true, "attrs": {"id": "deadline_onjobcomplete"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" Job File Key-Values "], "extent": [14668, 14698], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Job Key-Values"], "extent": [14698, 14719], "body": [{"type": "para", "indent": 8, "text": ["Lets you add custom key-value options for this job. These are written out to the job file required by the Deadline plugin."], "extent": [14756, 14888]}], "container": true, "attrs": {"id": "deadline_jobfilekvpair"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" Plugin File Key-Values "], "extent": [14888, 14921], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Plugin File Key-Values"], "extent": [14921, 14950], "body": [{"type": "para", "indent": 8, "text": ["Lets you add custom key-value options for the plug-in. These are written out to the plugin file required by the Deadline plugin."], "extent": [14990, 15128]}], "container": true, "attrs": {"id": "deadline_pluginfilekvpair"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Submit As Job"], "extent": [15128, 15148], "body": [{"type": "para", "indent": 4, "text": ["Allows you to schedule a standalone job (a job that does ", {"type": "em", "text": ["not"]}, " require Houdini to be running) on your Deadline farm that cooks the current TOP network."], "extent": [15170, 15327]}, {"type": "para", "indent": 4, "text": ["The parameters below determine the behavior of this job."], "extent": [15327, 15389]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Job Name"], "extent": [15389, 15403], "body": [{"type": "para", "indent": 8, "text": ["Specifies the name to use for the job."], "extent": [15440, 15488]}], "container": true, "attrs": {"id": "deadline_submitjobname"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Output Node"], "extent": [15488, 15505], "body": [{"type": "para", "indent": 7, "text": ["When on, specifies the path to the node to cook. If a node is not specified, the display node of the network that contains the scheduler is cooked instead."], "extent": [15532, 15696]}], "container": true, "attrs": {"id": "submitjobnode"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Use MQ Job Options"], "extent": [15696, 15720], "body": [{"type": "para", "indent": 8, "text": ["When on, the node uses the job settings specified by the ", {"scheme": null, "value": "#mqjoboptions", "type": "link", "text": ["MQ Job Options"], "fullpath": "/nodes/top/deadlinescheduler.html#mqjoboptions", "fragment": "#mqjoboptions"}, " parameters."], "extent": [15763, 15872]}], "container": true, "attrs": {"id": "deadline_submitjobusemqspecs"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Submit Graph As Job"], "extent": [15872, 15897], "body": [{"type": "para", "indent": 8, "text": ["Cooks the current TOP network as a standalone job in a ", {"type": "code", "text": ["hython"]}, " session on your Deadline farm."], "extent": [15921, 16025]}], "container": true, "attrs": {"id": "submitjob"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 4, "text": [" Data Layer Server "], "extent": [16025, 16057], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Server"], "extent": [4064, 4079], "body": [{"type": "para", "indent": 4, "text": ["When on, turns on the data layer server for the TOP job that will cook on the farm. This allows PilotPDG or other WebSocket clients to connect to the cooking job remotely to view the state of PDG."], "extent": [4111, 4313]}], "container": true, "attrs": {"id": "enabledatalayerserver"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Server Port"], "extent": [4313, 4326], "body": [{"type": "para", "indent": 4, "text": ["Determines which server port to use for the data layer server."], "extent": [4353, 4421]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Enable Server"]}, " is ", {"type": "em", "text": ["on"]}, "."], "extent": [4421, 4491]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [4491, 4506], "body": [{"type": "para", "indent": 8, "text": ["A free TCP port to use for the data layer server chosen by the node."], "extent": [4506, 4584]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [4584, 4596], "body": [{"type": "para", "indent": 8, "text": ["A custom TCP port to use for the data layer server specified by the user."], "extent": [4596, 4679]}, {"type": "para", "indent": 8, "text": ["This is useful when there is a firewall between the farm machine and the monitoring machine."], "extent": [4679, 4781]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "usedatalayerport"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Auto Connect"], "extent": [4781, 4795], "body": [{"type": "para", "indent": 4, "text": ["When on, the scheduler will try to send a command to create a remote visualizer when the job starts. If successful, then a remote graph is created and is automatically connected to the server executing the job. The client submitting the job ", {"type": "em", "text": ["must"]}, " be visible to the server running the job or the connection will fail."], "extent": [4823, 5146]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Enable Server"]}, " is ", {"type": "em", "text": ["on"]}, "."], "extent": [5146, 5216]}], "container": true, "attrs": {"id": "createremotegraph"}, "role": "item"}], "container": true, "role": "item_group"}, {"type": "include_group", "body": [{"ext": "_scheduler_submit#submitjobwhenfinished", "type": "include", "indent": 8, "role": "item", "extent": [16226, 16285]}], "container": true, "role": "item_group"}], "container": true}], "attrs": {"id": "submitgraph"}}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Message Queue"], "extent": [16285, 16305], "body": [{"type": "para", "indent": 4, "text": ["The Message Queue (MQ) server is required to get work item results from the jobs running on the farm. Several types of MQ are provided to work around networking issues such as firewalls."], "extent": [16328, 16520]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Type"], "extent": [16520, 16530], "body": [{"type": "para", "indent": 8, "text": ["The type of Message Queue (MQ) server to use."], "extent": [16552, 16607]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Local"], "extent": [16607, 16622], "body": [{"type": "para", "indent": 12, "text": ["Starts or shares the MQ server on your local machine."], "extent": [16622, 16689]}, {"type": "para", "indent": 12, "text": ["If another Deadline scheduler node (in the current Houdini session) already started a MQ server locally, then this scheduler node uses that MQ server automatically. "], "extent": [16689, 16868]}, {"type": "para", "indent": 12, "text": ["If there are ", {"type": "em", "text": ["not"]}, " any firewalls between your local machine and the farm machines, then we recommend you use this parameter."], "extent": [16868, 17006]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Farm"], "extent": [17006, 17020], "body": [{"type": "para", "indent": 12, "text": ["Starts or shares the MQ server on the farm as a separate job. "], "extent": [17020, 17096]}, {"type": "para", "indent": 12, "text": ["The ", {"scheme": null, "value": "mqjoboptions", "type": "link", "text": ["MQ Job Options"], "fullpath": "/nodes/top/mqjoboptions.html"}, " allow you to specify the job settings. "], "extent": [17096, 17183]}, {"type": "para", "indent": 12, "text": ["If another Deadline scheduler node (in the current Houdini session)  already started a MQ server on the farm, then this scheduler node uses that MQ server automatically. "], "extent": [17183, 17367]}, {"type": "para", "indent": 12, "text": ["If there are firewalls between your local machine and the farm machines, then we recommend you use this parameter."], "extent": [17367, 17495]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Connect"], "extent": [17495, 17512], "body": [{"type": "para", "indent": 12, "text": ["Connects to an already running MQ server. "], "extent": [17512, 17568]}, {"type": "para", "indent": 12, "text": ["The ", {"scheme": null, "value": "/ref/utils/mqserver", "type": "link", "text": ["MQ server"], "fullpath": "/ref/utils/mqserver.html"}, " needs to have been started manually. This is the manual option for managing the MQ and useful for running MQ as a service on a single machine to serve all PDG Deadline jobs."], "extent": [17568, 17791]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "mqusage"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Address"], "extent": [17791, 17804], "body": [{"type": "para", "indent": 8, "text": ["Specifies the IP address to use when connecting to the MQ server."], "extent": [17825, 17900]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Type"]}, " is set to ", {"type": "ui", "text": ["Connect"]}, "."], "extent": [17900, 17979]}], "container": true, "attrs": {"id": "mqaddr"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Task Callback Port"], "extent": [17979, 18003], "body": [{"type": "para", "indent": 8, "text": ["Sets the TCP Port used by the Message Queue Server for the XMLRPC callback API. This port must be accessible between farm blades."], "extent": [18034, 18173]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Type"]}, " is set to ", {"type": "ui", "text": ["Connect"]}, "."], "extent": [18173, 18252]}], "container": true, "attrs": {"id": "taskcallbackport"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Relay Port"], "extent": [18252, 18268], "body": [{"type": "para", "indent": 8, "text": ["Sets the TCP Port used by the Message Queue Server connection between PDG and the blade that is running the Message Queue Command. This port must be reachable on farm blades by the PDG/user machine."], "extent": [18294, 18502]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Type"]}, " is set to ", {"type": "ui", "text": ["Connect"]}, "."], "extent": [18502, 18585]}], "container": true, "attrs": {"id": "mqrelayport"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 4, "text": [" MQ Job Options "], "extent": [18585, 18614], "body": [{"type": "para", "indent": 8, "text": ["These parameters are only available when ", {"type": "ui", "text": ["Type"]}, " is set to ", {"type": "ui", "text": ["Farm"]}, "."], "extent": [18641, 18720]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Batch Name"], "extent": [18720, 18740], "body": [{"type": "para", "indent": 12, "text": ["When on, specifies a custom Deadline batch name for the MQ job. When off, the MQ job uses the job batch name."], "extent": [18782, 18905]}], "container": true, "attrs": {"id": "deadline_mqjobbatchname"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Job Name"], "extent": [18905, 18923], "body": [{"type": "para", "indent": 12, "text": ["(Required) Specifies the name for the MQ job."], "extent": [18960, 19019]}], "container": true, "attrs": {"id": "deadline_mqjobname"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Comment"], "extent": [19019, 19036], "body": [{"type": "para", "indent": 12, "text": ["(Optional) Specifies a comment to add to the MQ job."], "extent": [19076, 19142]}], "container": true, "attrs": {"id": "deadline_mqjobcomment"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Department"], "extent": [19142, 19162], "body": [{"type": "para", "indent": 12, "text": ["(Optional) Specifies the default department (for example, Lighting) for the MQ job. This allows you to group jobs together and provide information to the farm operator."], "extent": [19199, 19381]}], "container": true, "attrs": {"id": "deadline_mqjobdept"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Pool"], "extent": [19381, 19395], "body": [{"type": "para", "indent": 12, "text": ["Specifies the pool to use to execute the MQ job."], "extent": [19432, 19494]}, {"type": "para", "indent": 12, "text": ["By default, ", {"type": "ui", "text": ["Pool"]}, " is ", {"type": "code", "text": ["none"]}, "."], "extent": [19494, 19543]}], "container": true, "attrs": {"id": "deadline_mqjobpool"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Group"], "extent": [19543, 19558], "body": [{"type": "para", "indent": 12, "text": ["Specifies the group to use to execute the MQ job."], "extent": [19596, 19659]}, {"type": "para", "indent": 12, "text": ["By default, ", {"type": "ui", "text": ["Group"]}, " is ", {"type": "code", "text": ["none"]}, "."], "extent": [19659, 19709]}], "container": true, "attrs": {"id": "deadline_mqjobgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Priority"], "extent": [19709, 19727], "body": [{"type": "para", "indent": 12, "text": ["Sets the priority for the MQ job. The minimum priority is ", {"type": "code", "text": ["0"]}, ". The maximum priority comes from a setting in Deadline\u2019s repository options (for example, this is usually ", {"type": "code", "text": ["100"]}, ")."], "extent": [19768, 19957]}, {"type": "para", "indent": 12, "text": ["By default, ", {"type": "ui", "text": ["Priority"]}, " is ", {"type": "code", "text": ["50"]}, "."], "extent": [19957, 20004]}], "container": true, "attrs": {"id": "deadline_mqjobpriority"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Machine Limit"], "extent": [20004, 20027], "body": [{"type": "para", "indent": 12, "text": ["Specifies the maximum number of Deadline Worker machines that can execute this MQ job."], "extent": [20073, 20173]}, {"type": "para", "indent": 12, "text": ["By default, ", {"type": "ui", "text": ["Machine Limit"]}, " is ", {"type": "code", "text": ["0"]}, " (no limit)."], "extent": [20173, 20235]}], "container": true, "attrs": {"id": "deadline_mqmachinelimit"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Machine List"], "extent": [20235, 20257], "body": [{"type": "para", "indent": 12, "text": ["Specifies a restricted list of Deadline Workers that can execute this MQ job. The kind of list that is written out is determined by the ", {"type": "ui", "text": ["Machine List is A Blacklist"]}, " parameter below."], "extent": [20302, 20500]}, {"type": "para", "indent": 12, "text": ["If the ", {"type": "ui", "text": ["Machine List is A Blacklist"]}, " parameter is ", {"type": "em", "text": ["off"]}, ", the list is written out as ", {"type": "code", "text": ["Whitelist"]}, " in the job info file. If ", {"type": "ui", "text": ["Machine List is A Blacklist"]}, " is ", {"type": "em", "text": ["on"]}, ", it is written out as ", {"type": "code", "text": ["Blacklist"]}, "."], "extent": [20500, 20711]}], "container": true, "attrs": {"id": "deadline_mqmachinelist"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Machine List is a Blacklist"], "extent": [20711, 20748], "body": [{"type": "para", "indent": 12, "text": ["When on, the ", {"type": "ui", "text": ["Machine List"]}, " is written out as ", {"type": "code", "text": ["Blacklist"]}, ". This means that the listed machines are ", {"type": "em", "text": ["not"]}, " allowed to execute this MQ job. When off, only the machines in the list are allowed to execute this MQ job."], "extent": [20794, 21022]}], "container": true, "attrs": {"id": "deadline_mqmachinelistblack"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Limits"], "extent": [21022, 21038], "body": [{"type": "para", "indent": 12, "text": ["Specifies the Deadline Limits (Resource or License type) required for the scheduled MQ job. The limits are created and managed through the ", {"type": "ui", "text": ["Deadline Monitor"]}, " in Deadline."], "extent": [21074, 21260]}], "container": true, "attrs": {"id": "deadline_mqlimits"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["On Job Complete"], "extent": [21260, 21285], "body": [{"type": "para", "indent": 12, "text": ["Determines what happens to with the MQ job\u2019s information when it finishes. "], "extent": [21328, 21417]}, {"type": "para", "indent": 12, "text": ["By default, ", {"type": "ui", "text": ["On Job Complete"]}, " is ", {"type": "ui", "text": ["Nothing"]}, ". "], "extent": [21417, 21479]}, {"type": "para", "indent": 12, "text": ["For more information, see Deadline\u2019s documentation."], "extent": [21479, 21544]}], "container": true, "attrs": {"id": "deadline_mqonjobcomplete"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "mqjoboptions"}}], "attrs": {"id": "messagequeue"}}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["RPC Server"], "extent": [21544, 21561], "body": [{"type": "para", "indent": 0, "text": ["Parameters for configuring the behavior of RPC connections from out of process jobs back to a scheduler instance."], "extent": [21561, 21677]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Ignore RPC Errors"], "extent": [8689, 8708], "body": [{"type": "para", "indent": 4, "text": ["Determines whether RPC errors should cause out of process jobs to fail."], "extent": [8738, 8815]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Never"], "extent": [8815, 8826], "body": [{"type": "para", "indent": 8, "text": ["RPC connection errors will cause work items to fail."], "extent": [8826, 8888]}], "container": true}, {"type": "dt", "indent": 4, "text": ["When Cooking Batches"], "extent": [8888, 8914], "body": [{"type": "para", "indent": 8, "text": ["RPC connection errors are ignored for batch work items, which typically make a per-frame RPC back to PDG to report output files and communicate sub item status. This option prevents long-running simulations from being killed on the farm, if the submitter Houdini session crashes or becomes unresponsive."], "extent": [8914, 9227]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Always"], "extent": [9227, 9239], "body": [{"type": "para", "indent": 8, "text": ["RPC connection errors will never cause a work item to fail. Note that if a work item can\u2019t communicate with the scheduler, it will be unable to report output files, attributes or its cook status back to the PDG graph."], "extent": [9239, 9466]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_rpcignoreerrors"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max RPC Errors"], "extent": [9466, 9482], "body": [{"type": "para", "indent": 4, "text": ["The maximum number of RPC failures that can occur before RPC is disabled in an out of process job."], "extent": [9509, 9613]}], "container": true, "attrs": {"id": "pdg_rpcmaxerrors"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Connection Timeout"], "extent": [9613, 9633], "body": [{"type": "para", "indent": 4, "text": ["The number of seconds to wait when an out of process jobs makes an RPC connection to the main PDG graph, before assuming the connection failed."], "extent": [9658, 9807]}], "container": true, "attrs": {"id": "pdg_rpctimeout"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Connection Retries"], "extent": [9807, 9827], "body": [{"type": "para", "indent": 4, "text": ["The number of times to retry a failed RPC call made by an out of process job."], "extent": [9852, 9935]}], "container": true, "attrs": {"id": "pdg_rpcretries"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Retry Backoff"], "extent": [9935, 9950], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Connection Retries"]}, " is greater than 0, this parameter determines how much time should be spent between consecutive retries."], "extent": [9975, 10112]}], "container": true, "attrs": {"id": "pdg_rpcbackoff"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Batch Poll Rate"], "extent": [10112, 10129], "body": [{"type": "para", "indent": 4, "text": ["Determines how quickly an out of process batch work item should poll the main Houdini session for dependency status updates, if the batch is configured to cook when it\u2019s first frame of work is ready. This has no impact on other types of batch work items."], "extent": [10152, 10412]}], "container": true, "attrs": {"id": "pdg_rpcbatch"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Release Job Slot When Polling"], "extent": [10412, 10443], "body": [{"type": "para", "indent": 4, "text": ["Determines whether or not the scheduler should decrement the number of active workers when a batch is polling for dependency updates."], "extent": [10468, 10606]}], "container": true, "attrs": {"id": "pdg_rpcrelease"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Job Parms"], "extent": [21990, 22006], "body": [{"type": "para", "indent": 0, "text": ["Job-specific parameters that affect all submitted jobs, but can be overridden on a node-by-node basis.  \nFor more information, see ", {"scheme": null, "value": "/tops/schedulers#jobparms", "type": "link", "text": ["Scheduler Job Parms / Properties"], "fullpath": "/tops/schedulers.html#jobparms", "fragment": "#jobparms"}, "."], "extent": [22006, 22201]}, {"level": 4, "type": "sep", "indent": 0, "text": [" Paths "], "extent": [22201, 22217], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["HFS"], "extent": [22217, 22227], "body": [{"type": "para", "indent": 8, "text": ["Specifies the rooted path to the Houdini installation on all Deadline Worker machines."], "extent": [22254, 22350]}, {"type": "para", "indent": 8, "text": ["If you are using variables, they are evaluated locally unless escaped with ", {"type": "code", "text": ["\\"]}, ". For example, ", {"type": "code", "text": ["$HFS"]}, " would be evaluated on the local machine, and then the result value would be sent to the farm. "], "extent": [22350, 22554]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["To force evaluation on the Worker instead (like for a mixed farm set-up), use ", {"type": "code", "text": ["\\$HFS"]}, " and then set the following (for example) in Deadline\u2019s Path Mapping"], "extent": [22554, 22722], "body": [{"type": "para", "indent": 12, "text": [{"type": "code", "text": ["$HFS"]}, " = ", {"type": "code", "text": ["C:/Program Files/Side Effects Software/Houdini 17.5.173"]}, "."], "extent": [22722, 22803]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "deadline_hfs"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Python"], "extent": [22803, 22815], "body": [{"type": "para", "indent": 8, "text": ["Specifies the rooted path to Python that should point to the required Python version installed on all Worker machines (for example, ", {"type": "code", "text": ["$HFS/bin/python"]}, ")."], "extent": [22845, 23006]}, {"type": "para", "indent": 8, "text": ["If you are using variables, then you should map them in Deadline\u2019s Path Mapping. For example, if you are using default values, then you would path map ", {"type": "code", "text": ["$HFS"]}, ". And if on Windows, you would also add ", {"type": "code", "text": [".exe"]}, " or ", {"type": "code", "text": ["\\$PDG_EXE"]}, " (for a mixed farm setup) to the path mapping. So that mapping would look something like: ", {"type": "code", "text": ["$HFS/bin/python\\$PDG_EXE"]}, "  \u2192 ", {"type": "code", "text": ["C:/Program Files/Side Effects Software/Houdini 17.5.173/bin/python.exe"]}, "."], "extent": [23006, 23427]}], "container": true, "attrs": {"id": "deadline_python"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Hython"], "extent": [6607, 6615], "body": [{"type": "para", "indent": 4, "text": ["Determines which Houdini Python interpreter (hython) is used for your Houdini jobs. You can also specify this hython in a command using the ", {"type": "code", "text": ["PDG_HYTHON"]}, " token."], "extent": [6639, 6804]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Default"], "extent": [6804, 6817], "body": [{"type": "para", "indent": 8, "text": ["Use the default hython interpreter that is installed with Houdini."], "extent": [6817, 6893]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [6893, 6905], "body": [{"type": "para", "indent": 8, "text": ["Use the executable path specified by the ", {"type": "ui", "text": ["Hython Executable"]}, " parameter."], "extent": [6905, 6988]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_hythonbin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Hython Executable"], "extent": [6988, 7007], "body": [{"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Hython"]}, " is set to ", {"type": "ui", "text": ["Custom"]}, "."], "extent": [7046, 7122]}, {"type": "para", "indent": 4, "text": ["The full path to the hython executable to use for your Houdini jobs."], "extent": [7122, 7196]}], "container": true, "attrs": {"id": "pdg_hythonbincustomuniversal"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" Scripts "], "extent": [23536, 23554], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Pre Task Script"], "extent": [23554, 23576], "body": [{"type": "para", "indent": 8, "text": ["Specifies the Python script to run before executing the task."], "extent": [23613, 23684]}], "container": true, "attrs": {"id": "deadline_pretaskscript"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Post Task Script"], "extent": [23684, 23706], "body": [{"type": "para", "indent": 8, "text": ["Specifies the Python script to run after executing the task."], "extent": [23744, 23814]}], "container": true, "attrs": {"id": "deadline_posttaskscript"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" Task Environment "], "extent": [23814, 23841], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Inherit Local Environment"], "extent": [23841, 23873], "body": [{"type": "para", "indent": 8, "text": ["When on, the environment variables in the current session of PDG are copied into the task\u2019s environment."], "extent": [23912, 24026]}], "container": true, "attrs": {"id": "deadline_inheritlocalenv"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Houdini Max Threads"], "extent": [24026, 24051], "body": [{"type": "para", "indent": 8, "text": ["When on, sets the ", {"type": "code", "text": ["HOUDINI_MAXTHREADS"]}, " environment to the specified value. By default, ", {"type": "ui", "text": ["Houdini Max Threads"]}, " is set to ", {"type": "code", "text": ["0"]}, " (all available processors)."], "extent": [24095, 24257]}, {"type": "para", "indent": 8, "text": ["Positive values limit the number of threads that can be used, and those values are clamped to the number of available CPU cores. A value of ", {"type": "code", "text": ["1"]}, " disables multi-threading entirely, as it limits the scheduler to only one thread."], "extent": [24257, 24492]}, {"type": "para", "indent": 8, "text": ["For negative values, the value is added to the maximum number of processors to determine the threading limit. For example, a value of ", {"type": "code", "text": ["-1"]}, " would use all CPU cores except ", {"type": "code", "text": ["1"]}, ".   "], "extent": [24492, 24679]}], "container": true, "attrs": {"id": "deadline_usehoudinimaxthreads"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Unset Variables"], "extent": [24679, 24700], "body": [{"type": "para", "indent": 8, "text": ["Specifies a space-separated list of environment variables that should be unset in or removed from the scheduler\u2019s task environment."], "extent": [24732, 24877]}], "container": true, "attrs": {"id": "deadline_envunset"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Environment File"], "extent": [24877, 24899], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Environment Variables"], "extent": [16, 39], "body": [{"type": "para", "indent": 4, "text": ["Additional work item environment variables can be specified here.  These will be added to the job\u2019s environment.  If the value of the variable is empty, it will be removed from the job\u2019s environment."], "extent": [61, 266]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Name"], "extent": [266, 276], "body": [{"type": "para", "indent": 8, "text": ["Name of the work item environment variable."], "extent": [305, 366]}], "container": true, "attrs": {"id": "local_envname#"}}, {"type": "dt", "indent": 4, "text": ["Value"], "extent": [366, 377], "body": [{"type": "para", "indent": 8, "text": ["Value of the work item environment variable."], "extent": [407, 461]}], "container": true, "attrs": {"id": "local_envvalue#"}}], "container": true}], "container": true, "attrs": {"id": "pdg_env_vars"}}], "container": true}, {"type": "para", "indent": 0, "text": ["Specifies an environment file for environment variables to be added to the job\u2019s environment. An environment variable from the file will overwrite an existing environment variable if they share identical names."], "extent": [461, 672], "body": [], "container": true, "attrs": {"id": "pdg_env_file_txt"}}], "container": true, "attrs": {"id": "deadline_env_file"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Environment Variables"], "extent": [25005, 25032], "body": [{"type": "para", "indent": 8, "text": ["Allows you to add custom environment variables to each task."], "extent": [25064, 25134]}], "container": true, "attrs": {"id": "deadline_envmulti"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" GPU Affinity Overrides "], "extent": [25134, 25167], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["OpenCL Force GPU Rendering"], "extent": [25167, 25200], "body": [{"type": "para", "indent": 8, "text": ["For OpenCL nodes only. Sets the GPU affinity based on the current Worker\u2019s GPU setting and user specified GPUs."], "extent": [25238, 25359]}], "container": true, "attrs": {"id": "deadline_openclforcegpu"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["GPUs Per Task"], "extent": [25359, 25378], "body": [{"type": "para", "indent": 8, "text": ["For Redshift and OpenCL nodes. Specifies the number of GPUs to use per task. This value must be a subset of the Worker\u2019s GPU affinity settings in Deadline."], "extent": [25413, 25578]}], "container": true, "attrs": {"id": "deadline_gpuspertask"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Select GPU Devices"], "extent": [25578, 25602], "body": [{"type": "para", "indent": 8, "text": ["For Redshift and OpenCL nodes. Specifies a comma-separated list of GPU IDs to use. The GPU IDs specified here must be a subset of the Worker\u2019s ", {"type": "ui", "text": ["GPU affinity"]}, " settings in Deadline."], "extent": [25643, 25834]}], "container": true, "attrs": {"id": "deadline_gpusselectdevices"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [25834, 25843], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/localscheduler", "type": "link", "text": "", "fullpath": "/nodes/top/localscheduler.html"}], "extent": [25843, 25872]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/hqueuescheduler", "type": "link", "text": "", "fullpath": "/nodes/top/hqueuescheduler.html"}], "extent": [25872, 25901]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/tractorscheduler", "type": "link", "text": "", "fullpath": "/nodes/top/tractorscheduler.html"}], "extent": [25901, 25931]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/pythonscheduler", "type": "link", "text": "", "fullpath": "/nodes/top/pythonscheduler.html"}], "extent": [25931, 25960]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": null, "value": "/ref/utils/mqserver", "type": "link", "text": ["MQ Server"], "fullpath": "/ref/utils/mqserver.html"}], "extent": [25960, 25994]}], "container": true}], "text": "Related"}], "title": ["Deadline Scheduler"], "summary": ["The PDG scheduler for Thinkbox\u2019s Deadline software."], "included": ["/nodes/top/_scheduler_common", "/nodes/top/_scheduler_task_env_common"]}