{"type": "root", "attrs": {"type": "node", "context": "top", "internal": "pythonprocessor", "icon": "MISC/python", "since": "17.5", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Python Processor"], "extent": [95, 116]}, {"type": "summary", "indent": 0, "text": ["Generates work items using a Python script."], "extent": [116, 168]}, {"type": "para", "indent": 0, "text": ["This node lets you write custom processor logic using the Python API. PDG evaluates scripts on this node when it generates or cooks work items. "], "extent": [168, 314]}, {"type": "para", "indent": 0, "text": ["For a detailed explanation of each of the callback functions you can implement, see the ", {"scheme": null, "value": "/tops/processors", "type": "link", "text": ["Processor node API reference"], "fullpath": "/tops/processors.html"}, "."], "extent": [314, 452]}, {"type": "para", "indent": 0, "text": ["For use cases that require a single work item per upstream item that runs a\nPython Script, please use the simpler ", {"scheme": "Icon", "value": "MISC/python.svg", "type": "link", "text": "", "fullpath": "/nodes/top/MISC/python.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/top/pythonscript", "type": "link", "text": ["Python Script"], "fullpath": "/nodes/top/pythonscript.html"}, " or\n", {"scheme": "Icon", "value": "TOP/genericgenerator.svg", "type": "link", "text": "", "fullpath": "/nodes/top/TOP/genericgenerator.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/top/genericgenerator", "type": "link", "text": ["Generic Generator"], "fullpath": "/nodes/top/genericgenerator.html"}, " TOP nodes."], "extent": [452, 720]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [720, 732], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Processor"], "extent": [732, 749], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Save to Python Script"], "extent": [16, 39], "body": [{"type": "para", "indent": 4, "text": ["Saves the callbacks defined on this node to a Python script, which can be\n    imported and registered with PDG. The parameter template associated with\n    the node is also saved and embedded into the Python script. After saving\n    the script is automatically imported and the node type is made available\n    in the TAB menu."], "extent": [64, 395]}], "container": true, "attrs": {"id": "savenodescript"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Save to Digital Asset"], "extent": [395, 418], "body": [{"type": "para", "indent": 4, "text": ["Saves the callbacks defined on this node to a standalone Houdini Digital\n    asset. The callbacks are stored inside the .hda itself and are registered\n    with PDG as an embedded PDG node type."], "extent": [440, 638]}], "container": true, "attrs": {"id": "savenodehda"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Generate When"], "extent": [16, 31], "body": [{"type": "para", "indent": 4, "text": ["Determines when this node will generate work items. You should generally leave this set to ", {"type": "q", "text": ["Automatic"]}, " unless you know the node requires a specific generation mode, or that the work items need to be generated dynamically."], "extent": [64, 291]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["All Upstream Items are Generated"], "extent": [291, 329], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items once all of the input nodes have generated their work items."], "extent": [329, 437]}], "container": true}, {"type": "dt", "indent": 4, "text": ["All Upstream Items are Cooked"], "extent": [437, 472], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items once all of the input nodes have cooked their work items."], "extent": [472, 577]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Each Upstream Item is Cooked"], "extent": [577, 611], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items each time a work item in an input node is cooked."], "extent": [611, 708]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [708, 723], "body": [{"type": "para", "indent": 11, "text": ["The generation mode is selected based on the generation mode of the input nodes. If any of the input nodes are generating work items when their inputs cook, this node will be set to ", {"type": "ui", "text": ["Each Upstream Item is Cooked"]}, ". Otherwise, it will be set to ", {"type": "ui", "text": ["All Upstream Items are Generated"]}, "."], "extent": [723, 1018]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemgeneration"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Command"], "extent": [1018, 1027], "body": [{"type": "para", "indent": 4, "text": ["The command line (executable and arguments) to run when the work item runs.\n    If this field is empty the work item will not be scheduled, and will be\n    instantly marked done once all of its dependencies finish. "], "extent": [1049, 1270]}], "container": true, "attrs": {"id": "pdg_command"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Generate"], "extent": [915, 932], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["onGenerate Callback"], "extent": [932, 954], "body": [{"type": "para", "indent": 4, "text": ["The script the node runs whenever it needs to generate new work items from upstream items or from nothing (if it has no inputs). You can use this script for generating both static and dynamic work items."], "extent": [973, 1182]}, {"type": "para", "indent": 4, "text": ["When generating static work items, a single call will be made to the script and \n    it will receive the entire list of upstream static items in the\n    ", {"type": "code", "text": ["upstream_items"]}, " variable. When generating dynamic work items, the script\n    is called once for each upstream item that has finished cooking."], "extent": [1182, 1487]}, {"type": "para", "indent": 4, "text": ["The following variables are available:"], "extent": [1487, 1531]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["self"]}], "extent": [1531, 1543], "body": [{"type": "para", "indent": 8, "text": ["The underlying ", {"type": "em", "text": ["PDG node"]}, " associated with the TOP node. This is different from the TOP node itself, which is a standard Houdini operator."], "extent": [1543, 1690]}, {"type": "para", "indent": 8, "text": ["Any spare parameters added to the TOP node\u2019s parameter interface are also automatically added to the PDG node."], "extent": [1690, 1810]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["item_holder"]}], "extent": [1810, 1829], "body": [{"type": "para", "indent": 8, "text": ["The work item holder used to construct new work items. Items in the\n        holder are committed to the node once the script has finished running. If\n        the script fails, the items are discarded."], "extent": [1829, 2039]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["upstream_items"]}], "extent": [2039, 2061], "body": [{"type": "para", "indent": 8, "text": ["The list of upstream items."], "extent": [2061, 2098]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["generation_type"]}], "extent": [2098, 2121], "body": [{"type": "para", "indent": 8, "text": ["The type of work item generation the script is performing."], "extent": [2121, 2189]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "generate"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Regenerate"], "extent": [2189, 2209], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Use Custom Regenerate Implementation"], "extent": [2209, 2248], "body": [{"type": "para", "indent": 4, "text": ["When on, the script in ", {"type": "ui", "text": ["onRegenerate Callback"]}, " is used by the node instead of the built-in one."], "extent": [2271, 2374]}], "container": true, "attrs": {"id": "usecustregen"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["onRegenerate Callback"], "extent": [2374, 2397], "body": [{"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Use Custom Regenerate Implementation:"]}, " is ", {"type": "em", "text": ["on"]}, "."], "extent": [2424, 2518]}, {"type": "para", "indent": 4, "text": ["The script the node runs whenever it needs to generate items but already has existing items. You can uses this script to add new work items and dirty or delete existing ones."], "extent": [2518, 2698]}, {"type": "para", "indent": 4, "text": ["The following variables are available:"], "extent": [2698, 2742]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["self"]}], "extent": [2742, 2754], "body": [{"type": "para", "indent": 8, "text": ["The underlying PDG node associated with the TOP node."], "extent": [2754, 2817]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["item_holder"]}], "extent": [2817, 2836], "body": [{"type": "para", "indent": 8, "text": ["The work item holder used to construct new work items."], "extent": [2836, 2900]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["existing_items"]}], "extent": [2900, 2922], "body": [{"type": "para", "indent": 8, "text": ["The list of existing work items currently in the node."], "extent": [2922, 2986]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["upstream_items"]}], "extent": [2986, 3008], "body": [{"type": "para", "indent": 8, "text": ["The list of upstream work items."], "extent": [3008, 3050]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["generation_type"]}], "extent": [3050, 3073], "body": [{"type": "para", "indent": 8, "text": ["The type of work item generation the script is performing."], "extent": [3073, 3141]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "regeneratestatic"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Add Internal Dependencies"], "extent": [3141, 3175], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["onAddInternalDependencies Callback"], "extent": [3175, 3212], "body": [{"type": "para", "indent": 4, "text": ["The script the node calls when it wants to add dependencies between sibling work items. This script is called once for each call to ", {"type": "ui", "text": ["onGenerate Callback"]}, ". You can use this script to add dependencies between the items created in that \n    callback invocation."], "extent": [3246, 3512]}, {"type": "para", "indent": 4, "text": ["The following variables are available:"], "extent": [3512, 3556]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["self"]}], "extent": [3556, 3568], "body": [{"type": "para", "indent": 8, "text": ["The underlying PDG node associated with the TOP node."], "extent": [3568, 3631]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["dependency_holder"]}], "extent": [3631, 3656], "body": [{"type": "para", "indent": 8, "text": ["The work item holder used to assign dependency pairs."], "extent": [3656, 3719]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["internal_items"]}], "extent": [3719, 3741], "body": [{"type": "para", "indent": 8, "text": ["The list of work items added by the last ", {"type": "ui", "text": ["onGenerate Callback"]}, "\n        execution."], "extent": [3741, 3834]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["is_static"]}], "extent": [3834, 3851], "body": [{"type": "para", "indent": 8, "text": ["Boolean that is set to ", {"type": "code", "text": ["True"]}, " if the last generation was static, else\n        ", {"type": "code", "text": ["False"]}, "."], "extent": [3851, 3947]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "addinternaldependencies"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Cook Task"], "extent": [3947, 3965], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["onCookTask Callback"], "extent": [3965, 3987], "body": [{"type": "para", "indent": 4, "text": ["The script the node calls when it wants to cook an in-process work item. This script is called for each in-process item produced by ", {"type": "ui", "text": ["onGenerate Callback"]}, " when those items need to cook. You can create in-process work items when constructing a work item by passing the ", {"type": "code", "text": ["inProcess=True"]}, " flag."], "extent": [4006, 4303]}, {"type": "para", "indent": 4, "text": ["The following variables are available:"], "extent": [4303, 4347]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["self"]}], "extent": [4347, 4359], "body": [{"type": "para", "indent": 8, "text": ["The underlying PDG node associated with the TOP node."], "extent": [4359, 4422]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["work_item"]}], "extent": [4422, 4439], "body": [{"type": "para", "indent": 8, "text": ["The work item that is cooking in-process."], "extent": [4439, 4490]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "cooktask"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Node Options"], "extent": [4490, 4511], "body": [{"type": "para", "indent": 0, "text": ["These parameters give you easy access to a selection of methods from the ", {"scheme": "Py", "value": "pdg.NodeOptions", "type": "link", "text": ["pdg.NodeOptions"], "fullpath": "/nodes/top/pdg.NodeOptions.html"}, " class."], "extent": [4511, 4630]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Service Name"], "extent": [4630, 4644], "body": [{"type": "para", "indent": 4, "text": ["Specifies the name of the service that the node is using. Leave this field empty if your node is not using a service."], "extent": [4666, 4789]}], "container": true, "attrs": {"id": "servicename"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Always Regenerate"], "extent": [4789, 4808], "body": [{"type": "para", "indent": 4, "text": ["When on, the node regenerates work items every cook."], "extent": [4835, 4893]}], "container": true, "attrs": {"id": "alwaysregenerate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Dirty on Regenerate"], "extent": [4893, 4914], "body": [{"type": "para", "indent": 4, "text": ["When on, the node dirties all work items when it regenerates."], "extent": [4942, 5009]}], "container": true, "attrs": {"id": "dirtyonregenerate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Dirty on Incomplete"], "extent": [5009, 5030], "body": [{"type": "para", "indent": 4, "text": ["When on, the node dirties itself every graph cook unless the node successfully cooked all work items on the previous cook."], "extent": [5058, 5186]}], "container": true, "attrs": {"id": "dirtyonincomplete"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Requires Generated Inputs"], "extent": [5186, 5213], "body": [{"type": "para", "indent": 4, "text": ["When on, the node requires that all its input nodes be fully generated before it can generate work items."], "extent": [5247, 5358]}], "container": true, "attrs": {"id": "requiresgeneratedinputs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Requires Cooked Inputs"], "extent": [5358, 5382], "body": [{"type": "para", "indent": 4, "text": ["When on, the node requires that input work items are cooked before the it can generate work items."], "extent": [5413, 5517]}], "container": true, "attrs": {"id": "requirescookedinputs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Requires Scene File"], "extent": [5517, 5538], "body": [{"type": "para", "indent": 4, "text": ["When on, the node creates work items that require access to the current scene file."], "extent": [5566, 5655]}], "container": true, "attrs": {"id": "requiresscenefile"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Requires Input Data"], "extent": [5655, 5676], "body": [{"type": "para", "indent": 4, "text": ["When on, the node needs access to input file data in order to generate work items. Note that this is different from just needing to know the input file paths. You only need to turn on this parameter if your node actually reads the contents of input files when generating its work items."], "extent": [5704, 5996]}], "container": true, "attrs": {"id": "requiresinputdata"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Uses Dynamic Batching"], "extent": [5996, 6019], "body": [{"type": "para", "indent": 4, "text": ["When on, indicates that the node intends to create dynamic batch work items that expand in size when they cook."], "extent": [6049, 6166]}], "container": true, "attrs": {"id": "usesdynamicbatching"}, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Files"], "extent": [6166, 6178], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["File Dependencies"], "extent": [3902, 3921], "body": [{"type": "para", "indent": 4, "text": ["A list of files that should be copied to the PDG working directory before the first work item in this node is executed.  This can be used to ensure that supporting files like digital assets and custom scripts are available for the work item job."], "extent": [3943, 4194]}, {"type": "para", "indent": 4, "text": ["The specified paths can be absolute or relative to HOUDINI_PATH."], "extent": [4194, 4264]}], "container": true, "attrs": {"id": "pdgnodedeps"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Schedulers"], "extent": [6219, 6236], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["TOP Scheduler Override"], "extent": [6683, 6707], "body": [{"type": "para", "indent": 4, "text": ["This parameter overrides the TOP scheduler for this node."], "extent": [6730, 6793]}], "container": true, "attrs": {"id": "topscheduler"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Schedule When"], "extent": [10796, 10811], "body": [{"type": "para", "indent": 4, "text": ["When enabled, this parameter can be used to specify an expression that determines which work items from the node should be scheduled. If the expression returns zero for a given work item, that work item will immediately be marked as cooked instead of being queued with a scheduler. If the expression returns a non-zero value, the work item is scheduled normally."], "extent": [10838, 11206]}], "container": true, "attrs": {"id": "pdg_schedulewhen"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Work Item Label"], "extent": [9661, 9678], "body": [{"type": "para", "indent": 4, "text": ["Determines how the node should label its work items. This parameter allows you to assign non-unique label strings to your work items which are then used to identify the work items in the attribute panel, task bar, and scheduler job names."], "extent": [9706, 9950]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Use Default Label"], "extent": [9950, 9974], "body": [{"type": "para", "indent": 8, "text": ["The work items in this node will use the default label from the TOP network, or have no label if the default is unset."], "extent": [9974, 10102]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Inherit From Upstream Item"], "extent": [10102, 10135], "body": [{"type": "para", "indent": 8, "text": ["The work items inherit their labels from their parent work items.        "], "extent": [10135, 10218]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom Expression"], "extent": [10218, 10242], "body": [{"type": "para", "indent": 8, "text": ["The work item label is set to the ", {"type": "ui", "text": ["Label Expression"]}, " custom expression which is evaluated for each item."], "extent": [10242, 10358]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Node Defines Label"], "extent": [10358, 10383], "body": [{"type": "para", "indent": 8, "text": ["The work item label is defined in the node\u2019s internal logic."], "extent": [10383, 10453]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemlabel"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Label Expression"], "extent": [10453, 10471], "body": [{"type": "para", "indent": 4, "text": ["When on, this parameter specifies a custom label for work items created by this node. The parameter can be an expression that includes references to work item attributes or built-in properties. For example, ", {"type": "code", "text": ["$OS: @pdg_frame"]}, " will set the label of each work item based on its frame value."], "extent": [10503, 10796]}], "container": true, "attrs": {"id": "pdg_workitemlabelexpr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Work Item Priority"], "extent": [7682, 7702], "body": [{"type": "para", "indent": 4, "text": ["This parameter determines how the current scheduler prioritizes the work items in this node."], "extent": [7733, 7831]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Inherit From Upstream Item"], "extent": [7831, 7864], "body": [{"type": "para", "indent": 11, "text": ["The work items inherit their priority from their parent items. If a work item has no parent, its priority is set to 0."], "extent": [7864, 7995]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom Expression"], "extent": [7995, 8019], "body": [{"type": "para", "indent": 11, "text": ["The work item priority is set to the value of ", {"type": "ui", "text": ["Priority Expression"]}, "."], "extent": [8019, 8102]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Node Defines Priority"], "extent": [8102, 8130], "body": [{"type": "para", "indent": 7, "text": ["The work item priority is set based on the node\u2019s own internal priority calculations."], "extent": [8130, 8235]}, {"type": "para", "indent": 7, "text": ["This option is only available on the ", {"scheme": "Icon", "value": "MISC/python.svg", "type": "link", "text": "", "fullpath": "/nodes/top/MISC/python.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/top/pythonprocessor", "type": "link", "text": ["Python Processor TOP"], "fullpath": "/nodes/top/pythonprocessor.html"}, ", ", {"scheme": "Icon", "value": "TOP/ropfetch.svg", "type": "link", "text": "", "fullpath": "/nodes/top/TOP/ropfetch.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/top/ropfetch", "type": "link", "text": ["ROP Fetch TOP"], "fullpath": "/nodes/top/ropfetch.html"}, ", and ROP Output TOP nodes. These nodes define their own prioritization schemes that are implemented in their node logic."], "extent": [8235, 8531]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitempriority"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Priority Expression"], "extent": [8531, 8552], "body": [{"type": "para", "indent": 4, "text": ["This parameter specifies an expression for work item priority. The expression is evaluated for each work item in the node."], "extent": [8587, 8715]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Work Item Priority"]}, " is set to ", {"type": "ui", "text": ["Custom Expression"]}, "."], "extent": [8715, 8814]}], "container": true, "attrs": {"id": "pdg_workitempriorityexpr"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [6521, 6530], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/genericgenerator", "type": "link", "text": "", "fullpath": "/nodes/top/genericgenerator.html"}], "extent": [6530, 6560]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/pythonscript", "type": "link", "text": "", "fullpath": "/nodes/top/pythonscript.html"}], "extent": [6560, 6586]}], "container": true}], "text": "Related"}], "title": ["Python Processor"], "summary": ["Generates work items using a Python script."], "included": ["/nodes/top/processor_common", "/nodes/top/python_common"]}