{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "wrinkledeformer", "icon": "SOP/wrinkledeformer", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Wrinkle Deformer"], "extent": [90, 111]}, {"type": "summary", "indent": 0, "text": ["Deforms geometry to simulate surface wrinkles."], "extent": [111, 166]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [166, 181], "body": [{"type": "para", "indent": 0, "text": ["The Wrinkle Deformer SOP can deform geometry to create wrinkles without using a\ntime-stepping simulation. It can be used to mimic wrinkles on soft surfaces like cloth\nor skin, as well as more stiff objects like tires. The deformer is fully quasistatic, so you can watch the wrinkles update while posing a character without scrubbing the timeline."], "extent": [181, 530]}, {"type": "para", "indent": 0, "text": ["To produce wrinkles, you need a Rest Geometry and a Geometry to Deform.\nThe Rest Geometry determines what the object looks like at rest and is used to produce distance constraints for the internal solver to use. Geometry to Deform is the geometry after it has undergone some deformations, which will then have wrinkles applied to it by the node."], "extent": [530, 877]}, {"type": "para", "indent": 0, "text": ["There is also an option to provide ", {"type": "ui", "text": ["Collision Geometry"]}, ". Then wrinkles are generated while colliding with it to prevent the wrinkles from penetrating other objects. The wrinkle deformer does not detect or resolve self-collisions caused by the deformation."], "extent": [877, 1136]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [1136, 1142], "body": [{"type": "para", "indent": 4, "text": ["The Wrinkle Deformer SOP is topology dependent, so depending on the resolution of your mesh, the look will be different. The finer your mesh is, the smaller your wrinkles will be."], "extent": [1142, 1327]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["For more information, see the ", {"scheme": null, "value": "/vellum/wrinkledeformer", "type": "link", "text": ["Wrinkle Deformer"], "fullpath": "/vellum/wrinkledeformer.html"}, " page in the Vellum chapter."], "extent": [1327, 1429]}]}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [1429, 1437], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Geometry to Deform"], "extent": [1437, 1458], "body": [{"type": "para", "indent": 4, "text": ["The geometry surface to deform."], "extent": [1458, 1499]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Rest Geometry"], "extent": [1499, 1514], "body": [{"type": "para", "indent": 4, "text": ["The geometry at rest. The constraints are generated based on point distances in this geometry."], "extent": [1514, 1614]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Collisions"], "extent": [1614, 1626], "body": [{"type": "para", "indent": 4, "text": ["A volume to use as a collider when deforming the mesh. This must be a VDB volume with SDF."], "extent": [1626, 1726]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1726, 1738], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Geometry"], "extent": [1738, 1754], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group Type"], "extent": [1754, 1767], "body": [{"type": "para", "indent": 4, "text": ["Controls the type of group used to specify what to deform."], "extent": [1786, 1854]}], "container": true, "attrs": {"id": "grouptype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [1854, 1861], "body": [{"type": "para", "indent": 4, "text": ["The group on the rest geometry to deform. This is the part of the rest\n    geometry that will have constraints generated to undergo deformation."], "extent": [1876, 2035]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Triangulation"], "extent": [2035, 2050], "body": [{"type": "para", "indent": 4, "text": ["Distance constraints are usually built on a triangle mesh.\n    Rather than forcing the input to be triangulated, it can be implicitly\n    triangulated."], "extent": [2074, 2231]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [2231, 2241], "body": [{"type": "para", "indent": 8, "text": ["Do not triangulate the input."], "extent": [2241, 2288]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Regular"], "extent": [2288, 2301], "body": [{"type": "para", "indent": 8, "text": ["Consistently split into triangles."], "extent": [2301, 2353]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Alternating"], "extent": [2353, 2370], "body": [{"type": "para", "indent": 12, "text": ["Attempt to reverse the triangle splitting so a series of quads"], "extent": [2370, 2445]}, {"type": "para", "indent": 8, "text": ["have a less regular structure."], "extent": [2445, 2493]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "triangulation"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pin Points"], "extent": [2493, 2505], "body": [{"type": "para", "indent": 4, "text": ["Points to pin to their original positions in ", {"type": "ui", "text": ["Geometry to Deform"]}, "."], "extent": [2528, 2606]}], "container": true, "attrs": {"id": "pingroup"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Physical"], "extent": [2606, 2623], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Mass"], "extent": [2623, 2630], "body": [{"type": "para", "indent": 4, "text": [{"type": "code", "text": ["mass"]}, " value for the points that controls how strong the constraints are."], "extent": [2647, 2730]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Unchanged"], "extent": [2730, 2745], "body": [{"type": "para", "indent": 8, "text": ["Do not set the ", {"type": "code", "text": ["mass"]}, " attribute."], "extent": [2745, 2795]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Uniform"], "extent": [2795, 2812], "body": [{"type": "para", "indent": 8, "text": ["Set the ", {"type": "code", "text": ["mass"]}, " attribute to the specified value."], "extent": [2812, 2878]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Calculate Uniform"], "extent": [2878, 2901], "body": [{"type": "para", "indent": 8, "text": ["Calculate a uniform value for the ", {"type": "code", "text": ["mass"]}, " attribute for the points on each\n        connected piece based on the piece\u2019s volume and the ", {"type": "ui", "text": ["Density"]}, " parameter."], "extent": [2901, 3075]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Calculate Varying"], "extent": [3075, 3098], "body": [{"type": "para", "indent": 8, "text": ["Calculate a varying value for the ", {"type": "code", "text": ["mass"]}, " attribute for the points based on the\n        ", {"type": "ui", "text": ["Density"]}, " parameter and polygon volumes or areas."], "extent": [3098, 3259]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "domass"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Density"], "extent": [3259, 3268], "body": [{"type": "para", "indent": 4, "text": ["The volume used in calculating mass is scaled by this value when ", {"type": "ui", "text": ["Mass"]}, " is set to ", {"type": "ui", "text": ["Calculate Uniform"]}, " or ", {"type": "ui", "text": ["Calculate Varying"]}, "."], "extent": [3285, 3431]}], "container": true, "attrs": {"id": "density"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Thickness"], "extent": [3431, 3442], "body": [{"type": "para", "indent": 4, "text": ["Thickness of the points, stored in ", {"type": "code", "text": ["pscale"]}, "."], "extent": [3464, 3518]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Unchanged"], "extent": [3518, 3533], "body": [{"type": "para", "indent": 8, "text": ["Do not set the ", {"type": "code", "text": ["pscale"]}, " attribute."], "extent": [3533, 3585]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Uniform"], "extent": [3585, 3602], "body": [{"type": "para", "indent": 8, "text": ["Set the ", {"type": "code", "text": ["pscale"]}, " attribute to the specified value."], "extent": [3602, 3670]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Calculate Uniform"], "extent": [3670, 3693], "body": [{"type": "para", "indent": 8, "text": ["Calculate a uniform value for ", {"type": "code", "text": ["pscale"]}, " for the points on each connected piece based on the average edge length of the piece and the ", {"type": "ui", "text": ["Edge Length Scale"]}, " parameter."], "extent": [3693, 3875]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Calculate Varying"], "extent": [3875, 3898], "body": [{"type": "para", "indent": 8, "text": ["Calculate a varying value for ", {"type": "code", "text": ["pscale"]}, " based on the average edge length of polygons incident to each point and the ", {"type": "ui", "text": ["Edge Length Scale"]}, " parameter."], "extent": [3898, 4063]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "dothickness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Edge Length Scale"], "extent": [4063, 4082], "body": [{"type": "para", "indent": 4, "text": ["Each edge length will be scaled by this value before being used in the ", {"type": "ui", "text": ["Thickness"]}, " calculation."], "extent": [4106, 4218]}], "container": true, "attrs": {"id": "thicknessscale"}, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Constraints"], "extent": [4218, 4236], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Constraint Iterations"], "extent": [4236, 4260], "body": [{"type": "para", "indent": 4, "text": ["The number of rounds of deformation the node will apply to resolve the constraints.\n    More iterations results in more fully resolved wrinkles."], "extent": [4284, 4438]}], "container": true, "attrs": {"id": "constraintiter"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Topology"], "extent": [4438, 4448], "body": [{"type": "para", "indent": 4, "text": ["The method used to generate the distance constraints which describe how the geometry should wrinkle."], "extent": [4476, 4586]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Cloth"], "extent": [4586, 4597], "body": [{"type": "para", "indent": 8, "text": ["Creates distance constraints between adjacent points and points across triangles.\n        This option generally creates smaller wrinkles and uses a small number of constraints."], "extent": [4597, 4791]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Surface Struts"], "extent": [4791, 4811], "body": [{"type": "para", "indent": 8, "text": ["Creates distance constraints from each point to all other points that are an edge distance of ", {"type": "ui", "text": ["Neighbor Distance"]}, " away. This option can create larger wrinkles than ", {"type": "ui", "text": ["Cloth"]}, ", but can also create many more constraints that become slower to solve."], "extent": [4811, 5081]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "constrainttopology"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Neighbor Distance"], "extent": [5081, 5100], "body": [{"type": "para", "indent": 4, "text": ["The number of edges between the two end points of each surface strut constraint.\n    Higher distances produce larger wrinkles, but also create more constraints that take more time and memory to solve."], "extent": [5123, 5338]}], "container": true, "attrs": {"id": "neighbordist"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Length Scale"], "extent": [5338, 5357], "body": [{"type": "para", "indent": 4, "text": ["The rest length of the distance constraints will be the original distance between\n    the points multiplied by this parameter."], "extent": [5383, 5524]}], "container": true, "attrs": {"id": "restlengthscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Length Scale Scale Mode"], "extent": [5524, 5554], "body": [{"type": "para", "indent": 4, "text": ["Allows scaling the rest length scale by attributes."], "extent": [5589, 5650]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["No Scaling"], "extent": [5650, 5666], "body": [{"type": "para", "indent": 8, "text": ["The rest length scale is uniform across all constraints."], "extent": [5666, 5740]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [5740, 5764], "body": [{"type": "para", "indent": 8, "text": ["The rest length scale applied to each constraint is multiplied by the average value of a given attribute on all points incident to that constraint."], "extent": [5764, 5934]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "restlengthscalescalemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Length Scale Attribute"], "extent": [5934, 5963], "body": [{"type": "para", "indent": 4, "text": ["The point attribute used to scale the rest length scale."], "extent": [5995, 6061]}], "container": true, "attrs": {"id": "restlengthscaleattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bend Stiffness"], "extent": [6061, 6077], "body": [{"type": "para", "indent": 4, "text": ["The stiffness of the constraint, which controls how strongly the constraint\n    pushes points away when they are closer than its initial rest state."], "extent": [6105, 6259]}], "container": true, "attrs": {"id": "bendstiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bend Stiffness Scale Mode"], "extent": [6259, 6286], "body": [{"type": "para", "indent": 4, "text": ["Allows scaling the bend stiffness by attributes."], "extent": [6323, 6381]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["No Scaling"], "extent": [6381, 6397], "body": [{"type": "para", "indent": 8, "text": ["The bend stiffness is uniform across all constraints."], "extent": [6397, 6468]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [6468, 6492], "body": [{"type": "para", "indent": 8, "text": ["The bend stiffness of each constraint is multiplied by the average\n        value of a given attribute on all points incident to that constraint."], "extent": [6492, 6657]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "bendstiffnessscalemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bend Stiffness Attribute"], "extent": [6657, 6683], "body": [{"type": "para", "indent": 4, "text": ["The point attribute used to scale the bend stiffness."], "extent": [6712, 6780]}], "container": true, "attrs": {"id": "bendstiffnessattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stretch Stiffness"], "extent": [6780, 6799], "body": [{"type": "para", "indent": 4, "text": ["The stiffness of the constraint, which controls how strongly the constraint\n    pulls points back towards its initial rest state."], "extent": [6825, 6969]}], "container": true, "attrs": {"id": "stretchstiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stretch Stiffness Scale Mode"], "extent": [6969, 6999], "body": [{"type": "para", "indent": 4, "text": ["Allows scaling the stretch stiffness by attributes."], "extent": [7039, 7100]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["No Scaling"], "extent": [7100, 7116], "body": [{"type": "para", "indent": 8, "text": ["The stretch stiffness is uniform across all constraints."], "extent": [7116, 7190]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [7190, 7214], "body": [{"type": "para", "indent": 8, "text": ["The stretch stiffness of each constraint is multiplied by the average value of a given attribute on all points incident to that constraint."], "extent": [7214, 7376]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "stretchstiffnessscalemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stretch Stiffness Attribute"], "extent": [7376, 7405], "body": [{"type": "para", "indent": 4, "text": ["The point attribute used to scale the stretch stiffness."], "extent": [7442, 7508]}], "container": true, "attrs": {"id": "stretchstiffnessattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute Source"], "extent": [7508, 7526], "body": [{"type": "para", "indent": 4, "text": ["Where attributes for scaling parameters are taken from."], "extent": [7549, 7614]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Geometry"], "extent": [7614, 7628], "body": [{"type": "para", "indent": 8, "text": ["Take attributes from the ", {"type": "ui", "text": ["Geometry to Deform"]}, "."], "extent": [7628, 7686]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Rest Input"], "extent": [7686, 7702], "body": [{"type": "para", "indent": 8, "text": ["Take attributes from the ", {"type": "ui", "text": ["Rest Geometry"]}, "."], "extent": [7702, 7764]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "attribsource"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Collisions"], "extent": [7764, 7781], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Tangent Plane Collisions"], "extent": [7781, 7815], "body": [{"type": "para", "indent": 4, "text": ["When enabled, each point treats its tangent plane as a collider during the wrinkle solve.\n    This can be a cheap method of faking collision effects in certain cases where the deformation\n    should not oppose the normal direction without creating a VDB. For example, generating\n    wrinkles in clothes against a character\u2019s body or in thin objects to prevent self-collisions."], "extent": [7842, 8224]}, {"type": "para", "indent": 4, "text": ["This feature respects the normal attribute of the ", {"type": "ui", "text": ["Geometry to Deform"]}, " to find the\n    tangent plane."], "extent": [8224, 8333]}], "container": true, "attrs": {"id": "normalcollisions"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tangent Plane Inset"], "extent": [8333, 8354], "body": [{"type": "para", "indent": 4, "text": ["An amount to inset the tangent plane along the normal direction before detecting collisions.\n    This creates more of a buffer between the point\u2019s original position and its collider."], "extent": [8375, 8563]}], "container": true, "attrs": {"id": "normalinset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Inset Scale Mode"], "extent": [8563, 8581], "body": [{"type": "para", "indent": 4, "text": ["Allows scaling the Tangent Plane Inset by attributes."], "extent": [8610, 8673]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["No Scaling"], "extent": [8673, 8689], "body": [{"type": "para", "indent": 8, "text": ["The inset is uniform across all constraints."], "extent": [8689, 8751]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [8751, 8776], "body": [{"type": "para", "indent": 8, "text": ["The inset at each point is multiplied by that point\u2019s value of a given attribute."], "extent": [8776, 8871]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "insetscalemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Inset Attribute"], "extent": [8871, 8888], "body": [{"type": "para", "indent": 4, "text": ["The point attribute used to scale the inset."], "extent": [8914, 8968]}], "container": true, "attrs": {"id": "insetattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Add Ground Plane"], "extent": [8968, 8986], "body": [{"type": "para", "indent": 4, "text": ["You can have a ground plane to act as a collider while generating wrinkles."], "extent": [9010, 9091]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [9091, 9101], "body": [{"type": "para", "indent": 8, "text": ["No ground plane will be used."], "extent": [9101, 9139]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Ground Plane"], "extent": [9139, 9157], "body": [{"type": "para", "indent": 8, "text": ["Uses a ground plane with the specified position and orientation."], "extent": [9157, 9230]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Height Field"], "extent": [9230, 9248], "body": [{"type": "para", "indent": 8, "text": ["Uses a heightfield as the ground plane."], "extent": [9248, 9297]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "useground"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Height Field"], "extent": [9297, 9311], "body": [{"type": "para", "indent": 4, "text": ["SOP path to the height field geometry."], "extent": [9336, 9380]}], "container": true, "attrs": {"id": "heightfieldpath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ground Position"], "extent": [9380, 9397], "body": [{"type": "para", "indent": 4, "text": ["The location of the center of the ground plane."], "extent": [9416, 9469]}], "container": true, "attrs": {"id": "groundpos"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ground Up"], "extent": [9469, 9480], "body": [{"type": "para", "indent": 4, "text": ["The orientation of the ground plane."], "extent": [9498, 9544]}], "container": true, "attrs": {"id": "groundup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Collision SDF Offset"], "extent": [9544, 9566], "body": [{"type": "para", "indent": 4, "text": ["A buffer distance to leave between the wrinkles and the surface of the ", {"type": "ui", "text": ["Collision Geometry"]}, " and ground plane."], "extent": [9586, 9703]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Set Uniform"], "extent": [9703, 9720], "body": [{"type": "para", "indent": 8, "text": ["Use a buffer with the specified distance."], "extent": [9720, 9771]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Use Thickness"], "extent": [9771, 9790], "body": [{"type": "para", "indent": 8, "text": ["Use each point\u2019s ", {"type": "code", "text": ["pscale"]}, " attribute that represents its thickness as the buffer distance. "], "extent": [9790, 9899]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "sdfoffset"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Output"], "extent": [9899, 9912], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Wrinkle Scale"], "extent": [9912, 9928], "body": [{"type": "para", "indent": 4, "text": ["This can be used to dampen or amplify the size of the wrinkles."], "extent": [9955, 10024]}], "container": true, "attrs": {"id": "scalewrinkle"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Wrinkle Scale Mode"], "extent": [10024, 10044], "body": [{"type": "para", "indent": 4, "text": ["Allows scaling the wrinkle scale by point attributes."], "extent": [10075, 10138]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["No Scaling"], "extent": [10138, 10154], "body": [{"type": "para", "indent": 8, "text": ["The wrinkle scale is uniform across all points."], "extent": [10154, 10219]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [10219, 10243], "body": [{"type": "para", "indent": 8, "text": ["The wrinkle scale of each point is multiplied by that point\u2019s value of a given attribute."], "extent": [10243, 10353]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "wrinklescalemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Wrinkle Scale Attribute"], "extent": [10353, 10378], "body": [{"type": "para", "indent": 4, "text": ["The point attribute used to scale the wrinkle scale."], "extent": [10406, 10464]}], "container": true, "attrs": {"id": "wrinklescaleattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ignore Collisions When Scaling"], "extent": [10464, 10496], "body": [{"type": "para", "indent": 4, "text": ["When enabled, scales below 1 will blend the wrinkled output with the incoming deformed mesh before any collisions are processed.\n    Collisions will also not be re-applied after the scaling. This can also cause the output to float away from collider surfaces when\n    the scale is greater than 1."], "extent": [10528, 10830]}, {"type": "para", "indent": 4, "text": ["When disabled, scales below 1 will blend the wrinkled output with the incoming mesh after being pushed out of the colliders and\n    this step is re-applied after scaling."], "extent": [10830, 11006]}], "container": true, "attrs": {"id": "scaleignorecollisions"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Deformation Angle"], "extent": [11006, 11029], "body": [{"type": "para", "indent": 4, "text": ["The maximum allowed angle between the point deformation deltas and point normals."], "extent": [11048, 11139]}], "container": true, "attrs": {"id": "maxangle"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Delta Smooth Iterations"], "extent": [11139, 11164], "body": [{"type": "para", "indent": 4, "text": ["The number of iterations of Delta Mush to apply after deformation."], "extent": [11184, 11256]}], "container": true, "attrs": {"id": "deltaiter"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Update Affected Normals"], "extent": [11256, 11281], "body": [{"type": "para", "indent": 4, "text": ["Recomputes any point normals that are affected by the wrinkling operation.\n    This option has no effect if the input geometry does not have a normal attribute."], "extent": [11309, 11479]}], "container": true, "attrs": {"id": "updateaffectednmls"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Visualization"], "extent": [11479, 11494], "body": [{"type": "para", "indent": 4, "text": ["Outputs information about the wrinkle deformation solve to colors on the output surface."], "extent": [11517, 11615]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [11615, 11625], "body": [{"type": "para", "indent": 8, "text": ["The color is not set."], "extent": [11625, 11664]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Stress"], "extent": [11664, 11676], "body": [{"type": "para", "indent": 8, "text": ["Set the color to indicate the stretching force applied by the constraints."], "extent": [11676, 11768]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Distance"], "extent": [11768, 11782], "body": [{"type": "para", "indent": 8, "text": ["Set the color to indicate how far constraints are stretched."], "extent": [11782, 11860]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Ratio"], "extent": [11860, 11871], "body": [{"type": "para", "indent": 8, "text": ["Set the color to indicate the ratio between the original and current stretch."], "extent": [11871, 11971]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "vis_mode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Stress"], "extent": [11971, 11983], "body": [{"type": "para", "indent": 4, "text": ["The stress level corresponding to the maximum color."], "extent": [12013, 12080]}], "container": true, "attrs": {"id": "vis_maxstretchstress"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Distance"], "extent": [12080, 12094], "body": [{"type": "para", "indent": 4, "text": ["The distance corresponding to the maximum color."], "extent": [12126, 12189]}], "container": true, "attrs": {"id": "vis_maxstretchdistance"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Ratio"], "extent": [12189, 12200], "body": [{"type": "para", "indent": 4, "text": ["The ratio corresponding to the maximum color."], "extent": [12229, 12289]}], "container": true, "attrs": {"id": "vis_maxstretchratio"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [12289, 12298], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/vellumconstraints", "type": "link", "text": "", "fullpath": "/nodes/sop/vellumconstraints.html"}], "extent": [12298, 12330]}], "container": true}], "text": "Related"}], "title": ["Wrinkle Deformer"], "summary": ["Deforms geometry to simulate surface wrinkles."]}