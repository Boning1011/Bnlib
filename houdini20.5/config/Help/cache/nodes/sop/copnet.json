{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "copnet", "icon": "SOP/copnet", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["COP Network"], "extent": [72, 88]}, {"type": "summary", "indent": 0, "text": ["Imports COP network layers as geometry."], "extent": [88, 136]}, {"type": "para", "indent": 0, "text": ["The COP Network is a container for ", {"scheme": "Node", "value": "/nodes//cop/index", "type": "link", "text": ["COPs"], "fullpath": "/nodes//cop/index.html"}, " and a way to import\nthe results of a COP network as geometry.   Layers are converted to\nvolumes and geometry is imported as-is. For information about the COP network, see ", {"scheme": null, "value": "/copernicus/index", "type": "link", "text": ["Copernicus"], "fullpath": "/copernicus/index.html"}, "."], "extent": [136, 398]}, {"type": "para", "indent": 0, "text": ["For more information about the default parameters, see ", {"scheme": null, "value": "/copernicus/working_with_cops#default", "type": "link", "text": ["Default COP Network settings"], "fullpath": "/copernicus/working_with_cops.html#default", "fragment": "#default"}, "."], "extent": [398, 524]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [524, 536], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Use External COP"], "extent": [536, 555], "body": [{"type": "para", "indent": 4, "text": ["Rather than return the display node of the contents, this will\n    cook a specific COP.  The targeted COP does not have to be a child\n    of this network."], "extent": [576, 740]}], "container": true, "attrs": {"id": "usecoppath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["COP Path"], "extent": [740, 750], "body": [{"type": "para", "indent": 4, "text": ["The path to a COP node to evaluate.  If it is a COP Network, the\n    display node inside will be used."], "extent": [768, 885]}], "container": true, "attrs": {"id": "coppath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Single Output"], "extent": [885, 900], "body": [{"type": "para", "indent": 4, "text": ["COP nodes often have many outputs.  If this is not set, they are\n    cooked in turn and merged into a single geometry.  Alternatively,\n    with this set only the requested output is cooked and returned."], "extent": [927, 1144]}], "container": true, "attrs": {"id": "singleoutput"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output"], "extent": [1144, 1152], "body": [{"type": "para", "indent": 4, "text": ["Which output to evaluate for the result of this node."], "extent": [1169, 1232]}], "container": true, "attrs": {"id": "output"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Plane"], "extent": [1232, 1239], "body": [{"type": "para", "indent": 4, "text": ["COP layers are canonically oriented in the XY plane.  This\n    performs a transform from those planes to another common\n    orientation."], "extent": [1255, 1401]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [1401, 1411], "body": [{"type": "para", "indent": 8, "text": ["If the COP plane is oriented differently,\n        this will only apply the cumulative rotation, and so it will not\n        end up in the requested orientation."], "extent": [1411, 1584]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "plane"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Compiled Cook"], "extent": [1584, 1599], "body": [{"type": "para", "indent": 4, "text": ["Cooks COPs by turning the entire graph into a single operation, with the\n    potential benefit of being able to work in-place more efficiently. When off, cooks COPs in a node-by-node fashion with the results being stored at each stage."], "extent": [1619, 1860]}, {"type": "para", "indent": 4, "text": ["For more information about cooking, see ", {"scheme": null, "value": "/copernicus/cooking", "type": "link", "text": ["Cooking"], "fullpath": "/copernicus/cooking.html"}, "."], "extent": [1860, 1940]}], "container": true, "attrs": {"id": "docompile"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output APEX Graph"], "extent": [1940, 1959], "body": [{"type": "para", "indent": 4, "text": ["Generates the APEX graph that would have been cooked if it was\n    compiled and outputs it as geometry, rather than outputting the result of the targeted COP cooking."], "extent": [1985, 2157]}, {"type": "para", "indent": 4, "text": ["This is primarily for debugging or esoteric uses, such as\n    generating slapcomp files."], "extent": [2157, 2255]}], "container": true, "attrs": {"id": "outputapexgraph"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Default Resolution"], "extent": [2255, 2275], "body": [{"type": "para", "indent": 4, "text": ["Sets the context option for ", {"type": "code", "text": ["default_xres"]}, " and ", {"type": "code", "text": ["default_yres"]}, ".\n    This is the size of layers that don\u2019t have an explicit size set."], "extent": [2289, 2430]}, {"type": "para", "indent": 4, "text": ["The default is 1024\u00d71024."], "extent": [2430, 2461]}], "container": true, "attrs": {"id": "res"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Default Pixel Scale"], "extent": [2461, 2482], "body": [{"type": "para", "indent": 4, "text": ["Sets the context option ", {"type": "code", "text": ["default_pixelscale"]}, ".  This is a scale for\n    the size of the pixels in the image, causing the image to cook at\n    a fractional effective resolution, but not changing any\n    pixel-relative values."], "extent": [2503, 2732]}], "container": true, "attrs": {"id": "pixelscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Default Border"], "extent": [2732, 2748], "body": [{"type": "para", "indent": 4, "text": ["Sets the context option ", {"type": "code", "text": ["default_border"]}, ".  This is an integer\n    context option which encodes what the border type of new layers\n    should be."], "extent": [2765, 2915]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Constant"], "extent": [2915, 2929], "body": [{"type": "para", "indent": 8, "text": ["Outside the layer evaluates to ", {"type": "code", "text": ["0"]}, "."], "extent": [2929, 2974]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Clamp"], "extent": [2974, 2985], "body": [{"type": "para", "indent": 8, "text": ["Outside the layer evalutes to the closest pixel in the layer."], "extent": [2985, 3056]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Mirror"], "extent": [3056, 3068], "body": [{"type": "para", "indent": 8, "text": ["Outside values reflect off the boundaries."], "extent": [3068, 3120]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Wrap"], "extent": [3120, 3130], "body": [{"type": "para", "indent": 8, "text": ["Outside values wrap around."], "extent": [3130, 3167]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "border"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Default Precision"], "extent": [3167, 3186], "body": [{"type": "para", "indent": 4, "text": ["Sets the context option ", {"type": "code", "text": ["default_precision"]}, " to control how many\n    bits are used for each channel."], "extent": [3206, 3311]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["16-bit"], "extent": [3311, 3323], "body": [{"type": "para", "indent": 8, "text": ["A value of ", {"type": "code", "text": ["16"]}, " meaning to default to half-precision."], "extent": [3323, 3386]}], "container": true}, {"type": "dt", "indent": 4, "text": ["32-bit"], "extent": [3386, 3398], "body": [{"type": "para", "indent": 8, "text": ["A value of ", {"type": "code", "text": ["32"]}, " meaning to default to full-precision."], "extent": [3398, 3462]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "precision"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tile Visualization"], "extent": [3462, 3482], "body": [{"type": "para", "indent": 4, "text": ["When evaluating the geometry for the 3D viewport, attach the tilevis\n    primitive property to have it displayed with a repeating pattern.\n    This makes it easy to see how well the pattern will tile and to\n    verify operations haven\u2019t made it not tile."], "extent": [3500, 3760]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [3760, 3770], "body": [{"type": "para", "indent": 8, "text": ["This only affects the Vulkan viewport, the OpenGL viewport\n        will just stretch the texture."], "extent": [3770, 3877]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "vistile"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3877, 3886], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/cop2net", "type": "link", "text": "", "fullpath": "/nodes/sop/cop2net.html"}], "extent": [3886, 3908]}], "container": true}], "text": "Related"}], "title": ["COP Network"], "summary": ["Imports COP network layers as geometry."]}