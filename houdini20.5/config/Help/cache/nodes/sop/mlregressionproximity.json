{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "mlregressionproximity", "icon": "SOP/mlregressionproximity", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["ML Regression Proximity"], "extent": [102, 130]}, {"type": "summary", "indent": 0, "text": ["Determine an output based on the proximity of a query input to the inputs of labeled examples."], "extent": [130, 233]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [233, 248], "body": [{"type": "para", "indent": 0, "text": ["This node looks through a set of labeled examples to find an input that is closest to a query input. It then returns the target corresponding to that closest input. This provides an alternative to inferencing a trained neural network. ML Regression Proximity may be effective when the input dimension is low. ML Regression Proximity is a useful tool for troubleshooting and making sure that an ML setup is correct."], "extent": [248, 665]}, {"type": "para", "indent": 0, "text": ["The first input of ML Regression Proximity should consist of labeled examples. For example, created using ML Example inside a ", {"scheme": null, "value": "/model/looping", "type": "link", "text": ["SOP for loop"], "fullpath": "/model/looping.html"}, " or read in from a file using ML Example Import.\nThe second input should be an input component that consists of the same contributions as each input component of the labeled examples.\nThe input/output contributions that are specified by the multiparms should match the input/target contributions specified on the ML nodes from the origin labeled examples."], "extent": [665, 1177]}, {"type": "para", "indent": 0, "text": ["When ", {"scheme": "Node", "value": "/nodes/top/mlregressiontrain", "type": "link", "text": ["ML Regression Train"], "fullpath": "/nodes/top/mlregressiontrain.html"}, " and ", {"scheme": "Node", "value": "/nodes/sop/mlregressioninference", "type": "link", "text": ["ML Regression Inference"], "fullpath": "/nodes/sop/mlregressioninference.html"}, " is preferred, ML Regression Proximity can be useful for verifying that the data set was correctly generated. If you give an input component of a labeled example of the data set, ML Regression Proximity should return an exact match for the target. This assumes no two labeled examples in the data set have the same input component."], "extent": [1177, 1624]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1624, 1636], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Number of Inputs"], "extent": [1636, 1660], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Type"], "extent": [1660, 1667], "body": [{"type": "para", "indent": 4, "text": ["Type of  input contribution: either a point attribute or a volume."], "extent": [1687, 1759]}], "container": true, "attrs": {"id": "inputtype#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Attribute"], "extent": [1759, 1776], "body": [{"type": "para", "indent": 4, "text": ["Name of a point float attribute."], "extent": [1806, 1844]}], "container": true, "attrs": {"id": "inputpointattribute#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Volume Name"], "extent": [1844, 1857], "body": [{"type": "para", "indent": 4, "text": ["The name of a volume."], "extent": [1883, 1910]}], "container": true, "attrs": {"id": "inputvolumename#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Volume Resolution"], "extent": [1910, 1929], "body": [{"type": "para", "indent": 4, "text": ["Resolution of the volume."], "extent": [1961, 1992]}], "container": true, "attrs": {"id": "inputvolumeresolution#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tuple Size"], "extent": [1992, 2004], "body": [{"type": "para", "indent": 4, "text": ["Tuple size of the point attribute or volume."], "extent": [2029, 2079]}], "container": true, "attrs": {"id": "inputtuplesize#"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Number of Outputs"], "extent": [2079, 2103], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Type"], "extent": [2103, 2110], "body": [{"type": "para", "indent": 4, "text": ["Type of target contribution: either a point attribute or a volume."], "extent": [2131, 2203]}], "container": true, "attrs": {"id": "targettype#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Attribute"], "extent": [2203, 2220], "body": [{"type": "para", "indent": 4, "text": ["Name of a point float attribute."], "extent": [2251, 2289]}], "container": true, "attrs": {"id": "targetpointattribute#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Volume Name"], "extent": [2289, 2302], "body": [{"type": "para", "indent": 4, "text": ["The name a the volume."], "extent": [2329, 2357]}], "container": true, "attrs": {"id": "targetvolumename#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Volume Resolution"], "extent": [2357, 2376], "body": [{"type": "para", "indent": 4, "text": ["#id targetvolumeresolution#\n    Resolution of the volume."], "extent": [2376, 2439]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tuple Size"], "extent": [2439, 2451], "body": [{"type": "para", "indent": 4, "text": ["Tuple size of the point attribute or volume."], "extent": [2477, 2527]}], "container": true, "attrs": {"id": "targettuplesize#"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [2527, 2535], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Labeled Examples"], "extent": [2535, 2554], "body": [{"type": "para", "indent": 4, "text": ["The labeled examples whose input components will be compared to the query input component."], "extent": [2554, 2650]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Input Component"], "extent": [2650, 2667], "body": [{"type": "para", "indent": 4, "text": ["The query input component."], "extent": [2667, 2699]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [2699, 2708], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Output Component"], "extent": [2708, 2727], "body": [{"type": "para", "indent": 4, "text": ["The output component that corresponds to the labeled example that matches the query input component."], "extent": [2727, 2832]}], "container": true}], "container": true}], "text": "Outputs"}], "title": ["ML Regression Proximity"], "summary": ["Determine an output based on the proximity of a query input to the inputs of labeled examples."]}