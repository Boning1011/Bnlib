{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "volume", "icon": "SOP/volume", "tags": "create, model", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Volume"], "extent": [85, 96]}, {"type": "summary", "indent": 0, "text": ["Creates a volume primitive."], "extent": [96, 132]}, {"type": "para", "indent": 0, "text": ["The Volume SOP creates a volume primitive.  A volume is a box divided\nup grid of smaller boxes, called voxels, each of which can store a\nnumber.  The resulting primitive can be used to define a scalar field\nover a volume sampled at the grid centers."], "extent": [132, 383]}, {"type": "para", "indent": 0, "text": ["The grid generated by the Volume SOP has constant value everywhere.\nIt can be further manipulated on a voxel-by-voxel basis using the\nVolume VOP SOP or the Volume Mix SOP."], "extent": [383, 556]}, {"type": "para", "indent": 0, "text": ["When mantra renders volumes it overrides rendering parameters\naccording to the name of the volume.  This name can be set in the\nVolume SOP (or later using the ", {"scheme": "Node", "value": "/nodes/sop/name", "type": "link", "text": ["Name SOP"], "fullpath": "/nodes/sop/name.html"}, ").  The name is also used for\nthe default bindings to the ", {"scheme": "Node", "value": "/nodes/sop/volumevop", "type": "link", "text": ["Volume VOP SOP"], "fullpath": "/nodes/sop/volumevop.html"}, "."], "extent": [556, 835]}, {"type": "para", "indent": 0, "text": ["The Volume SOP can also generate sets of volumes.  Selecting a rank of\nVector will create three volumes suitable for a velocity field, a rank\nof Matrix will create nine volumes suitable for a strain tensor field."], "extent": [835, 1049]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [1049, 1054], "body": [{"type": "para", "indent": 4, "text": ["If you connect geometry to the Volume SOP\u2019s input, it will create a\n    bounding box around the input geometry "], "extent": [1054, 1171]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1171, 1183], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Rank"], "extent": [1183, 1193], "body": [{"type": "para", "indent": 8, "text": ["Each volume primitive only holds a single number per voxel\n        cell.  If you want to use higher order volumes, such as vector\n        fields or matrix fields, you can use multiple volume\n        primitives.  The ", {"type": "ui", "text": ["Rank"]}, " option lets you create multiple named\n        volumes to match vector or matrix fields."], "extent": [1193, 1515]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Name"], "extent": [1515, 1525], "body": [{"type": "para", "indent": 8, "text": ["If not blank, the created volume primitive will have the name\n        primitive attribute set to this value.  Naming volumes allows\n        mantra and the ", {"scheme": "Node", "value": "/nodes/sop/volumevop", "type": "link", "text": ["Volume VOP"], "fullpath": "/nodes/sop/volumevop.html"}, " to override the correct parameters\n        with the values of the volume.  If the created volume is\n        Vector or Matrix, .x or .xx will be appended to identify the\n        subcomponents."], "extent": [1525, 1913]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Initial Value"], "extent": [1913, 1932], "body": [{"type": "para", "indent": 8, "text": ["The created volume primitive will have the same value\n        throughout the volume."], "extent": [1932, 2026]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Dimensions"], "extent": [2026, 2047], "body": [{"level": 3, "id": null, "container": true, "type": "h", "indent": 8, "text": ["Center/Size"], "extent": [2047, 2074], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 12, "text": ["Size"], "extent": [2074, 2092], "body": [{"type": "para", "indent": 16, "text": ["The size of the volume box.  This will be adjusted slightly to\n                ensure voxels are all equal size if uniform sampling is turned\n                on."], "extent": [2092, 2271]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Center"], "extent": [2271, 2291], "body": [{"type": "para", "indent": 16, "text": ["The center of the volume box."], "extent": [2291, 2338]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Taper"], "extent": [2338, 2357], "body": [{"type": "para", "indent": 16, "text": ["Allows you to override the tapering of the volume along the Z\n                direction.  This allows a volume that better fits a camera\u2019s\n                viewing area, so you can have a greater density of volumes\n                closer to the camera."], "extent": [2357, 2626]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Two Dimensional"], "extent": [2626, 2655], "body": [{"type": "para", "indent": 16, "text": ["One of the divisions of the voxel grid will be forced to one to\n                create a two dimensional field."], "extent": [2655, 2783]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Plane"], "extent": [2783, 2802], "body": [{"type": "para", "indent": 16, "text": ["If set to two dimensional, this plane determines which axes\n                remain unaffected."], "extent": [2802, 2914]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 8, "text": ["From Camera"], "extent": [2914, 2940], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 12, "text": ["Camera"], "extent": [2940, 2960], "body": [{"type": "para", "indent": 16, "text": ["The camera whose frustum we will fit the volume to."], "extent": [2960, 3029]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Z Near"], "extent": [3029, 3049], "body": [{"type": "para", "indent": 16, "text": ["The distance from the camera to start the volume."], "extent": [3049, 3116]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Z Far"], "extent": [3116, 3135], "body": [{"type": "para", "indent": 16, "text": ["The distance from the camera to stop the volume."], "extent": [3135, 3201]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Use Camera\u2019s Window"], "extent": [3201, 3234], "body": [{"type": "para", "indent": 16, "text": ["If set, the camera\u2019s window scale, offset, and crop parameters\n                will be used in addition to the following ", {"type": "ui", "text": ["Window X/Y"]}, " settings."], "extent": [3234, 3397]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Window X/Y"], "extent": [3397, 3421], "body": [{"type": "para", "indent": 16, "text": ["The min/max portions of the camera\u2019s view to fill with the\n                volume.  This allows you to add padding to ensure good boundary\n                conditions or focus into a key area of the scene."], "extent": [3421, 3643]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Uniform Sampling"], "extent": [3643, 3669], "body": [{"type": "para", "indent": 12, "text": ["It is often advantageous to make sure voxels in a volume are\n            cubes.  This option allows the resolution of the volume to be\n            specified without having to worry about matching the size and\n            resolution fields.  This parameter controls which axis is\n            divided into Uniform Sampling Divisions."], "extent": [3669, 4014]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Uniform Sampling Divs"], "extent": [4014, 4045], "body": [{"type": "para", "indent": 12, "text": ["The number of voxels to divide the ", {"type": "ui", "text": ["Uniform Sampling"]}, " axis into.\n            The other axes will be divided into the number of cells that\n            fit for this voxel size."], "extent": [4045, 4235]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Sampling Divs"], "extent": [4235, 4258], "body": [{"type": "para", "indent": 12, "text": ["When using non-uniform voxel cells, each dimensions resolution\n            can be specified here."], "extent": [4258, 4369]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Div Size"], "extent": [4369, 4387], "body": [{"type": "para", "indent": 12, "text": ["The uniform size of the voxels, when specifying the voxel size directly.  The given sized box will be filled by voxels of this size."], "extent": [4387, 4534]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Z Resolution Scale"], "extent": [4534, 4562], "body": [{"type": "para", "indent": 12, "text": ["The voxel resolution on the Z-axis is scaled by\n            this number.  This is useful for camera volumes where you may want\n            less detail along the camera viewing direction.  By setting the\n            ", {"type": "ui", "text": ["Uniform Sampling"]}, " to ", {"type": "ui", "text": ["X-Axis"]}, ", you can then specify the number of\n            voxels you want across the X axis of the screen directly, let the\n            Y-axis be auto-computed to preserve aspect, and then adjust the\n            scale factor."], "extent": [4562, 5041]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [5041, 5055], "body": [{"type": "para", "indent": 12, "text": ["The volume from camera respects the camera\u2019s crop/window size options in addition to its own."], "extent": [5055, 5162]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Properties"], "extent": [5162, 5183], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Border Type"], "extent": [5183, 5204], "body": [{"type": "para", "indent": 12, "text": ["The behavior when the volume is sampled outside of its\n            defined box."], "extent": [5204, 5297], "body": [{"type": "para", "indent": 16, "text": ["Constant:\n                The border value will be returned."], "extent": [5297, 5374]}], "container": true}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Repeat"], "extent": [5374, 5394], "body": [{"type": "para", "indent": 16, "text": ["The volume will wrap, returning values from the\n                opposite side of the volume."], "extent": [5394, 5503]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Streak"], "extent": [5503, 5523], "body": [{"type": "para", "indent": 16, "text": ["The value at the edge of the volume closest to the\n                sample will be returned."], "extent": [5523, 5631]}], "container": true}, {"type": "dt", "indent": 12, "text": ["SDF"], "extent": [5631, 5648], "body": [{"type": "para", "indent": 16, "text": ["The volume will be treated as a signed distance field.\n                The distance from the sample point to the closest\n                point on the volume will be added to the value at that\n                closest point.  This ensures the volume continues to\n                approximate distances outside of its defined box."], "extent": [5648, 5991]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Mirror"], "extent": [5991, 6011], "body": [{"type": "para", "indent": 16, "text": ["Similar to ", {"type": "ui", "text": ["Repeat"]}, ", but rather than wrapping\n                immediately, the sampling reflects at the boundary."], "extent": [6011, 6144]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Border Value"], "extent": [6144, 6166], "body": [{"type": "para", "indent": 12, "text": ["When the border type is constant, this is the value\n            returned for out of bounds sampling."], "extent": [6166, 6280]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Constant Tolerance"], "extent": [6280, 6308], "body": [{"type": "para", "indent": 12, "text": ["When tiles in the volume are compressed to constant tiles\n            this will be the tolerance used to determine if the tile\n            is constant.  Zero will only allow lossless compression."], "extent": [6308, 6517]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Quantization Tolerance"], "extent": [6517, 6549], "body": [{"type": "para", "indent": 12, "text": ["When compressing tiles by quantizing their values this is\n            the tolerance to use.  This can often be larger than the\n            constant tile as some of the quality can be recovered by\n            the dithering.  Zero disables quantization."], "extent": [6549, 6814]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Dithering"], "extent": [6814, 6833], "body": [{"type": "para", "indent": 12, "text": ["When voxels are quantized to a lower bit depth some of\n            the lost information can be recovered by adding noise to\n            the pre-quantized voxels.   This can be thought of as\n            trading bit depth in the voxel with spatial resolution."], "extent": [6833, 7104]}, {"type": "para", "indent": 12, "text": ["Dithering avoids banding in the resulting volume and, as\n            volumes are often integrated for display, can keep the\n            original weight of the volume."], "extent": [7104, 7284]}, {"type": "para", "indent": 12, "text": ["Setting dithering to none will just do a pure thresholding\n            operation.  Dithering of ordered will use a constant\n            dither matrix over each tile."], "extent": [7284, 7463]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Use 16bit Float"], "extent": [7463, 7488], "body": [{"type": "para", "indent": 12, "text": ["While 32 bit floats are still used for computation,\n            whenever they are stored in the volume they are reduced to\n            16 bit floats.  This cuts memory consumption in half at\n            the cost of slightly higher computation costs and reduced\n            precision of the floats.            "], "extent": [7488, 7811]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Display Mode"], "extent": [7811, 7833], "body": [{"type": "para", "indent": 12, "text": ["How this volume primitive will be displayed in the\n            viewport.  This does not affect the underlying volume at\n            all, just its display-time appearance."], "extent": [7833, 8017]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Smoke"], "extent": [8017, 8036], "body": [{"type": "para", "indent": 20, "text": ["The volume is rendered as smoke.  Values of 0 or less"], "extent": [8036, 8110]}, {"type": "para", "indent": 16, "text": ["are fully transparent.  If lights are present, they\n                are self-shadowed with the volume."], "extent": [8110, 8230]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Rainbow"], "extent": [8230, 8251], "body": [{"type": "para", "indent": 20, "text": ["The volume is rendered as transparent smoke.  Values"], "extent": [8251, 8324]}, {"type": "para", "indent": 16, "text": ["of 0 or less are fully transparent.  Lights are\n                ignored, reducing computation time.  Instead, the\n                smoke is colored a rainbow hue according to the\n                position in the bounding box."], "extent": [8324, 8565]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Isosurface"], "extent": [8565, 8589], "body": [{"type": "para", "indent": 20, "text": ["An isosurface of equal valued voxels is extracted from"], "extent": [8589, 8664]}, {"type": "para", "indent": 16, "text": ["the volume and displayed.  This ", {"type": "ui", "text": ["Display Isocontour"]}, " is\n                used to determine which isosurface is extracted."], "extent": [8664, 8804]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Invisible"], "extent": [8804, 8827], "body": [{"type": "para", "indent": 20, "text": ["The contents of the volume are not rendered at all."], "extent": [8827, 8900]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Display Density"], "extent": [8900, 8925], "body": [{"type": "para", "indent": 12, "text": ["Controls the fall off rate for the smoke visualization.\n            Lower values allows the smoke to be more transparent."], "extent": [8925, 9060]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Display Isocontour"], "extent": [9060, 9088], "body": [{"type": "para", "indent": 12, "text": ["Which isocontour to extract from the volume.  The default\n            of 0 is good for SDF volumes.  Fog style volumes would\n            work better with something non-zero, such as 0.5."], "extent": [9088, 9288]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Volume Type Info"], "extent": [9288, 9314], "body": [{"type": "para", "indent": 12, "text": ["This sets the semantic meaning of the volume.  It can be\n            used for visualization or for determining how to transform\n            the data of the volume."], "extent": [9314, 9491]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["None"], "extent": [9491, 9509], "body": [{"type": "para", "indent": 16, "text": ["The volume contains data with no special meaning, or\n                a meaning not covered by this list."], "extent": [9509, 9630]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Color"], "extent": [9630, 9649], "body": [{"type": "para", "indent": 16, "text": ["The voxels contain colour information, so may need to\n                be colour corrected."], "extent": [9649, 9756]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Position"], "extent": [9756, 9778], "body": [{"type": "para", "indent": 16, "text": ["The voxels specify a location, so should be rotated\n                and translated."], "extent": [9778, 9878]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Vector"], "extent": [9878, 9898], "body": [{"type": "para", "indent": 16, "text": ["The voxels specify a direction, so should be rotate\n                but not translated."], "extent": [9898, 10002]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Signed Normal"], "extent": [10002, 10029], "body": [{"type": "para", "indent": 16, "text": ["The voxels specify normals.  These are usually unit in\n                length.  Special case has to be done for scaling them\n                compared to Vectors."], "extent": [10029, 10207]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Offset Normal"], "extent": [10207, 10234], "body": [{"type": "para", "indent": 16, "text": ["A special type of normal where they are offset by 0.5\n                and scaled to fit in the 0..1 range.  This is used to\n                interface with formats where only 0..1 values are\n                present."], "extent": [10234, 10465]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Texture Coordinate"], "extent": [10465, 10497], "body": [{"type": "para", "indent": 16, "text": ["A location in a texture, usually thus 0..1 in range."], "extent": [10497, 10566]}], "container": true}, {"type": "dt", "indent": 12, "text": ["ID"], "extent": [10566, 10582], "body": [{"type": "para", "indent": 16, "text": ["An identification.  Often used for integer volumes,\n                implies the actual value isn\u2019t arithmetic."], "extent": [10582, 10709]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Mask"], "extent": [10709, 10727], "body": [{"type": "para", "indent": 16, "text": ["A scalar value from 0..1 meant to mask out operations.\n                Usually 1 will apply the operation and 0 not.  Note\n                that a volume flagged with this may have values out of\n                this range, this is a hint of the intended use."], "extent": [10727, 11001]}], "container": true}, {"type": "dt", "indent": 12, "text": ["SDF"], "extent": [11001, 11018], "body": [{"type": "para", "indent": 16, "text": ["A signed distance field.  Negative values represent\n                the inside and positive values the outside.  The value\n                itself is the world space distance to the surface,\n                which is a value of 0."], "extent": [11018, 11263]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Height"], "extent": [11263, 11283], "body": [{"type": "para", "indent": 16, "text": ["A height field.  The values are distances, usually in\n                worldspace, above the surface of the volume that the\n                surface has."], "extent": [11283, 11452]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Visualize Tiling"], "extent": [11452, 11478], "body": [{"type": "para", "indent": 12, "text": ["For volume displayed as images, expand the size of the image by\n            using the border conditions of the image.  This doesn\u2019t affect the\n            actual data at all, but allows one to see what it would look like\n            if it was tiled."], "extent": [11478, 11741]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [11741, 11749], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Bounding source"], "extent": [11749, 11770], "body": [{"type": "para", "indent": 8, "text": ["If you connect geometry to this input, Volume will create a\n        bounding box for the input geometry. (Otherwise, it uses the\n        parameters to control the size and position of the box.) "], "extent": [11770, 11974]}, {"type": "para", "indent": 8, "text": ["This is not used when the ", {"type": "ui", "text": ["From Camera"]}, " source is applied."], "extent": [11974, 12044]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [12044, 12053], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/volumemix", "type": "link", "text": "", "fullpath": "/nodes/sop/volumemix.html"}], "extent": [12053, 12080]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/volumevop", "type": "link", "text": "", "fullpath": "/nodes/sop/volumevop.html"}], "extent": [12080, 12107]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/isooffset", "type": "link", "text": "", "fullpath": "/nodes/sop/isooffset.html"}], "extent": [12107, 12134]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/iso", "type": "link", "text": "", "fullpath": "/nodes/sop/iso.html"}], "extent": [12134, 12156]}], "container": true}], "text": "Related"}], "title": ["Volume"], "summary": ["Creates a volume primitive."]}