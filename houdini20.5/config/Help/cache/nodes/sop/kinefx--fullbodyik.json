{"type": "root", "attrs": {"type": "node", "context": "sop", "namespace": "kinefx", "internal": "fullbodyik", "icon": "SOP/kinefx-fullbodyik", "tags": "soprigging, rigging, motion, retargeting, fbik, solvers, kinefx", "since": "18.5", "version": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Full Body IK"], "extent": [186, 203]}, {"type": "summary", "indent": 0, "text": ["Transfer a motion to a SOP-based skeleton using full-body inverse kinematics algorithm."], "extent": [203, 299]}, {"level": 1, "id": "attributes", "container": true, "type": "attributes_section", "indent": 0, "role": "section", "extent": [299, 311], "body": [{"type": "para", "indent": 0, "text": [{"scheme": null, "value": "/nodes/sop/kinefx--fbikconfiguretargets", "type": "link", "text": ["Full Body IK Configure Targets"], "fullpath": "/nodes/sop/kinefx--fbikconfiguretargets.html"}, " and ", {"scheme": null, "value": "/nodes/sop/kinefx--configurejoints", "type": "link", "text": ["Configure Joints"], "fullpath": "/nodes/sop/kinefx--configurejoints.html"}, " \ncan be used to set up per-joint properties for the IK solver."], "extent": [311, 507]}, {"type": "attributes_item_group", "body": [{"type": "attributes_item", "indent": 0, "text": [{"type": "code", "text": ["fbik_targetconfig"]}], "extent": [2122, 2143], "body": [{"type": "para", "indent": 4, "text": ["This dictionary point attribute configures how the joint\u2019s goal transform\n    behaves in a full-body inverse kinematics solver. This is only used when\n    the joint has a goal transform (for example, if the joint is mapped to a\n    joint on the source skeleton). For more details on the valid keys, see the\n    ", {"type": "code", "text": ["targetoptions"]}, " parameter for ", {"scheme": "Vex", "value": "/vex/functions/solvephysfbik", "type": "link", "text": "", "fallback_text": "solvephysfbik()", "fullpath": "/vex/functions/solvephysfbik.html"}, " and ", {"scheme": "Vex", "value": "/vex/functions/solvefbik", "type": "link", "text": "", "fallback_text": "solvefbik()", "fullpath": "/vex/functions/solvefbik.html"}, "."], "extent": [2171, 2558]}], "container": true, "attrs": {"id": "fbik_targetconfig"}, "role": "item", "id": "fbik_targetconfig"}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["This ", {"type": "strong", "text": ["Configuration Attribute"]}, " dictionary point attribute stores the configurations. \nFor more details on the valid keys, see the ", {"type": "code", "text": ["jointoptions"]}, " parameter for ", {"scheme": "Vex", "value": "/vex/functions/solvephysfbik", "type": "link", "text": "", "fallback_text": "solvephysfbik()", "fullpath": "/vex/functions/solvephysfbik.html"}, " and\n", {"scheme": "Vex", "value": "/vex/functions/solvefbik", "type": "link", "text": "", "fallback_text": "solvefbik()", "fullpath": "/vex/functions/solvefbik.html"}, "."], "extent": [551, 752]}], "text": "Attributes"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [752, 764], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [764, 772], "body": [{"type": "para", "indent": 4, "text": ["The group of points to affect."], "extent": [772, 808]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Root Constrain"], "extent": [808, 824], "body": [{"type": "para", "indent": 4, "text": ["When on, specifies the joint on the ", {"type": "em", "text": ["target skeleton"]}, " that will be constrained to its driver prior to the full-body IK solve. This can be useful when retargeting to an animation in which the character turns around more that 180 degrees from the rest pose."], "extent": [848, 1109]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [1109, 1119], "body": [{"type": "para", "indent": 8, "text": ["The joint you specify needs to be mapped to a joint on the ", {"type": "em", "text": ["source skeleton"]}, " for the retarget."], "extent": [1119, 1223]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "constrainroot"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Solver"], "extent": [1223, 1231], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["FABRIK (Forward and Backward Reaching Inverse Kinematics)"], "extent": [1248, 1311], "body": [{"type": "para", "indent": 8, "text": ["A very fast, simple Full Body IK solver. This solver prefers to be very densely mapped with a high number of iterations to converge nicely and can behave less stably than the Physical Full Body IK solve. This solver is widely used across many different platforms so can be suitable for applications where compatibility is important or where the more physically based solve might be unsuitable."], "extent": [1311, 1714]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Physical Full Body IK (Default)"], "extent": [1714, 1751], "body": [{"type": "para", "indent": 8, "text": ["A sophisticated and robust algorithm for solving the Full Body problem on a skeleton, this solver supports Center of Mass calculations and can provide an intuitive solve from very few target transforms. This solver prefers to be sparsely mapped with far fewer iterations that the FABRIK solve."], "extent": [1751, 2054]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [2054, 2068], "body": [{"type": "para", "indent": 12, "text": ["Increasing the iterations often requires a higher value to be set on the 'Damping' parameter."], "extent": [2068, 2175]}], "container": true}], "container": true, "role": "item_group"}], "container": true}], "container": true}], "container": true, "attrs": {"id": "solver"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Iterations"], "extent": [2175, 2187], "body": [{"type": "para", "indent": 4, "text": ["The number of iterations of the solve to perform."], "extent": [2207, 2262]}], "container": true, "attrs": {"id": "iterations"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Damping"], "extent": [2262, 2271], "body": [{"type": "para", "indent": 4, "text": ["Damping factor for the solver.\n    Larger values will produce more stable results when, for example, a target is unreachable.\n    A value that is too large, however, will require more iterations to converge.\n    Around 0.5 is typically a suitable initial value."], "extent": [2288, 2555]}], "container": true, "attrs": {"id": "damping"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tolerance"], "extent": [2555, 2566], "body": [{"type": "para", "indent": 4, "text": ["The margin of error that we allow the solver to work within. Once achieved, the solver can exit early from its iterations (setting this to 0 will force the solver to always perform the full number of iterations)."], "extent": [2585, 2803]}], "container": true, "attrs": {"id": "tolerance"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pin Root"], "extent": [2803, 2813], "body": [{"type": "para", "indent": 4, "text": ["Pin the translation of any points without a parent."], "extent": [2830, 2887]}], "container": true, "attrs": {"id": "pinroot"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Map Using"], "extent": [5275, 5286], "body": [{"type": "para", "indent": 4, "text": ["This parameter allows you to choose whether to use a dictionary attribute on the first input to look up the drivers on the second input, or simply match by an attribute that is present on both inputs. For example, the second option is useful when the second input contains a subset of the first input\u2019s points."], "extent": [5305, 5621]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Mapping Attribute"], "extent": [5621, 5644], "body": [{"type": "para", "indent": 8, "text": ["Use a dictionary point attribute present on the first input to look up the drivers on the second input. This attribute is created for you by the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--mappoints", "type": "link", "text": ["Map Points SOP"], "fullpath": "/nodes/sop/kinefx--mappoints.html"}, ", but any dictionary attribute matching the following format can be used:"], "extent": [5644, 5915]}, {"type": "disclosure_group", "body": [{"ext": null, "type": "disclosure", "indent": 8, "text": ["Dictionary attribute VEX format"], "role": "item", "extent": [5915, 5967], "body": [{"lang": "vex", "type": "pre", "indent": 12, "text": ["\n            {\n                'reference': string, // The point attribute on the driver skeleton to use as reference. If set to \"ptnum\", the point number will be used.\n                'value': string or int // The value of the point attribute on the point to use as the driver.\n            }\n            "], "extent": [5967, 6309]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Match By Attribute"], "extent": [6309, 6342], "body": [{"type": "para", "indent": 8, "text": ["Match points on the first input to corresponding points on the second input using a given point attribute. For example, if ", {"type": "ui", "text": ["Attribute To Match"]}, " is set to ", {"type": "code", "text": ["name"]}, ", then the points on the first input will be driven by the points on the second input that share the same name."], "extent": [6342, 6625]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "mapusing"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Mapping Attribute"], "extent": [6625, 6644], "body": [{"type": "para", "indent": 4, "text": ["The name of the dictionary point attribute on the first input to use for mapping."], "extent": [6672, 6759]}], "container": true, "attrs": {"id": "mappingattribname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute To Match"], "extent": [6759, 6779], "body": [{"type": "para", "indent": 4, "text": ["The name of the point attribute present on both inputs to be used to map points."], "extent": [6803, 6889]}], "container": true, "attrs": {"id": "attribtomatch"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Delete Mapping Attributes"], "extent": [3006, 3033], "body": [{"type": "para", "indent": 4, "text": ["Clean up the attributes used to configure the solver."], "extent": [3061, 3120]}], "container": true, "attrs": {"id": "deletemappingattrs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Compute Local Transform"], "extent": [3120, 3145], "body": [{"type": "para", "indent": 4, "text": ["Recompute the local transforms after the solve."], "extent": [3176, 3229]}], "container": true, "attrs": {"id": "computelocaltransform"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Configuration Attribute"], "extent": [3229, 3254], "body": [{"type": "para", "indent": 4, "text": ["The name of the dictionary point attribute that stores the configurations.\n    See the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--configurejoints", "type": "link", "text": ["Configure Joints SOP "], "fullpath": "/nodes/sop/kinefx--configurejoints.html"}, "."], "extent": [3283, 3433]}], "container": true, "attrs": {"id": "configurationattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Configure"], "extent": [3433, 3444], "body": [{"type": "para", "indent": 4, "text": ["See the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--fbikconfiguretargets", "type": "link", "text": ["Full Body IK Configure Targets SOP "], "fullpath": "/nodes/sop/kinefx--fbikconfiguretargets.html"}, "."], "extent": [3444, 3534]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [3534, 3542], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Target Skeleton"], "extent": [3542, 3564], "body": [{"type": "para", "indent": 8, "text": ["The skeleton which we wish to run the Full Body IK solve onto. Typically this would be the skeleton of the character we wish to transfer animation onto having first mapped the two skeletons to each other use the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--mappoints", "type": "link", "text": ["Map Points SOP"], "fullpath": "/nodes/sop/kinefx--mappoints.html"}, "."], "extent": [3564, 3830]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [3830, 3844], "body": [{"type": "para", "indent": 12, "text": ["This input does not necessarily have to be static, an animated input can also be modified based upon the driver transforms on the third input."], "extent": [3844, 4000]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Source Skeleton"], "extent": [4000, 4021], "body": [{"type": "para", "indent": 8, "text": ["The driver transforms for the Full Body IK solve."], "extent": [4021, 4080]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [4080, 4089], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["First Output"], "extent": [4089, 4104], "body": [{"type": "para", "indent": 4, "text": ["The skeleton on the first input with the result of the Full Body IK applied."], "extent": [4104, 4186]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Second Output"], "extent": [4186, 4201], "body": [{"type": "para", "indent": 4, "text": ["The unmodified ", {"type": "ui", "text": ["Source Skeleton"]}, "."], "extent": [4201, 4242]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [4242, 4251], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--configurejoints", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--configurejoints.html"}], "extent": [4251, 4288]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--fbikconfiguretargets", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--fbikconfiguretargets.html"}], "extent": [4288, 4330]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--fktransfer", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--fktransfer.html"}], "extent": [4330, 4362]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--rigpose", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--rigpose.html"}], "extent": [4362, 4391]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--rigmatchpose", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--rigmatchpose.html"}], "extent": [4391, 4425]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--mappoints", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--mappoints.html"}], "extent": [4425, 4456]}], "container": true}], "text": "Related"}], "title": ["Full Body IK"], "summary": ["Transfer a motion to a SOP-based skeleton using full-body inverse kinematics algorithm."], "included": ["/nodes/sop/_kinefx_common"]}