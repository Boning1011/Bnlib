{"type": "root", "attrs": {"type": "node", "context": "sop", "namespace": "kinefx", "internal": "fbxanimimport", "icon": "SOP/kinefx-fbxanimimport", "tags": "", "since": "18.5", "version": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["FBX Animation Import"], "extent": [124, 149]}, {"type": "summary", "indent": 0, "text": ["Import animation from an FBX file as a geometry-based skeleton."], "extent": [149, 221]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [221, 233], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Import"], "extent": [233, 247], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["FBX File"], "extent": [247, 258], "body": [{"type": "para", "indent": 4, "text": ["Path to the FBX file to import."], "extent": [275, 312]}], "container": true, "attrs": {"id": "fbxfile"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["FBX Clip Name"], "extent": [312, 327], "body": [{"type": "para", "indent": 4, "text": ["The name of the non-default animation clip to import."], "extent": [345, 404]}, {"type": "para", "indent": 4, "text": ["An FBX file may contain multiple clips, and this parameter is used to choose the particular clip to import."], "extent": [404, 517]}], "container": true, "attrs": {"id": "clipname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["New Clip Name"], "extent": [517, 532], "body": [{"type": "para", "indent": 4, "text": ["When turned on, sets a new name for the clip instead of using the original clip name from the FBX file (", {"type": "ui", "text": ["FBX Clip Name"]}, "). This name is saved to the ", {"type": "code", "text": ["clipinfo"]}, " detail attribute."], "extent": [554, 738]}], "container": true, "attrs": {"id": "newclipname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Root Node"], "extent": [738, 749], "body": [{"type": "para", "indent": 4, "text": ["By default, the entire scene\u2019s animation is imported. Use this parameter to import a subset of the scene hierarchy starting from this root node."], "extent": [767, 917]}], "container": true, "attrs": {"id": "rootnode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Color"], "extent": [917, 924], "body": [{"type": "para", "indent": 4, "text": ["The point color used for the output skeleton\u2019s ", {"type": "code", "text": ["Cd"]}, " point attribute."], "extent": [1200, 1274]}], "container": true, "attrs": {"id": "color"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Convert Units"], "extent": [986, 1001], "body": [{"type": "para", "indent": 4, "text": ["When turned on, the imported scene is scaled to convert from the FBX file\u2019s measurement unit (default centimeters) to the Houdini scene\u2019s measurement unit, as specified in the Houdini preferences ", {"type": "ui", "text": ["Edit \u25b8 Preferences \u25b8 Hip File Options"]}, " (default meters)."], "extent": [1023, 1284]}], "container": true, "attrs": {"id": "convertunits"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Import User-Defined Attributes"], "extent": [1284, 1316], "body": [{"type": "para", "indent": 4, "text": ["When turned on, user-defined properties from the ", {"type": "ui", "text": ["FBX File"]}, " are imported and stored as ", {"scheme": "Node", "value": "/nodes/sop/_kinefx_common#fbx_custom_attributes", "type": "link", "text": ["fbx_custom_attributes"], "fullpath": "/nodes/sop/_kinefx_common.html#fbx_custom_attributes", "fragment": "#fbx_custom_attributes"}, " point attributes."], "extent": [1345, 1527]}], "container": true, "attrs": {"id": "importuserdefattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output"], "extent": [1527, 1535], "body": [{"type": "para", "indent": 4, "text": ["Specifies the type of pose to output for the skeleton."], "extent": [1551, 1611]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Animation"], "extent": [1611, 1626], "body": [{"type": "para", "indent": 8, "text": ["Outputs the animated poses using the parameter values on the ", {"type": "ui", "text": ["Timing"]}, " tab."], "extent": [1626, 1712]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Rest Pose"], "extent": [1712, 1727], "body": [{"type": "para", "indent": 8, "text": ["Outputs the default pose without animation."], "extent": [1727, 1780]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "output"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reload"], "extent": [1780, 1788], "body": [{"type": "para", "indent": 4, "text": ["Reload from the FBX file."], "extent": [1804, 1835]}], "container": true, "attrs": {"id": "reload"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Timing"], "extent": [1835, 1848], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Method"], "extent": [16, 24], "body": [{"type": "para", "indent": 4, "text": ["The time units for specifying animation parameters."], "extent": [50, 111]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["By Time"], "extent": [111, 124], "body": [{"type": "para", "indent": 8, "text": ["The timing parameters below will be specified in seconds."], "extent": [124, 191]}], "container": true}, {"type": "dt", "indent": 4, "text": ["By Frame"], "extent": [191, 205], "body": [{"type": "para", "indent": 8, "text": ["The timing parameters below will be specified in frames."], "extent": [205, 271]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "timeshiftmethod"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Time"], "extent": [271, 277], "body": [{"type": "para", "indent": 4, "text": ["The time (in seconds) to import the animated pose from."], "extent": [292, 353]}], "container": true, "attrs": {"id": "time"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Animation Start"], "extent": [353, 370], "body": [{"type": "para", "indent": 4, "text": ["The time at which the ", {"type": "em", "text": ["source"]}, " animation starts, when ", {"type": "ui", "text": ["Method"]}, " is set to ", {"type": "ui", "text": ["By Time"]}, ". Earlier poses will be\n    clamped to this value. When turned off, this value is taken from the source\n    animation where available. If it has no range information, Houdini\u2019s scene\n    start (", {"type": "code", "text": ["$TSTART"]}, ") value will be used."], "extent": [399, 715]}, {"type": "para", "indent": 4, "text": ["Note that no clamping is done when this is turned off."], "extent": [715, 775]}], "container": true, "attrs": {"id": "animationstarttime"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Animation End"], "extent": [775, 790], "body": [{"type": "para", "indent": 4, "text": ["The time at which the ", {"type": "em", "text": ["source"]}, " animation ends, when ", {"type": "ui", "text": ["Method"]}, " is set to ", {"type": "ui", "text": ["By Time"]}, ". Later poses will be clamped\n    to this value. When turned off, this value is taken from the source animation\n    where available. If it has no range information, Houdini\u2019s scene end\n    (", {"type": "code", "text": ["$TEND"]}, ") value will be used."], "extent": [817, 1125]}, {"type": "para", "indent": 4, "text": ["Note that no clamping is done when this is turned off."], "extent": [1125, 1185]}], "container": true, "attrs": {"id": "animationendtime"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Playback Start"], "extent": [1185, 1201], "body": [{"type": "para", "indent": 4, "text": ["The destination time at which the specified animation will begin to\n    playback, when ", {"type": "ui", "text": ["Method"]}, " is set to ", {"type": "ui", "text": ["By Time"]}, ". When turned off, Houdini\u2019s scene start (", {"type": "code", "text": ["$TSTART"]}, ") value is used."], "extent": [1229, 1421]}], "container": true, "attrs": {"id": "playbackstarttime"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frame"], "extent": [1421, 1428], "body": [{"type": "para", "indent": 4, "text": ["The frame number to import the animated pose from."], "extent": [1444, 1500]}], "container": true, "attrs": {"id": "frame"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Animation Start"], "extent": [1500, 1517], "body": [{"type": "para", "indent": 4, "text": ["The frame at which the ", {"type": "em", "text": ["source"]}, " animation starts, when ", {"type": "ui", "text": ["Method"]}, " is set to ", {"type": "ui", "text": ["By Frame"]}, ". Earlier poses will be\n    clamped to this value.  When turned off, this value is taken from the source\n    animation where available. If it has no range information, Houdini\u2019s scene\n    start (", {"type": "code", "text": ["$FSTART"]}, ") value will be used."], "extent": [1547, 1866]}, {"type": "para", "indent": 4, "text": ["Note that no clamping is done when this is turned off."], "extent": [1866, 1926]}], "container": true, "attrs": {"id": "animationstartframe"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Animation End"], "extent": [1926, 1941], "body": [{"type": "para", "indent": 4, "text": ["The frame at which the ", {"type": "em", "text": ["source"]}, " animation ends, when ", {"type": "ui", "text": ["Method"]}, " is set to ", {"type": "ui", "text": ["By Frame"]}, ". Later poses will be clamped\n    to this value. When turned off, this value is taken from the source animation\n    where available. If it has no range information, Houdini\u2019s scene end\n    (", {"type": "code", "text": ["$FEND"]}, ") value will be used."], "extent": [1969, 2279]}, {"type": "para", "indent": 4, "text": ["Note that no clamping is done when this is turned off."], "extent": [2279, 2339]}], "container": true, "attrs": {"id": "animationendframe"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Playback Start"], "extent": [2339, 2355], "body": [{"type": "para", "indent": 4, "text": ["The destination frame at which the specified animation will begin to\n    playback, when ", {"type": "ui", "text": ["Method"]}, " is set to ", {"type": "ui", "text": ["By Frame"]}, ". When turned off, Houdini\u2019s scene start (", {"type": "code", "text": ["$FSTART"]}, ") value is used."], "extent": [2384, 2578]}], "container": true, "attrs": {"id": "playbackstartframe"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Speed"], "extent": [56, 63], "body": [{"type": "para", "indent": 4, "text": ["Sets the speed factor for the playback of the animation. This is\n    applied after any clamping is performed by the ", {"type": "ui", "text": ["Animation Start"]}, " and ", {"type": "ui", "text": ["Animation End"]}, " parameters."], "extent": [79, 253]}], "container": true, "attrs": {"id": "speed"}, "role": "item"}], "container": true}]}], "text": "Parameters"}, {"level": 1, "id": "attributes", "container": true, "type": "attributes_section", "indent": 0, "role": "section", "extent": [1900, 1912], "body": [{"type": "attributes_item_group", "body": [{"type": "attributes_item", "indent": 0, "text": ["clipinfo"], "extent": [1403, 1413], "body": [{"type": "para", "indent": 4, "text": ["This detail attribute records the current animation range and sample rate,\n    as well as the original animation range and sample rate of the imported\n    animation."], "extent": [1432, 1603]}], "container": true, "attrs": {"id": "clipinfo"}, "role": "item", "id": "clipinfo"}, {"type": "attributes_item", "indent": 0, "text": ["name"], "extent": [16, 22], "body": [{"type": "para", "indent": 4, "text": ["Point attribute containing a unique name across all points used for identification. This is derived from the corresponding FBX node name. However, FBX node names may not be unique. For these cases, the names will be suffixed with 1, 2, 3, etc."], "extent": [44, 293]}], "container": true, "attrs": {"id": "name_attrib"}, "role": "item", "id": "name"}, {"type": "attributes_item", "indent": 0, "text": ["path"], "extent": [293, 299], "body": [{"type": "para", "indent": 4, "text": ["Contains the hierarchical path to the FBX node that corresponds to the point. The ", {"scheme": "Node", "value": "/nodes/sop/kinefx--rop_fbxanimoutput", "type": "link", "text": ["FBX Animation Output SOP"], "fullpath": "/nodes/sop/kinefx--rop_fbxanimoutput.html"}, " node uses this attribute when determining where to export the point\u2019s transforms."], "extent": [338, 569]}, {"type": "para", "indent": 4, "text": ["If the rest geoemtry input contains a ", {"type": "em", "text": ["primitive"]}, " ", {"type": "code", "text": ["path"]}, " attribute, then it\n    is also used to similarly for creating the corresponding FBX node hierarchy.\n    Furthermore, any intermediate nodes that start with ", {"type": "code", "text": ["LODGroup"]}, " will be\n    created as LODGroup FBX node instead of as a Null. This allows the meshes\n    to be interpreted as LOD meshes by supporting applications like Unreal."], "extent": [569, 960]}], "container": true, "attrs": {"id": "path_attrib", "type": "point"}, "role": "item", "id": "path"}, {"type": "attributes_item", "indent": 0, "text": ["fbx_custom_attributes"], "extent": [960, 983], "body": [{"type": "para", "indent": 4, "text": ["Contains a dictionary of user-defined custom properties for the FBX node that corresponds to the point. The dictionary includes both static and animated values evaluated over time.\n    This attribute is created when the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--fbxanimimport", "type": "link", "text": ["FBX Animation Import SOP"], "fullpath": "/nodes/sop/kinefx--fbxanimimport.html"}, " or ", {"scheme": "Node", "value": "/nodes/sop/kinefx--fbxcharacterimport", "type": "link", "text": ["FBX Character Import SOP"], "fullpath": "/nodes/sop/kinefx--fbxcharacterimport.html"}, " nodes import an FBX file."], "extent": [1028, 1403]}], "container": true, "attrs": {"id": "fbx_custom_attrib", "type": "point"}, "role": "item", "id": "fbx_custom_attributes"}, {"type": "attributes_item", "indent": 0, "text": ["scaleinheritance"], "extent": [1603, 1621], "body": [{"type": "para", "indent": 4, "text": ["This point attribute specifies the scaling behavior when performing local\n    transformations. For more details on these values, see\n    ", {"scheme": "Vex", "value": "/vex/functions/combinelocaltransform", "type": "link", "text": "", "fallback_text": "combinelocaltransform()", "fullpath": "/vex/functions/combinelocaltransform.html"}, " and ", {"scheme": "Vex", "value": "/vex/functions/extractlocaltransform", "type": "link", "text": "", "fallback_text": "extractlocaltransform()", "fullpath": "/vex/functions/extractlocaltransform.html"}, "."], "extent": [1655, 1858]}], "container": true, "attrs": {"id": "scaleinheritance_attrib"}, "role": "item", "id": "scaleinheritance"}, {"type": "attributes_item", "indent": 0, "text": ["transform"], "extent": [1858, 1869], "body": [{"type": "para", "indent": 4, "text": ["This 3\u00d73 matrix point attribute specifies the world transform for the\n    point. While the world position of the point is still ", {"type": "code", "text": ["P"]}, ", this transform\n    encodes the world transform\u2019s rotation, scale, and shear components."], "extent": [1896, 2122]}], "container": true, "attrs": {"id": "transform_attrib"}, "role": "item", "id": "transform"}], "container": true, "role": "item_group"}], "text": "Attributes"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [2161, 2170], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Skeleton"], "extent": [2170, 2181], "body": [{"type": "para", "indent": 4, "text": ["An animated skeleton with data parsed from the motion capture files."], "extent": [2181, 2255]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2255, 2264], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--rop_fbxanimoutput", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--rop_fbxanimoutput.html"}], "extent": [2264, 2303]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--fbxcharacterimport", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--fbxcharacterimport.html"}], "extent": [2303, 2343]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--fbxskinimport", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--fbxskinimport.html"}], "extent": [2343, 2378]}], "container": true}], "text": "Related"}], "title": ["FBX Animation Import"], "summary": ["Import animation from an FBX file as a geometry-based skeleton."], "included": ["/nodes/sop/_kinefx_common", "/nodes/sop/agent", "/nodes/sop/kinefx--usdanimimport", "/nodes/sop/kinefx--usdskinimport", "/nodes/sop/lopimport", "/nodes/sop/standard_kinefx_timing_parms", "/nodes/sop/standard_kinefx_timing_parms_with_speed"]}