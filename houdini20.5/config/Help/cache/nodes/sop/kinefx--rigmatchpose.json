{"type": "root", "attrs": {"type": "node", "context": "sop", "namespace": "kinefx", "internal": "rigmatchpose", "icon": "SOP/kinefx-rigmatchpose", "tags": "", "since": "18.5", "version": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Rig Match Pose"], "extent": [122, 141]}, {"type": "summary", "indent": 0, "text": ["Conforms the rest poses of two skeletons in preparation for retargeting."], "extent": [141, 222]}, {"type": "para", "indent": 0, "text": ["This node allows you to create a pose on both of the skeletons found in the input geometries which gets stored to a matrix point attribute specified in the ", {"type": "ui", "text": ["Attribute Name"]}, " parameter. Typically this will be part of the retargeting process where we wish to compute offsets between two skeletons."], "extent": [222, 520]}, {"type": "para", "indent": 0, "text": ["By setting the options on the ", {"type": "ui", "text": ["First Output"]}, " and ", {"type": "ui", "text": ["Second Output"]}, " parameters you can set whether the pose should be written directly to the geometry, or simply attached as an attribute without modifying the input transforms."], "extent": [520, 749]}, {"level": 1, "id": "state", "container": true, "type": "state_section", "indent": 0, "role": "section", "extent": [749, 756], "body": [{"level": 3, "type": "sep", "indent": 0, "text": [" Rig Match Pose state toolbar "], "extent": [756, 794], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Translate"], "extent": [816, 831], "body": [{"type": "para", "indent": 8, "text": ["If you have a point selected and change this setting, the new option is applied to the point."], "extent": [831, 934]}, {"type": "para", "indent": 8, "text": ["If you do not have a point selected, applies the current option to the next joint you click."], "extent": [934, 1036]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Enable"], "extent": [1036, 1053], "body": [{"type": "para", "indent": 12, "text": ["Lets you translate the point."], "extent": [1053, 1096]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Lock"], "extent": [1096, 1111], "body": [{"type": "para", "indent": 12, "text": ["Locks the Translate parameter for the point and hides its transform handle in the viewport."], "extent": [1111, 1216]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Lock and Hide"], "extent": [1216, 1239], "body": [{"type": "para", "indent": 12, "text": ["Locks the Translate parameter for the point, hides its transform handle in the viewport, and hides its parameter in the ", {"type": "ui", "text": ["Parameter Editor"]}, "."], "extent": [1239, 1394]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Rotate"], "extent": [1394, 1407], "body": [{"type": "para", "indent": 8, "text": ["If you have a point selected and change this setting, the new option is applied to the joint."], "extent": [1407, 1510]}, {"type": "para", "indent": 8, "text": ["If you do not have a point selected, applies the current option to the next point you click."], "extent": [1510, 1612]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Enable"], "extent": [1612, 1629], "body": [{"type": "para", "indent": 12, "text": ["Lets you rotate the joint."], "extent": [1629, 1669]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Lock"], "extent": [1669, 1684], "body": [{"type": "para", "indent": 12, "text": ["Locks the ", {"type": "ui", "text": ["Rotate"]}, " parameter for the point and hides its transform handle in the viewport."], "extent": [1684, 1790]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Lock and Hide"], "extent": [1790, 1813], "body": [{"type": "para", "indent": 12, "text": ["Locks the ", {"type": "ui", "text": ["Rotate"]}, " parameter for the point, hides its transform handle in the viewport, and hides its parameter in the ", {"type": "ui", "text": ["Parameter Editor"]}, "."], "extent": [1813, 1969]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale"], "extent": [1969, 1981], "body": [{"type": "para", "indent": 8, "text": ["If you have a point selected and change this setting, the new option is applied to the joint."], "extent": [1981, 2084]}, {"type": "para", "indent": 8, "text": ["If you do not have a point selected, applies the current option to the next point you click."], "extent": [2084, 2186]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Enable"], "extent": [2186, 2203], "body": [{"type": "para", "indent": 12, "text": ["Lets you scale the joint."], "extent": [2203, 2242]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Lock"], "extent": [2242, 2257], "body": [{"type": "para", "indent": 12, "text": ["Locks the ", {"type": "ui", "text": ["Scale"]}, " parameter for the point and hides its transform handle in the viewport."], "extent": [2257, 2362]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Lock and Hide"], "extent": [2362, 2385], "body": [{"type": "para", "indent": 12, "text": ["Locks the ", {"type": "ui", "text": ["Scale"]}, " parameter for the point, hides its transform handle in the viewport, and hides its parameter in the ", {"type": "ui", "text": ["Parameter Editor"]}, "."], "extent": [2385, 2540]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Mode"], "extent": [2540, 2551], "body": [{"type": "para", "indent": 8, "text": ["If you have a joint selected, let\u2019s switch between the ", {"scheme": null, "value": "/nodes/sop/_kinefx_common#transformations", "type": "link", "text": ["Mode"], "fullpath": "/nodes/sop/_kinefx_common.html#transformations", "fragment": "#transformations"}, " parameter options on the node."], "extent": [2551, 2695]}, {"type": "para", "indent": 8, "text": ["If you do not have a joint selected, sets the Mode for the next joint you select."], "extent": [2695, 2786]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Tweak Rotate Links"], "extent": [2786, 2810], "body": [{"type": "para", "indent": 8, "text": ["When on, you can ", {"keys": ["LMB"], "type": "keys", "text": null}, "-drag the Links in your skeleton to pose your joints. This is useful when posing your character."], "extent": [2810, 2940]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [2940, 2956], "body": [{"type": "summary", "indent": 12, "text": ["Example: Posing a character with Tweak Rotate Links turned on"], "extent": [3046, 3127]}], "container": true, "attrs": {"src": "/videos/kinefx_rigposenode_tweakrotatelinks.mp4", "loop": "true"}}], "container": true, "role": "item_group"}], "container": true}], "container": true}], "container": true, "attrs": {"id": "toolbar"}}, {"level": 3, "type": "sep", "indent": 0, "text": [" Rig Match Pose state pop-up menu "], "extent": [3127, 3168], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Post Multiply"], "extent": [3168, 3188], "body": [{"type": "para", "indent": 8, "text": ["When on, switches the current point\u2019s ", {"scheme": null, "value": "/nodes/sop/_kinefx_common#transformations", "type": "link", "text": ["Mode"], "fullpath": "/nodes/sop/_kinefx_common.html#transformations", "fragment": "#transformations"}, " to post-multiply.\n        When off, switches the current point\u2019s Mode to pre-multiply."], "extent": [3188, 3371]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Hide Rig Whilst Posing"], "extent": [3371, 3399], "body": [{"type": "para", "indent": 8, "text": ["When on, your skeleton and any controls will be hidden when you are actively manipulating a point."], "extent": [3399, 3507]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Focus Selected in Parameter Editor"], "extent": [3507, 3547], "body": [{"type": "para", "indent": 8, "text": ["When on, centers the ", {"type": "ui", "text": ["Transformations"]}, " multiparm entry for the currently selected point in the ", {"type": "ui", "text": ["Parameter Editor"]}, "."], "extent": [3547, 3675]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Filter Selected in Parameter Editor"], "extent": [3675, 3716], "body": [{"type": "para", "indent": 8, "text": ["When on, the list of ", {"type": "ui", "text": ["Transformations"]}, " multiparms in the ", {"type": "ui", "text": ["Parameter Editor"]}, " is automatically filtered so that only the multiparm for the selected joint(s) appears."], "extent": [3716, 3893]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Display Joints"], "extent": [3893, 3913], "body": [{"type": "para", "indent": 8, "text": ["When on, all the points are shown in the viewport."], "extent": [3913, 3973]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Display Joint Axes"], "extent": [3973, 3997], "body": [{"type": "para", "indent": 8, "text": ["When on, all the X/Y/Z axes for each point are shown."], "extent": [3997, 4060]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Display Links"], "extent": [4060, 4079], "body": [{"type": "para", "indent": 8, "text": ["When on, the visual representations of the parent-child relationships between points are shown. The links appear transparent."], "extent": [4079, 4214]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Solid Links"], "extent": [4214, 4231], "body": [{"type": "para", "indent": 8, "text": ["When on, Links appear shaded. When off, Links appear as wireframes."], "extent": [4231, 4308]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Show Geometry"], "extent": [4308, 4327], "body": [{"type": "para", "indent": 8, "text": ["When on, shows the poly lines that connect the joints into a hierarchy."], "extent": [4327, 4408]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Show Joint Data"], "extent": [4408, 4429], "body": [{"type": "para", "indent": 8, "text": ["When on, displays all the world and local transformation data for the selected joint in the top left-hand corner of the viewport."], "extent": [4429, 4568]}], "container": true}], "container": true}], "container": true}], "text": "State"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [4568, 4580], "body": [{"level": 3, "type": "sep", "indent": 0, "text": [" Pose Destination "], "extent": [4580, 4606], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Attribute Name"], "extent": [4606, 4627], "body": [{"type": "para", "indent": 8, "text": ["The name of the point attribute in which to store the pose. This pose will be stored on both outputs."], "extent": [4649, 4761]}], "container": true, "attrs": {"id": "attrname"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["First Output"], "extent": [4761, 4779], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Matched Pose"], "extent": [4804, 4826], "body": [{"type": "para", "indent": 12, "text": ["Store the pose set by the ", {"type": "ui", "text": ["Transformations"]}, " multiparm on the point attribute specified in ", {"type": "ui", "text": ["Attribute Name"]}, " and also set this pose as the current pose on the first output."], "extent": [4826, 5013]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Pass Through"], "extent": [5013, 5035], "body": [{"type": "para", "indent": 12, "text": ["Store the pose set by the ", {"type": "ui", "text": ["Transformations"]}, " multiparm on the point attribute specified in ", {"type": "ui", "text": ["Attribute Name"]}, " but maintain the first input\u2019s current pose or animation."], "extent": [5035, 5217]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "firstoutput"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Second Output"], "extent": [5217, 5236], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Matched Pose"], "extent": [5262, 5284], "body": [{"type": "para", "indent": 12, "text": ["Store the pose set by the ", {"type": "ui", "text": ["Transformations"]}, " multiparm on the point attribute specified in ", {"type": "ui", "text": ["Attribute Name"]}, " and also set this pose as the current pose on the second output."], "extent": [5284, 5472]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Pass Through"], "extent": [5472, 5494], "body": [{"type": "para", "indent": 12, "text": ["Store the pose set by the ", {"type": "ui", "text": ["Transformations"]}, " multiparm on the point attribute specified in ", {"type": "ui", "text": ["Attribute Name"]}, " but maintain the second input\u2019s current pose or animation."], "extent": [5494, 5678]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "secondoutput"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 3, "type": "sep", "indent": 0, "text": [" Match Size "], "extent": [5678, 5697], "body": [{"type": "para", "indent": 4, "text": ["These settings apply when ", {"type": "ui", "text": ["Enable Match Bounds"]}, " is turned on. When enabled, the node will perform an initial bounding box match for the two inputs, modifying the first input to match the second."], "extent": [5697, 5900]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Apply Transform To"], "extent": [5900, 5924], "body": [{"type": "para", "indent": 8, "text": ["Which of the inputs to apply the global scaling to.\n        Depending on the topology of your network you may wish to match the ", {"type": "ui", "text": ["Source Skeleton"]}, " to the ", {"type": "ui", "text": ["Target Skeleton"]}, " or vice-versa. This parameter control which of the inputs should be globally transformed."], "extent": [5953, 6227]}], "container": true, "attrs": {"id": "globalxformskel"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Transform Delta Attribute"], "extent": [6227, 6258], "body": [{"type": "para", "indent": 8, "text": ["The detail attribute on which we store the 'global' transform we apply to the first input. Typically this will be reversed after the a retarget has taken place to return the character to its original 'space'. See the ", {"scheme": "Node", "value": "/nodes/sop/xformbyattrib", "type": "link", "text": ["Transform By Attribute SOP"], "fullpath": "/nodes/sop/xformbyattrib.html"}, "."], "extent": [6283, 6566]}], "container": true, "attrs": {"id": "stashattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Enable Match Bounds"], "extent": [6566, 6591], "body": [{"type": "para", "indent": 8, "text": ["Perform the initial bounding box match."], "extent": [6614, 6663]}], "container": true, "attrs": {"id": "bboxmatch"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Set Pivot from Bounds"], "extent": [6663, 6690], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Enable Match Bounds"]}, " is enabled, set the pivot, used when you transform the skeleton globally, from the bounding box.\n        You can further adjust the pivot translation using the ", {"type": "ui", "text": ["Scene Pivot"]}, " parameter."], "extent": [6720, 6949]}], "container": true, "attrs": {"id": "setpivotfrombbox"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Target Group"], "extent": [6949, 6967], "body": [{"type": "para", "indent": 8, "text": ["The point group on the first input that will be used to perform the match. This can useful if you wish to exclude root points, or points for props that protrude from the main skin of the character."], "extent": [6992, 7199]}], "container": true, "attrs": {"id": "targetgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Reference Group"], "extent": [7199, 7220], "body": [{"type": "para", "indent": 8, "text": ["The point group on the second input that will be used to perform the match. This can useful if you wish to exclude root points, or points for props that protrude from the main skin of the character."], "extent": [7242, 7450]}], "container": true, "attrs": {"id": "refgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Rest Frame for Target"], "extent": [7450, 7477], "body": [{"type": "para", "indent": 8, "text": ["Read the reference frame from the clipinfo detail attribute on the first input geometry or set a custom range."], "extent": [7506, 7630]}], "container": true, "attrs": {"id": "restframetarget"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Target Reference Frame"], "extent": [7630, 7658], "body": [{"type": "para", "indent": 8, "text": ["The frame of the target skeleton at which we perform the bounding box match. Useful if the ", {"type": "ui", "text": ["Target Skeleton"]}, " input is animated."], "extent": [7680, 7819]}], "container": true, "attrs": {"id": "refframe"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Rest Frame for Source"], "extent": [7819, 7846], "body": [{"type": "para", "indent": 8, "text": ["Read the reference frame from the clipinfo detail attribute on the second input geometry or set a custom range."], "extent": [7875, 8000]}], "container": true, "attrs": {"id": "restframesource"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Source Reference Frame"], "extent": [8000, 8028], "body": [{"type": "para", "indent": 8, "text": ["The frame of the source skeleton at which we perform the bounding box match. Useful if the ", {"type": "ui", "text": ["Source Skeleton"]}, " input is animated."], "extent": [8056, 8195]}], "container": true, "attrs": {"id": "refframesource"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 3, "type": "sep", "indent": 0, "extent": [8195, 8199], "body": [{"type": "para", "indent": 4, "text": ["In addition to, or instead of, the initial bounding box matching, we can globally transform the skeleton using the ", {"type": "ui", "text": ["Scene*"]}, " Transform parameters or the corresponding handle in the viewport."], "extent": [8199, 8397]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Scene Translate"], "extent": [8397, 8418], "body": [{"type": "para", "indent": 8, "text": ["Translation along XYZ axes."], "extent": [8418, 8455]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Scene Rotate"], "extent": [8455, 8473], "body": [{"type": "para", "indent": 8, "text": ["Degrees rotation about XYZ axes."], "extent": [8473, 8515]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Scene Pivot"], "extent": [8515, 8532], "body": [{"type": "para", "indent": 8, "text": ["Pivot translation along XYZ axes."], "extent": [8532, 8575]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Scene Uniform Scale"], "extent": [8575, 8600], "body": [{"type": "para", "indent": 8, "text": ["Uniform scaling about the XYZ axes."], "extent": [8600, 8645]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 3, "type": "sep", "indent": 0, "text": [" Tweak Pose "], "extent": [8645, 8664], "body": [{"type": "para", "indent": 4, "text": ["The two sets of multiparms (", {"type": "ui", "text": ["Transformations"]}, " and ", {"type": "ui", "text": ["Ref Transformations"]}, ") are where changes to the poses on both inputs are stored. These multiparms provide the same options as found on the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--rigpose", "type": "link", "text": ["Rig Pose SOP"], "fullpath": "/nodes/sop/kinefx--rigpose.html"}, "."], "extent": [8664, 8904]}, {"level": 3, "type": "sep", "indent": 4, "text": [" Destination Geometry "], "extent": [8904, 8937], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Transformations"], "extent": [8937, 8963], "body": [{"type": "para", "indent": 12, "text": ["This multiparm stores the pose for the skeleton on the left-hand input, see the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--rigpose", "type": "link", "text": ["Rig Pose SOP"], "fullpath": "/nodes/sop/kinefx--rigpose.html"}, " for details. In a typical retargeting workflow, this is the skeleton whose motion we wish to match to the right-hand input."], "extent": [9000, 9257]}], "container": true, "attrs": {"id": "desttransformations"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Group"], "extent": [2601, 2612], "body": [{"type": "para", "indent": 8, "text": ["The point group that this multiparm instance is applied to."], "extent": [2632, 2701]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Mode"], "extent": [2701, 2711], "body": [{"type": "para", "indent": 8, "text": ["Specifies how the transformation described by this multiparm instance is applied to the input."], "extent": [2730, 2834]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Pre-Multiply"], "extent": [2834, 2856], "body": [{"type": "para", "indent": 12, "text": ["The transformation is applied on top of the input pose. This is analogous to treating any input local transformations as an object node\u2019s ", {"scheme": null, "value": "/basics/objects#pretransform", "type": "link", "text": ["pre-transform"], "fullpath": "/basics/objects.html#pretransform", "fragment": "#pretransform"}, "."], "extent": [2886, 3083]}], "container": true, "attrs": {"id": "premultiply"}}, {"type": "dt", "indent": 8, "text": ["Post-Multiply"], "extent": [3083, 3106], "body": [{"type": "para", "indent": 12, "text": ["The transformation is applied in between the input point\u2019s parent transform and its local transform. This is analogous to modifying the ", {"scheme": null, "value": "/basics/objects#pretransform", "type": "link", "text": ["pre-transform"], "fullpath": "/basics/objects.html#pretransform", "fragment": "#pretransform"}, " of an object node. This mode is especially useful if you want to reproportion an animated input using simple translations without compromising any input motion, effectively moving the pivot for the point\u2019s animation."], "extent": [3137, 3548]}], "container": true, "attrs": {"id": "postmultiply"}}, {"type": "dt", "indent": 8, "text": ["Override"], "extent": [3548, 3566], "body": [{"type": "para", "indent": 12, "text": ["The transformation completely overwrites any input local transforms on the points. This is useful if you want to 'zero out' any input animation, or if you are working with the ", {"type": "ui", "text": ["Bake"]}, " options on the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--rigpose", "type": "link", "text": ["Rig Pose SOP"], "fullpath": "/nodes/sop/kinefx--rigpose.html"}, "."], "extent": [3593, 3847]}], "container": true, "attrs": {"id": "override"}}, {"type": "dt", "indent": 8, "text": ["From Rest Pose"], "extent": [3847, 3871], "body": [{"type": "para", "indent": 12, "text": ["The transformation behaves like ", {"type": "ui", "text": ["Pre-Multiply"]}, ", but any input animation is replaced by the pose specified in the ", {"type": "ui", "text": ["Rest Pose Attribute"]}, " parameter. This is useful if you want to revert a point\u2019s transform to a 'rest pose' rather than zero out the local transform as in the ", {"type": "ui", "text": ["Override"]}, " option."], "extent": [3902, 4211]}], "container": true, "attrs": {"id": "fromrestpose"}}], "container": true}], "container": true, "attrs": {"id": "mode"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Transform Order"], "extent": [4211, 4232], "body": [{"type": "para", "indent": 8, "text": ["The left menu specifies the order in which the transforms are applied\n        (for example, scale, then rotate, then translate). This can change the\n        position and orientation of the object in the same way that going a\n        block and turning east takes you to a different place than turning east\n        and then going a block."], "extent": [4256, 4602]}, {"type": "para", "indent": 8, "text": ["The right menu specifies the order to rotate around the\n        X, Y, and Z axes. Depending on the character, certain rotation orders can\n        make character joint transforms easier to use."], "extent": [4602, 4804]}], "container": true, "attrs": {"id": "transform"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Translate"], "extent": [4804, 4819], "body": [{"type": "para", "indent": 8, "text": ["Translation along the X, Y, and Z axes."], "extent": [4843, 4892]}], "container": true, "attrs": {"id": "translate"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Rotate"], "extent": [4892, 4904], "body": [{"type": "para", "indent": 8, "text": ["Degrees rotation about the X, Y, and Z axes."], "extent": [4925, 4979]}], "container": true, "attrs": {"id": "rotate"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Scale"], "extent": [4979, 4990], "body": [{"type": "para", "indent": 8, "text": ["Non-uniform scaling about the X, Y, and Z axes."], "extent": [5010, 5067]}], "container": true, "attrs": {"id": "scale"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 4, "text": [" Pivot "], "extent": [5067, 5085], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Pivot Translate"], "extent": [5105, 5130], "body": [{"type": "para", "indent": 12, "text": ["The pivot translation along the X, Y, and Z axes."], "extent": [5130, 5193]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Pivot Rotate"], "extent": [5193, 5215], "body": [{"type": "para", "indent": 12, "text": ["The pivot rotation about the X, Y, and Z axes."], "extent": [5215, 5275]}], "container": true, "role": "item"}], "container": true}], "container": true, "attrs": {"id": "pivot"}}], "container": true}, {"level": 3, "type": "sep", "indent": 4, "text": [" Source Geometry "], "extent": [9319, 9347], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Ref Transformations"], "extent": [9347, 9377], "body": [{"type": "para", "indent": 12, "text": ["This multiparm stores the pose for the skeleton on the right-hand input, see the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--rigpose", "type": "link", "text": ["Rig Pose SOP"], "fullpath": "/nodes/sop/kinefx--rigpose.html"}, " for details. In a typical retargeting workflow, this is the animated skeleton whose motion we wish to apply to the left-hand input\u2019s skeleton."], "extent": [9413, 9690]}], "container": true, "attrs": {"id": "reftransformations"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Group"], "extent": [2601, 2612], "body": [{"type": "para", "indent": 8, "text": ["The point group that this multiparm instance is applied to."], "extent": [2632, 2701]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Mode"], "extent": [2701, 2711], "body": [{"type": "para", "indent": 8, "text": ["Specifies how the transformation described by this multiparm instance is applied to the input."], "extent": [2730, 2834]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Pre-Multiply"], "extent": [2834, 2856], "body": [{"type": "para", "indent": 12, "text": ["The transformation is applied on top of the input pose. This is analogous to treating any input local transformations as an object node\u2019s ", {"scheme": null, "value": "/basics/objects#pretransform", "type": "link", "text": ["pre-transform"], "fullpath": "/basics/objects.html#pretransform", "fragment": "#pretransform"}, "."], "extent": [2886, 3083]}], "container": true, "attrs": {"id": "premultiply"}}, {"type": "dt", "indent": 8, "text": ["Post-Multiply"], "extent": [3083, 3106], "body": [{"type": "para", "indent": 12, "text": ["The transformation is applied in between the input point\u2019s parent transform and its local transform. This is analogous to modifying the ", {"scheme": null, "value": "/basics/objects#pretransform", "type": "link", "text": ["pre-transform"], "fullpath": "/basics/objects.html#pretransform", "fragment": "#pretransform"}, " of an object node. This mode is especially useful if you want to reproportion an animated input using simple translations without compromising any input motion, effectively moving the pivot for the point\u2019s animation."], "extent": [3137, 3548]}], "container": true, "attrs": {"id": "postmultiply"}}, {"type": "dt", "indent": 8, "text": ["Override"], "extent": [3548, 3566], "body": [{"type": "para", "indent": 12, "text": ["The transformation completely overwrites any input local transforms on the points. This is useful if you want to 'zero out' any input animation, or if you are working with the ", {"type": "ui", "text": ["Bake"]}, " options on the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--rigpose", "type": "link", "text": ["Rig Pose SOP"], "fullpath": "/nodes/sop/kinefx--rigpose.html"}, "."], "extent": [3593, 3847]}], "container": true, "attrs": {"id": "override"}}, {"type": "dt", "indent": 8, "text": ["From Rest Pose"], "extent": [3847, 3871], "body": [{"type": "para", "indent": 12, "text": ["The transformation behaves like ", {"type": "ui", "text": ["Pre-Multiply"]}, ", but any input animation is replaced by the pose specified in the ", {"type": "ui", "text": ["Rest Pose Attribute"]}, " parameter. This is useful if you want to revert a point\u2019s transform to a 'rest pose' rather than zero out the local transform as in the ", {"type": "ui", "text": ["Override"]}, " option."], "extent": [3902, 4211]}], "container": true, "attrs": {"id": "fromrestpose"}}], "container": true}], "container": true, "attrs": {"id": "mode"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Transform Order"], "extent": [4211, 4232], "body": [{"type": "para", "indent": 8, "text": ["The left menu specifies the order in which the transforms are applied\n        (for example, scale, then rotate, then translate). This can change the\n        position and orientation of the object in the same way that going a\n        block and turning east takes you to a different place than turning east\n        and then going a block."], "extent": [4256, 4602]}, {"type": "para", "indent": 8, "text": ["The right menu specifies the order to rotate around the\n        X, Y, and Z axes. Depending on the character, certain rotation orders can\n        make character joint transforms easier to use."], "extent": [4602, 4804]}], "container": true, "attrs": {"id": "transform"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Translate"], "extent": [4804, 4819], "body": [{"type": "para", "indent": 8, "text": ["Translation along the X, Y, and Z axes."], "extent": [4843, 4892]}], "container": true, "attrs": {"id": "translate"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Rotate"], "extent": [4892, 4904], "body": [{"type": "para", "indent": 8, "text": ["Degrees rotation about the X, Y, and Z axes."], "extent": [4925, 4979]}], "container": true, "attrs": {"id": "rotate"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Scale"], "extent": [4979, 4990], "body": [{"type": "para", "indent": 8, "text": ["Non-uniform scaling about the X, Y, and Z axes."], "extent": [5010, 5067]}], "container": true, "attrs": {"id": "scale"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 4, "text": [" Pivot "], "extent": [5067, 5085], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Pivot Translate"], "extent": [5105, 5130], "body": [{"type": "para", "indent": 12, "text": ["The pivot translation along the X, Y, and Z axes."], "extent": [5130, 5193]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Pivot Rotate"], "extent": [5193, 5215], "body": [{"type": "para", "indent": 12, "text": ["The pivot rotation about the X, Y, and Z axes."], "extent": [5215, 5275]}], "container": true, "role": "item"}], "container": true}], "container": true, "attrs": {"id": "pivot"}}], "container": true}], "container": true}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [9752, 9760], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Target Skeleton"], "extent": [9760, 9778], "body": [{"type": "para", "indent": 4, "text": ["In a typical retargeting workflow, the skeleton that the animation is transferred onto."], "extent": [9778, 9871]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Source Skeleton"], "extent": [9871, 9888], "body": [{"type": "para", "indent": 4, "text": ["In a typical retargeting workflow, the animated skeleton whose motion to transfer to the skeleton on the first input."], "extent": [9888, 10011]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [10011, 10020], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Target Skeleton"], "extent": [10020, 10038], "body": [{"type": "para", "indent": 4, "text": ["The skeleton on the first input with the pose stored. The output pose depends on the setting in the first input."], "extent": [10038, 10156]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Source Skeleton"], "extent": [10156, 10173], "body": [{"type": "para", "indent": 4, "text": ["The skeleton on the second input with the pose stored. The output pose depends on the setting in the second input."], "extent": [10173, 10293]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [10293, 10302], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--computerigpose", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--computerigpose.html"}], "extent": [10302, 10338]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--rigpose", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--rigpose.html"}], "extent": [10338, 10367]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--mappoints", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--mappoints.html"}], "extent": [10367, 10398]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--fullbodyik", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--fullbodyik.html"}], "extent": [10398, 10430]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--fktransfer", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--fktransfer.html"}], "extent": [10430, 10462]}], "container": true}], "text": "Related"}], "title": ["Rig Match Pose"], "summary": ["Conforms the rest poses of two skeletons in preparation for retargeting."], "included": ["/nodes/sop/_kinefx_common"]}