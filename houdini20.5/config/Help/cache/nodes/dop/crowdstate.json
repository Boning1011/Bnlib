{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "crowdstate", "icon": "CROWDS/state", "tags": "crowds", "version": "3.0", "since": "15.5", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Crowd State"], "extent": [110, 126]}, {"type": "summary", "indent": 0, "text": ["Defines a Crowd State"], "extent": [126, 156]}, {"type": "para", "indent": 0, "text": ["Crowd State defines the current ", {"scheme": null, "value": "/crowds/states", "type": "link", "text": ["agent state"], "fullpath": "/crowds/states.html"}, ". By default, the node/state name is used for the clip animation that is played while the agent is in that state. The clip name can be overridden, which allows for sharing of animation clips between states. This node also sets animation parameters for the clips that it uses (retiming of the clips is based on those values)."], "extent": [156, 542]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [542, 554], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["State Name"], "extent": [554, 567], "body": [{"type": "para", "indent": 4, "text": ["A name for this crowd state, for example, ", {"type": "code", "text": ["walking"]}, " or ", {"type": "code", "text": ["attacking"]}, ". The default (", {"type": "code", "text": ["$OS"]}, ") uses the node name as the state name. This value is used, for example, to show the current state in a readout, or to let you choose a state from a list."], "extent": [567, 813]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["RBD Ragdoll"], "extent": [813, 826], "body": [{"type": "para", "indent": 4, "text": ["Specifies whether agents are simulated ", {"type": "q", "text": ["ragdoll"]}, " in this state."], "extent": [826, 899]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Active"], "extent": [899, 911], "body": [{"type": "para", "indent": 8, "text": ["The Bullet solver simulates the agents as active RBD objects (ragdolls). You can use the ", {"type": "ui", "text": ["Partial Ragdoll"]}, " controls to simulate part of the character as ragdoll, and have part of the character follow an animation clip."], "extent": [911, 1141]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Animated Static"], "extent": [1141, 1162], "body": [{"type": "para", "indent": 8, "text": ["The Bullet solver treats the agents as animated static objects, meaning the agent will affect rigid bodies (for example, other objects will bounce off the agent), but simulated objects will not affect the agent."], "extent": [1162, 1383]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Ignore"], "extent": [1383, 1395], "body": [{"type": "para", "indent": 8, "text": ["The Bullet solver ignores the agents and no RBD objects will collide against them."], "extent": [1395, 1488]}], "container": true}], "container": true}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Stiffness "], "extent": [1488, 1506], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Stiffness (section)"], "extent": [1506, 1532], "body": [{"type": "para", "indent": 8, "text": ["When turned on, stiffness adds a certain resistance to the solver\u2019s attempts to move joints from their current orientation to the ", {"type": "q", "text": ["target"]}, " (animated or simulated) orientation."], "extent": [1574, 1759]}], "container": true, "attrs": {"id": "ragdoll_enablestiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Group"], "extent": [1759, 1770], "body": [{"type": "para", "indent": 8, "text": ["A ", {"scheme": null, "value": "/crowds/ragdoll#joint_groups", "type": "link", "text": ["named transform group"], "fullpath": "/crowds/ragdoll.html#joint_groups", "fragment": "#joint_groups"}, " specifying the joints that should become stiff. You can create joint groups in the agent setup network with the ", {"scheme": "Node", "value": "/nodes/sop/agenttransformgroup", "type": "link", "text": ["Agent Transform Group SOP"], "fullpath": "/nodes/sop/agenttransformgroup.html"}, "."], "extent": [1811, 2045]}], "container": true, "attrs": {"id": "ragdoll_stiffnessgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Stiffness Value"], "extent": [2045, 2066], "body": [{"type": "para", "indent": 8, "text": ["When set to ", {"type": "ui", "text": ["Constant"]}, ", the stiffness is the same for the duration of the state. When set to ", {"type": "ui", "text": ["Ramp"]}, ", you can change the stiffness on a ramp based on how long the agent has been in this state. "], "extent": [2107, 2313]}], "container": true, "attrs": {"id": "ragdoll_stiffnessvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Stiffness"], "extent": [2313, 2328], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Stiffness Value"]}, " is set to ", {"type": "ui", "text": ["Constant"]}, ", this specifies how much to resist changes to the current joint rotations. A value between ", {"type": "code", "text": ["0.2"]}, " (the default) and ", {"type": "code", "text": ["0.5"]}, " read as ", {"type": "q", "text": ["stiff but not too stiff"]}, ". Values of ", {"type": "code", "text": ["1"]}, " or more will be very stiff."], "extent": [2364, 2619]}], "container": true, "attrs": {"id": "ragdoll_stiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Time Range"], "extent": [2619, 2635], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Stiffness Value"]}, " is set to ", {"type": "ui", "text": ["Ramp"]}, ", this is the start and end times (in seconds) corresponding to the start and end of the ramp. For example, if you set ", {"type": "ui", "text": ["Time Range"]}, " to ", {"type": "code", "text": ["0.0"]}, " and ", {"type": "code", "text": ["5.0"]}, ", the ramp lets you control the stiffness over the first 5 seconds the agent is in this state. Outside this range, the ramp extends the first and last values."], "extent": [2680, 3043]}], "container": true, "attrs": {"id": "ragdoll_stiffnessramprange"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Stiffness Scale"], "extent": [3043, 3064], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Stiffness Value"]}, " is set to ", {"type": "ui", "text": ["Ramp"]}, ", this is a scale on the value of the ", {"type": "ui", "text": ["Stiffness Ramp"]}, "."], "extent": [3105, 3215]}], "container": true, "attrs": {"id": "ragdoll_stiffnessscale"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Stiffness Ramp"], "extent": [3215, 3235], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Stiffness Value"]}, " is set to ", {"type": "ui", "text": ["Ramp"]}, ", this sets the stiffness at each point in the ", {"type": "ui", "text": ["Time Range"]}, ". Outside this range, the ramp extends the first and last values."], "extent": [3275, 3454]}], "container": true, "attrs": {"id": "ragdoll_stiffnessramp"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Constraint Force Mixing"], "extent": [3454, 3483], "body": [{"type": "para", "indent": 8, "text": ["Increasing this value makes the motor component of the constraint softer.\n        A small positive value can increase the stability of the simulation."], "extent": [8770, 8930]}], "container": true, "attrs": {"id": "ragdoll_stiffnesscfm"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 3, "type": "sep", "indent": 0, "text": [" Partial Ragdoll "], "extent": [3579, 3603], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Partial Ragdoll"], "extent": [3603, 3625], "body": [{"type": "para", "indent": 8, "text": ["When turned on, makes some joints on the agent become simulated (ragdoll), while others parts of the agent follow an animation clip. For example, you can have the lower body animated by a walking clip, but the upper body can be a ragdoll and react to hits from simulated objects."], "extent": [3625, 3914]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Active Group"], "extent": [3914, 3932], "body": [{"type": "para", "indent": 8, "text": ["A ", {"scheme": null, "value": "/crowds/ragdoll#joint_groups", "type": "link", "text": ["named transform group"], "fullpath": "/crowds/ragdoll.html#joint_groups", "fragment": "#joint_groups"}, " specifying the joints you want to be simulated (ragdoll). Joints that are not in this group will follow the animation clip specified in ", {"type": "ui", "text": ["Clip Name"]}, ". You can create joint groups in the agent setup network with the ", {"scheme": "Node", "value": "/nodes/sop/agenttransformgroup", "type": "link", "text": ["Agent Transform Group SOP"], "fullpath": "/nodes/sop/agenttransformgroup.html"}, "."], "extent": [3970, 4307]}], "container": true, "attrs": {"id": "ragdoll_activegroup"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 3, "type": "sep", "indent": 0, "text": [" Motors "], "extent": [4307, 4322], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Motors"], "extent": [4322, 4335], "body": [{"type": "para", "indent": 8, "text": ["When turned on, spends a certain amount of effort to make joints follow the animation clip. However, the joints are still simulated, and simulated forces can modify or overcome the motor effect."], "extent": [4335, 4539]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Group"], "extent": [4539, 4550], "body": [{"type": "para", "indent": 8, "text": ["A ", {"scheme": null, "value": "/crowds/ragdoll#joint_groups", "type": "link", "text": ["named transform group"], "fullpath": "/crowds/ragdoll.html#joint_groups", "fragment": "#joint_groups"}, " specifying the joints that should be (partially) animated by the clip. You can create joint groups in the agent setup network with the ", {"scheme": "Node", "value": "/nodes/sop/agenttransformgroup", "type": "link", "text": ["Agent Transform Group SOP"], "fullpath": "/nodes/sop/agenttransformgroup.html"}, "."], "extent": [4587, 4844]}], "container": true, "attrs": {"id": "ragdoll_motorgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Strength Value"], "extent": [4844, 4864], "body": [{"type": "para", "indent": 8, "text": ["When set to ", {"type": "ui", "text": ["Constant"]}, ", the motor strength is the same for the duration of the state. When set to ", {"type": "ui", "text": ["Ramp"]}, ", you can change the motor strength on a ramp based on how long the agent has been in this state."], "extent": [4864, 5079]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Motor Strength"], "extent": [5079, 5099], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Strength Value"]}, " is set to ", {"type": "ui", "text": ["Constant"]}, ", this is the amount of effort to make the joints follow the clip. The default value of ", {"type": "code", "text": ["10"]}, " is enough to overcome gravity, but still allow collisions to overcome the motor. You can play with increasing or decreasing this value to get the effect you want."], "extent": [5099, 5410]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Time Range"], "extent": [5410, 5426], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Strength Value"]}, " is set to ", {"type": "ui", "text": ["Ramp"]}, ", this is the start and end times (in seconds) corresponding to the start and end of the ramp. For example, if you set ", {"type": "ui", "text": ["Time Range"]}, " to ", {"type": "code", "text": ["0.0"]}, " and ", {"type": "code", "text": ["5.0"]}, ", the ramp lets you control the motor strength over the first 5 seconds the agent is in this state. Outside this range, the ramp extends the first and last values."], "extent": [5426, 5793]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Strength Scale"], "extent": [5793, 5813], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Strength Value"]}, " is set to ", {"type": "ui", "text": ["Ramp"]}, ", this is a scale on the value of the ", {"type": "ui", "text": ["Strength Ramp"]}, "."], "extent": [5813, 5921]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Strength Ramp"], "extent": [5921, 5940], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Strength Value"]}, " is set to ", {"type": "ui", "text": ["Ramp"]}, ", this sets the motor strength at each point in the ", {"type": "ui", "text": ["Time Range"]}, ". Outside this range, the ramp extends the first and last values."], "extent": [5940, 6123]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Correction Time"], "extent": [6123, 6144], "body": [{"type": "para", "indent": 8, "text": ["The length of time (in seconds) it takes the solver to correct deviations from the target joint rotations (such as after a collision). Lower values make the agent ", {"type": "q", "text": ["recover"]}, " from impacts quickly, while higher values make impacts affect the agent for longer."], "extent": [6144, 6410]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Constraint Force Mixing"], "extent": [6410, 6439], "body": [{"type": "para", "indent": 8, "text": ["Increasing this value makes the motor component of the constraint softer.\n        A small positive value can increase the stability of the simulation."], "extent": [8770, 8930]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 3, "type": "sep", "indent": 0, "text": [" Sticky Collisions "], "extent": [6496, 6522], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Group"], "extent": [6522, 6534], "body": [{"type": "para", "indent": 8, "text": ["A ", {"scheme": null, "value": "/crowds/ragdoll#joint_groups", "type": "link", "text": ["named transform group"], "fullpath": "/crowds/ragdoll.html#joint_groups", "fragment": "#joint_groups"}, " specifying the joints that the sticky collision settings should apply to. You can create joint groups in the agent setup network with the ", {"scheme": "Node", "value": "/nodes/sop/agenttransformgroup", "type": "link", "text": ["Agent Transform Group SOP"], "fullpath": "/nodes/sop/agenttransformgroup.html"}, "."], "extent": [6577, 6837]}], "container": true, "attrs": {"id": "ragdoll_stickycollisiongroup"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Min Collision Impulse"], "extent": [6837, 6864], "body": [{"type": "para", "indent": 8, "text": ["The minimum impulse from a collision that will cause this object to stick to another object. This value must be greater or equal to 0 for the objects to stick."], "extent": [6804, 6973]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Max Collision Objects per Shape"], "extent": [6934, 6971], "body": [{"type": "para", "indent": 8, "text": ["The maximum number of other objects that this object can be stuck to.\n        A value less than or equal to 0 allows this object to be stuck to any number of other objects."], "extent": [7046, 7228]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Max Collision Points"], "extent": [7041, 7067], "body": [{"type": "para", "indent": 8, "text": ["The maximum number of anchor points (constraints) that can be used to stick this object to another object."], "extent": [7299, 7415]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Collision Ignore"], "extent": [7136, 7158], "body": [{"type": "para", "indent": 8, "text": ["Sticky collisions will not occur when colliding with any objects that match this pattern.\n        The pattern uses the same syntax as the ", {"type": "code", "text": ["collisionignore"]}, " attribute."], "extent": [7479, 7655]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 3, "type": "sep", "indent": 0, "text": [" Animation clip controls "], "extent": [7225, 7257]}, {"type": "para", "indent": 0, "text": ["These controls are available when ", {"type": "ui", "text": ["RBD Ragdoll"]}, " is set to ", {"type": "ui", "text": ["Ignore"]}, " or ", {"type": "ui", "text": ["Animated Static"]}, ". They are also available for ragdolls (", {"type": "ui", "text": ["RBD Ragdoll"]}, " set to ", {"type": "ui", "text": ["Active"]}, ") when ", {"type": "ui", "text": ["Partial Ragdoll"]}, " or ", {"type": "ui", "text": ["Motors"]}, " is turned on, allowing you to set the animation clip that controls the animated joints."], "extent": [7257, 7554]}, {"level": 3, "type": "sep", "indent": 0, "text": [" Clips "], "extent": [7554, 7568], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Clip Assignment"], "extent": [7568, 7590], "body": [{"type": "para", "indent": 8, "text": ["Specifies whether a particular clip or random distribution of clips should be assigned to the agent when it enters this state.\n        The clip assignment can occur at the beginning of the simulation (if ", {"type": "ui", "text": ["Set Initial Clip Name"]}, " is turned on), or when a ", {"scheme": "Node", "value": "/nodes/dop/crowdtransition", "type": "link", "text": ["transition"], "fullpath": "/nodes/dop/crowdtransition.html"}, " to a new state occurs.\n        If no clips are assigned, the agent\u2019s current clip is preserved when entering this state."], "extent": [7590, 8013]}, {"type": "para", "indent": 8, "text": ["The clip can also be explicitly changed using the ", {"type": "ui", "text": ["Output Clip"]}, " parameter on the ", {"scheme": "Node", "value": "/nodes/dop/crowdtransition", "type": "link", "text": ["Crowd Transition DOP"], "fullpath": "/nodes/dop/crowdtransition.html"}, "."], "extent": [8013, 8154]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Clip Name"], "extent": [8154, 8169], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Clip Assignment"]}, " is set to ", {"type": "ui", "text": ["Single Clip"]}, ", this is the name of the animation clip to play in the current state."], "extent": [8169, 8299]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Random Seed"], "extent": [8299, 8316], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Clip Assignment"]}, " is set to ", {"type": "ui", "text": ["Random Distribution"]}, ", this seed is used when randomly selecting clips."], "extent": [8349, 8467]}], "container": true, "attrs": {"id": "randomclipseed"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Clip Groups"], "extent": [8467, 8484], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Clip Assignment"]}, " is set to ", {"type": "ui", "text": ["Random Distribution"]}, ", this is the number of groups of clips in the custom distribution."], "extent": [8516, 8651]}], "container": true, "attrs": {"id": "numclipgroups"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Clip Names"], "extent": [8651, 8667], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Clip Assignment"]}, " is set to ", {"type": "ui", "text": ["Random Distribution"]}, ", this is a string pattern that specifies one or more clip names.\n        The pattern follows the same syntax as the ", {"scheme": "Vex", "value": "/vex/functions/match", "type": "link", "text": ["match"], "fallback_text": "match()", "fullpath": "/vex/functions/match.html"}, " VEX function.\n        The ", {"type": "ui", "text": ["Weight"]}, " value for the group is divided evenly between the matching clips."], "extent": [8697, 9002]}], "container": true, "attrs": {"id": "clippattern"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Weight"], "extent": [9002, 9014], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Clip Assignment"]}, " is set to ", {"type": "ui", "text": ["Random Distribution"]}, ", this specifies how likely the clips are to be selected."], "extent": [9050, 9175]}], "container": true, "attrs": {"id": "clippatternweight"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Set Initial Clip Name"], "extent": [9175, 9202], "body": [{"type": "para", "indent": 8, "text": ["When turned on, overrides the agent\u2019s initial clip using the ", {"type": "ui", "text": ["Clip Assignment"]}, " parameter."], "extent": [9202, 9303]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Initial Clip Time"], "extent": [9303, 9326], "body": [{"type": "para", "indent": 8, "text": ["When turned on, sets the initial clip time (in seconds) for all agents in this state."], "extent": [9356, 9451]}], "container": true, "attrs": {"id": "initialcliptime"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Random Clip Offset"], "extent": [9451, 9475], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Initial Clip Time"]}, " is turned on, this randomly shifts the initial clip time forward for each agent by up to the specified number of seconds."], "extent": [9506, 9664]}], "container": true, "attrs": {"id": "randomclipoffset"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Random Seed"], "extent": [9664, 9681], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Random Clip Offset"]}, " is turned on, this seed is used when randomly varying clip times."], "extent": [9716, 9819]}], "container": true, "attrs": {"id": "randomclipoffsetseed"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Apply Locomotion Orientation"], "extent": [9819, 9853], "body": [{"type": "para", "indent": 8, "text": ["When the Clip Playback ", {"type": "ui", "text": ["Type"]}, " is set to ", {"type": "ui", "text": ["Locomotive"]}, ", this specifies whether the agent should be rotated according to the clip\u2019s locomotion data when ", {"type": "ui", "text": ["Set Initial Clip Time"]}, " is turned on."], "extent": [9853, 10056]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 3, "type": "sep", "indent": 0, "text": [" Clip Playback "], "extent": [10056, 10078], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Type"], "extent": [10078, 10089], "body": [{"type": "para", "indent": 8, "text": ["The type of animation used for the state."], "extent": [10089, 10140]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["In-Place"], "extent": [10140, 10158], "body": [{"type": "para", "indent": 12, "text": ["The animation is stationary, and the agent\u2019s movement is entirely driven by its particle."], "extent": [10158, 10261]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Locomotive"], "extent": [10261, 10281], "body": [{"type": "para", "indent": 12, "text": ["The source animation moves in world space, and the agent\u2019s movement is guided by the clip\u2019s locomotion data.\n            When baking the animation clip, the ", {"type": "ui", "text": ["Convert to In-Place Animation"]}, " parameter on the ", {"scheme": "Node", "value": "/nodes/out/agent", "type": "link", "text": ["Agent ROP"], "fullpath": "/nodes/out/agent.html"}, " or ", {"scheme": "Node", "value": "/nodes/sop/agent", "type": "link", "text": ["Agent SOP"], "fullpath": "/nodes/sop/agent.html"}, " should be turned on."], "extent": [10281, 10580]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Clip Speed Multiplier"], "extent": [10580, 10607], "body": [{"type": "para", "indent": 8, "text": ["A multiplier for how fast the animation clip is played back."], "extent": [10645, 10715]}], "container": true, "attrs": {"id": "clipspeedmultiplier"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Locomotion Speed Multiplier"], "extent": [10715, 10748], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Type"]}, " is set to ", {"type": "ui", "text": ["Locomotive"]}, ", this is a multiplier for how fast the locomotion channel of the animation clip is played back."], "extent": [10787, 10931]}], "container": true, "attrs": {"id": "locomotionspeedmultiplier"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Variance (%)"], "extent": [10931, 10949], "body": [{"type": "para", "indent": 8, "text": ["The percentage that the ", {"type": "ui", "text": ["Clip Speed Multiplier"]}, " can be randomly increased or decreased by.\n        For example, if the ", {"type": "ui", "text": ["Clip Speed Multiplier"]}, " is 0.7 and the ", {"type": "ui", "text": ["Variance"]}, " is 10%, the agents' clip speed multipliers will be random values between 0.63 and 0.77."], "extent": [10980, 11252]}], "container": true, "attrs": {"id": "clipspeedvariance"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Random Seed"], "extent": [11252, 11269], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Variance"]}, " is turned on, this seed is used when randomly varying clip speeds."], "extent": [11296, 11390]}], "container": true, "attrs": {"id": "clipspeedseed"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Last Frame Matches First Frame"], "extent": [11390, 11426], "body": [{"type": "para", "indent": 8, "text": ["This parameter is available when ", {"type": "ui", "text": ["Type"]}, " is set to ", {"type": "ui", "text": ["Locomotive"]}, ". For locomotive clips that are designed for looping, a common workflow is to have an extra frame at the end of the clip that matches the first frame\u2019s pose.\n        The final frame of the clip is used by the ", {"scheme": "Node", "value": "/nodes/dop/crowdsolver", "type": "link", "text": ["crowd solver"], "fullpath": "/nodes/dop/crowdsolver.html"}, " to determine the correct locomotive motion when moving from the final pose back to the initial pose.\n        The final frame is skipped when advancing the clip time to avoid having the same pose for two consecutive frames or having the agent suddenly jump backwards."], "extent": [11426, 12013]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Enable Looping"], "extent": [12013, 12033], "body": [{"type": "para", "indent": 8, "text": ["When turned on, the clip playback continues looping after reaching the end of the clip\u2019s loop range.\n        This can be overridden per clip using the ", {"scheme": "Node", "value": "/nodes/sop/agentclipproperties", "type": "link", "text": ["clip properties"], "fullpath": "/nodes/sop/agentclipproperties.html"}, "."], "extent": [12033, 12241]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Retime Clip to Match Particle Speed"], "extent": [12241, 12282], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["RBD Ragdoll"]}, " is set to ", {"type": "ui", "text": ["Animated Static"]}, " or ", {"type": "ui", "text": ["Ignore"]}, ", and ", {"type": "ui", "text": ["Type"]}, " is set to ", {"type": "ui", "text": ["In-Place"]}, ", turning this on adjusts the clip\u2019s playback speed based on the ", {"type": "ui", "text": ["Gait Speed"]}, " and the particle\u2019s velocity."], "extent": [12282, 12501]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Gait Speed"], "extent": [12501, 12517], "body": [{"type": "para", "indent": 8, "text": ["Specifies how fast the agent is moving in the in-place animation. "], "extent": [12540, 12616]}, {"type": "para", "indent": 8, "text": ["This parameter is available when ", {"type": "ui", "text": ["RBD Ragdoll"]}, " is set to ", {"type": "ui", "text": ["Animated Static"]}, " or ", {"type": "ui", "text": ["Ignore"]}, ", ", {"type": "ui", "text": ["Type"]}, " is set to ", {"type": "ui", "text": ["In-Place"]}, ", and ", {"type": "ui", "text": ["Retime Clip to Match Particle Speed"]}, " is turned on."], "extent": [12616, 12810]}], "container": true, "attrs": {"id": "gaitspeed"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Allowed Variance (%)"], "extent": [12810, 12836], "body": [{"type": "para", "indent": 8, "text": ["Specifies how much the clip is allowed to be retimed by. "], "extent": [12836, 12903]}, {"type": "para", "indent": 8, "text": ["This parameter is available when ", {"type": "ui", "text": ["RBD Ragdoll"]}, " is set to ", {"type": "ui", "text": ["Animated Static"]}, " or ", {"type": "ui", "text": ["Ignore"]}, ", ", {"type": "ui", "text": ["Type"]}, " is set to ", {"type": "ui", "text": ["In-Place"]}, ", and ", {"type": "ui", "text": ["Retime Clip to Match Particle Speed"]}, " is turned on."], "extent": [12903, 13097]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Limit Particle Speed to Gait Speed Range"], "extent": [13097, 13143], "body": [{"type": "para", "indent": 8, "text": ["When turned on, forces the particle speed to fall within the range specified by ", {"type": "ui", "text": ["Gait Speed"]}, " and ", {"type": "ui", "text": ["Allowed Variance"]}, ". "], "extent": [13143, 13274]}, {"type": "para", "indent": 8, "text": ["This parameter is available when ", {"type": "ui", "text": ["RBD Ragdoll"]}, " is set to ", {"type": "ui", "text": ["Animated Static"]}, " or ", {"type": "ui", "text": ["Ignore"]}, ", ", {"type": "ui", "text": ["Type"]}, " is set to ", {"type": "ui", "text": ["In-Place"]}, ", and ", {"type": "ui", "text": ["Retime Clip to Match Particle Speed"]}, " is turned on."], "extent": [13274, 13468]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Use VEXpressions"], "extent": [13468, 13490], "body": [{"type": "para", "indent": 8, "text": ["When turned on, uses a local expression to override the ", {"type": "ui", "text": ["Clip Speed Multiplier"]}, " and ", {"type": "ui", "text": ["Variance"]}, " for each agent. Select ", {"type": "ui", "text": ["Pass Through"]}, " from the drop-down menu on the right to see the variables that you can modify."], "extent": [13490, 13718]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "container": true}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [13718, 13727], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/dop/crowdsolver", "type": "link", "text": "", "fullpath": "/nodes/dop/crowdsolver.html"}], "extent": [13727, 13752]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/dop/crowdtransition", "type": "link", "text": "", "fullpath": "/nodes/dop/crowdtransition.html"}], "extent": [13752, 13781]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/dop/crowdtrigger", "type": "link", "text": "", "fullpath": "/nodes/dop/crowdtrigger.html"}], "extent": [13781, 13807]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/dop/crowdtriggerlogic", "type": "link", "text": "", "fullpath": "/nodes/dop/crowdtriggerlogic.html"}], "extent": [13807, 13838]}], "container": true}], "text": "Related"}], "title": ["Crowd State"], "summary": ["Defines a Crowd State"], "included": ["/destruction/sop_sim", "/nodes/dop/conetwistconrel", "/nodes/dop/rbdpackedobject", "/nodes/dop/standard_bulletconstraint_parm", "/nodes/dop/standard_bulletdata_common", "/nodes/dop/standard_bulletdata_parm", "/nodes/dop/standard_conetwistconrelguide_parms", "/nodes/dop/standard_data_idparms", "/nodes/dop/standard_data_inputs", "/nodes/dop/standard_data_locals", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_data_parms", "/nodes/dop/standard_dataactive_parms", "/nodes/dop/standard_datagroup_parms", "/nodes/dop/standard_dataname_parms", "/nodes/dop/standard_dataop_parms", "/nodes/dop/standard_datashare_parms", "/nodes/dop/standard_locals", "/nodes/dop/standard_physparms", "/nodes/sop/rbdconfigure"]}