{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "popsteerseek", "icon": "CROWDS/popsteerseek", "tags": "crowds behavior", "since": "14.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["POP Steer Seek"], "extent": [0, 19]}, {"type": "summary", "indent": 0, "text": ["Applies force to agents/particles to move them toward a target position."], "extent": [134, 214]}, {"type": "para", "indent": 0, "text": ["This is a ", {"scheme": null, "value": "/crowds/states", "type": "link", "text": ["crowd behavior"], "fullpath": "/crowds/states.html"}, " node, but you can also use it on regular particles (see the ", {"type": "ui", "text": ["Output attribute"]}, " parameter)."], "extent": [214, 350]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [350, 355], "body": [{"type": "para", "indent": 4, "text": ["To make agents chase the nearest goal: Use the ", {"scheme": "Node", "value": "/nodes/sop/attribtransfer", "type": "link", "text": ["Attribute Transfer geometry node"], "fullpath": "/nodes/sop/attribtransfer.html"}, " to set up attributes on the goal points that contain the particle ID of the closest agent. Then set ", {"type": "ui", "text": ["Match method"]}, " to ", {"type": "q", "text": ["Point per particle"]}, " and set ", {"type": "ui", "text": ["Goal ID"]}, " to the attribute you created with Attribute Transfer."], "extent": [355, 681]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [681, 693], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Activation"], "extent": [16, 28], "body": [{"type": "para", "indent": 4, "text": ["When this is off, the node will have no effect. You can animate this to turn the behavior on or off at different times."], "extent": [51, 180]}], "container": true, "attrs": {"id": "activate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [180, 187], "body": [{"type": "para", "indent": 4, "text": ["Only modify a certain group or groups out of all agents/particles. You can name groups of agents using the ", {"type": "ui", "text": ["Group Name"]}, " parameter on the ", {"scheme": "Node", "value": "/nodes/sop/crowdsource", "type": "link", "text": ["Crowd Source"], "fullpath": "/nodes/sop/crowdsource.html"}, " geometry node."], "extent": [211, 410]}], "container": true, "attrs": {"id": "partgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Attribute"], "extent": [410, 428], "body": [{"type": "para", "indent": 4, "text": ["If you are working with agents, set this parameter to ", {"type": "ui", "text": ["Crowds steerforce"]}, ". If you are working with particles, set this parameter to ", {"type": "ui", "text": ["POP force"]}, "."], "extent": [449, 607]}, {"type": "para", "indent": 4, "text": ["Controls whether the node modifies the agent\u2019s ", {"type": "code", "text": ["steerforce"]}, " attribute (used by the ", {"scheme": "Node", "value": "/nodes/dop/crowdsolver", "type": "link", "text": ["crowd solver"], "fullpath": "/nodes/dop/crowdsolver.html"}, ") or the particle\u2019s ", {"type": "code", "text": ["force"]}, " attribute (used by the ", {"scheme": "Node", "value": "/nodes/dop/popsolver", "type": "link", "text": ["POP solver"], "fullpath": "/nodes/dop/popsolver.html"}, ")."], "extent": [607, 819]}], "container": true, "attrs": {"id": "output"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Weight"], "extent": [819, 827], "body": [{"type": "para", "indent": 4, "text": ["Available when ", {"type": "ui", "text": ["Output Attribute"]}, " is set to ", {"type": "ui", "text": ["Crowd steerforce"]}, ". This number is used by the ", {"scheme": "Node", "value": "/nodes/dop/crowdsolver", "type": "link", "text": ["crowd solver"], "fullpath": "/nodes/dop/crowdsolver.html"}, " to normalize and scale multiple forces that apply to an agent."], "extent": [848, 1046]}], "container": true, "attrs": {"id": "weight"}, "role": "item"}], "container": true}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Goal"], "extent": [723, 734], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Attraction Type"], "extent": [734, 752], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Position"], "extent": [752, 766], "body": [{"type": "para", "indent": 8, "text": ["Enter a set of ", {"type": "q", "text": ["goal"]}, " coordinates for agents to move toward."], "extent": [766, 840]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Particles"], "extent": [840, 855], "body": [{"type": "para", "indent": 8, "text": ["Specify a group of dynamics particles. Agents will move toward particles in that group."], "extent": [855, 952]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Points"], "extent": [952, 964], "body": [{"type": "para", "indent": 8, "text": ["Specify point geometry. Agents will move toward the those points."], "extent": [964, 1043]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Surface Points"], "extent": [1043, 1063], "body": [{"type": "para", "indent": 8, "text": ["Specify surface geometry and UVW coordinates on that surface for the agents to move toward."], "extent": [1063, 1164]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Goal"], "extent": [1164, 1170], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Attraction type"]}, " is ", {"type": "q", "text": ["Position"]}, ", the 3D position agents should move toward."], "extent": [1170, 1262]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Group"], "extent": [1262, 1275], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Attraction type"]}, " is ", {"type": "q", "text": ["Particles"]}, ", the name of a group of dynamics particles to use. Leave this blank to use all particles in the system."], "extent": [1275, 1424]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["SOP Path"], "extent": [1424, 1434], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Attraction type"]}, " is ", {"type": "q", "text": ["Points"]}, ", the path to an object or geometry node containing the point geometry (for example, ", {"type": "code", "text": ["/obj/bird_locations"]}, ")."], "extent": [1434, 1584]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Group"], "extent": [1584, 1597], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Attraction type"]}, " is ", {"type": "q", "text": ["Points"]}, ", the name of a group of points within the geometry to use. Leave this blank to use all points."], "extent": [1597, 1734]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Match Method"], "extent": [1734, 1748], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Attraction type"]}, " is ", {"type": "q", "text": ["Particles"]}, " or ", {"type": "q", "text": ["Points"]}, ", whether agents should move toward individual points or the ", {"type": "em", "text": ["average location"]}, " of all points."], "extent": [1748, 1903]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Average position"], "extent": [1903, 1925], "body": [{"type": "para", "indent": 8, "text": ["Move agents toward the average position of all goal points. (You can also specify a number of clusters to get multiple goal ", {"type": "q", "text": ["averages"]}, ".)"], "extent": [1925, 2075]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Point per particle"], "extent": [2075, 2099], "body": [{"type": "para", "indent": 8, "text": ["Match up agents/particles with goal points based on the value of attributes on each. For example, if ", {"type": "ui", "text": ["Particle ID"]}, " is ", {"type": "code", "text": ["foo"]}, " and ", {"type": "ui", "text": ["Goal ID"]}, " is ", {"type": "code", "text": ["bar"]}, ", then agents/particles will follow whichever goal point has the same value in the ", {"type": "code", "text": ["bar"]}, " attribute as the agent/particle has in the ", {"type": "code", "text": ["foo"]}, " attribute."], "extent": [2099, 2407]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Number of Clusters"], "extent": [2407, 2427], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Match method"]}, " is ", {"type": "q", "text": ["Average position"]}, ", group the goal points into this many clusters. Agents will move toward the centroid of the nearest cluster."], "extent": [2427, 2585]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Particle ID"], "extent": [2585, 2598], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Match method"]}, " is ", {"type": "q", "text": ["Point per particle"]}, ", the name of the attribute on the agent/particle to match up with a goal."], "extent": [2598, 2723]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Goal ID"], "extent": [2723, 2732], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Match method"]}, " is ", {"type": "q", "text": ["Point per particle"]}, ", the name of the attribute on the goal to match up with the agent/particle."], "extent": [2732, 2859]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Force"], "extent": [2859, 2871], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Force Scale"], "extent": [2871, 2889], "body": [{"type": "para", "indent": 8, "text": ["How much force to apply toward the agent\u2019s goal point."], "extent": [2889, 2957]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Maximum Distance"], "extent": [2957, 2975], "body": [{"type": "para", "indent": 8, "text": ["Maximum distance (in meters) to look for goal."], "extent": [2975, 3031]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Arrival"], "extent": [3031, 3040], "body": [{"type": "para", "indent": 8, "text": ["Stop the agents/particles once they are near the goal position."], "extent": [3040, 3113]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Braking Distance"], "extent": [3113, 3131], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Arrival"]}, " is on, the distance (in meters) at which agents/particles start to slow down."], "extent": [3131, 3239]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Braking Scale"], "extent": [3239, 3254], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Arrival"]}, " is on, how fast the agents/particles slow down once they reach their goal."], "extent": [3254, 3355]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pursuit"], "extent": [3355, 3364], "body": [{"type": "para", "indent": 8, "text": ["Agents/particles chase the goal by anticipating where it will be."], "extent": [3364, 3443]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Prediction Factor"], "extent": [3443, 3462], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Pursuit"]}, " is on, how many time steps to look ahead when predicting the course of the goal."], "extent": [3462, 3569]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3569, 3578], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": null, "value": "/crowds/", "type": "link", "text": "", "fullpath": "/crowds/index.html"}], "extent": [3578, 3592]}], "container": true}], "text": "Related"}], "title": ["POP Steer Seek"], "summary": ["Applies force to agents/particles to move them toward a target position."], "included": ["/nodes/dop/crowd_steer_parms"]}