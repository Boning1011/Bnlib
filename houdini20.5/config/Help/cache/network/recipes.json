{"type": "root", "attrs": {}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Recipes: saving and recreating node and parameter presets"], "extent": [0, 62]}, {"type": "summary", "indent": 0, "text": ["How to save parameter settings and groups of nodes so you can recreate them when needed."], "extent": [62, 160]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [160, 175], "body": [{"type": "para", "indent": 0, "text": ["Houdini lets you save a set of parameter values, or a set of network items (nodes, dots, sticky notes, boxes), as a named ", {"type": "em", "text": ["recipe"]}, ". You can then apply those parameter values, or recreate those nodes, whenever you want."], "extent": [175, 396]}, {"type": "para", "indent": 0, "text": ["You can create three types of recipes: ", {"scheme": null, "value": "#parm_preset", "type": "link", "text": ["parameter presets"], "fullpath": "/network/recipes.html#parm_preset", "fragment": "#parm_preset"}, ", ", {"scheme": null, "value": "#tool", "type": "link", "text": ["tools"], "fullpath": "/network/recipes.html#tool", "fragment": "#tool"}, ", and ", {"scheme": null, "value": "#decoration", "type": "link", "text": ["decorations"], "fullpath": "/network/recipes.html#decoration", "fragment": "#decoration"}, "."], "extent": [396, 516]}, {"type": "para", "indent": 0, "text": ["Recipes are saved as assets, where the asset category is a special ", {"type": "code", "text": ["Data"]}, " category, not a regular node type category like ", {"type": "code", "text": ["Sop"]}, " or ", {"type": "code", "text": ["Lop"]}, "."], "extent": [516, 656]}]}, {"level": 2, "id": "parm_preset", "container": true, "type": "h", "indent": 0, "text": ["Saving node presets"], "extent": [656, 696], "body": [{"type": "para", "indent": 0, "text": ["You can save a set of parameter values and even spare parameters on a node as a recipe, and then apply those saved parameter values to other nodes. You can then apply the preset to an existing node when you want to set those values all at once."], "extent": [696, 943]}, {"type": "para", "indent": 0, "text": ["You can also optionally save the ", {"type": "em", "text": ["contents"]}, " of a node as part of the recipe. This might be useful, for example, to save the dive target contents of a ", {"scheme": "Node", "value": "/nodes/sop/pyrosolver", "type": "link", "text": ["Pyro Solver SOP"], "fullpath": "/nodes/sop/pyrosolver.html"}, " so that applying the recipe sets certain parameters on a node and also fills in the DOP network."], "extent": [943, 1229]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [1229, 1235], "body": [{"type": "para", "indent": 4, "text": ["This type of recipe is for ", {"type": "em", "text": ["changing"]}, " the parameter values and possibly the contents of an ", {"type": "em", "text": ["existing node"]}, ". If you just want a way to put down a certain type of node with certain parameter values and contents, use a [tool recipe|#tool instead (see below)."], "extent": [1235, 1496]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["When you save ", {"scheme": null, "value": "spare", "type": "link", "text": ["spare parameters"], "fullpath": "/network/spare.html"}, " as part of a preset, applying the preset will create those spare parameters on the target node if they don\u2019t already exist."], "extent": [1496, 1660]}, {"type": "task_group", "body": [{"ext": null, "type": "task", "indent": 0, "text": [" Save parameter values as a preset"], "role": "item", "extent": [1660, 1702], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["In the parameter editor, set up the parameters you want to save."], "extent": [1702, 1774]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["In the parameter editor, click the ", {"scheme": "Icon", "value": "BUTTONS/presets", "type": "link", "text": "", "fullpath": "/network/BUTTONS/presets.html"}, " Recipe menu and choose ", {"type": "ui", "text": ["Save Node Preset"]}, "."], "extent": [1774, 1884], "body": [{"type": "para", "indent": 8, "text": [{"type": "em", "text": ["or"]}], "extent": [1884, 1898]}, {"type": "para", "indent": 8, "text": ["In the network editor, right click the node and choose ", {"type": "ui", "text": ["Recipes \u25b8 Save Node Preset"]}, "."], "extent": [1898, 1998]}], "container": true}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["In the dialog, use the checkboxes to choose which parameters you want to capture in the preset."], "extent": [1998, 2101], "body": [{"type": "para", "indent": 8, "text": ["The dialog starts with checks on all parameters that are not at their default values, and all spare parameters."], "extent": [2101, 2222]}, {"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": ["For some node types, parameters may be shown as ", {"type": "q", "text": ["off default"]}, " and checked by default even though they are the original values the node starts with. For example, for uninteresting historical reasons in the Sphere surface node creation script changes the Primitive Type from its actual default to ", {"type": "ui", "text": ["Polygon Mesh"]}, ", so it always starts ", {"type": "q", "text": ["off default"]}, ". This is unfortunate but you can just turn off their checkmarks if you don\u2019t want to save them as part of the preset."], "extent": [2222, 2698]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["Because spare parameters are checked by default, and the Mantra render properties on object nodes are technically spare parameters, if save a preset on an Object node, it starts with all the render properties checked. You can uncheck the ", {"type": "ui", "text": ["Render"]}, " folder to uncheck all its children, and then re-check any parameters you actually want to save."], "extent": [2698, 3054]}], "container": true}], "container": true}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["By default, the preset includes keyframe animation and expressions on the selected parameters. To save just the current values instead, uncheck ", {"type": "ui", "text": ["Capture Keyframes and Expressions"]}, "."], "extent": [3054, 3244]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["In the ", {"type": "ui", "text": ["Preset Options"]}, " section, enter a ", {"type": "ui", "text": ["Preset Title"]}, "."], "extent": [3244, 3312]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Use the ", {"type": "ui", "text": ["Show for"]}, " pop up menu to choose which node types can have the preset applied to them. The default is to only show the preset for the source node type. You can choose to show the preset for all nodes of the current node type category, or all node types that match a pattern. See ", {"scheme": null, "value": "#patterns", "type": "link", "text": ["target node patterns"], "fullpath": "/network/recipes.html#patterns", "fragment": "#patterns"}, " for more information."], "extent": [3312, 3663]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["The default for the ", {"type": "ui", "text": ["Save to"]}, " menu (", {"type": "ui", "text": ["User Preferences"]}, ") saves all recipes into an asset library in your user preferences directory, which usually all you need. However, if you want to embed the recipe in an existing asset, or if you are working on a recipe to be shared (such as in a large studio), you can change ", {"scheme": null, "value": "#location", "type": "link", "text": ["where you save the preset and its internal name"], "fullpath": "/network/recipes.html#location", "fragment": "#location"}, "."], "extent": [3663, 4048], "body": [], "container": true, "attrs": {"id": "save_to"}}], "container": true}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [4070, 4079], "body": [{"type": "para", "indent": 8, "text": ["If you edit the parameters in the parameter editor pane, you can click ", {"scheme": "Icon", "value": "BUTTONS/recook", "type": "link", "text": "", "fullpath": "/network/BUTTONS/recook.html"}, " ", {"type": "ui", "text": ["Reload Values"]}, " to update the dialog with the new values."], "extent": [4079, 4241]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"ext": null, "type": "task", "indent": 0, "text": [" Apply a parameter preset to a node"], "role": "item", "extent": [4241, 4284], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Select the node, then in the parameter editor, click the ", {"scheme": "Icon", "value": "BUTTONS/presets", "type": "link", "text": "", "fullpath": "/network/BUTTONS/presets.html"}, " recipes menu and choose the preset you want to apply."], "extent": [4284, 4425], "body": [{"type": "para", "indent": 8, "text": [{"type": "em", "text": ["or"]}], "extent": [4425, 4439]}], "container": true}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["In the network editor, right click a node, open the ", {"type": "ui", "text": ["Recipes"]}, " submenu and choose the preset you want to apply to the node."], "extent": [4439, 4571]}], "container": true}], "container": true}, {"ext": null, "type": "task", "indent": 0, "text": [" Edit an existing parameter preset"], "role": "item", "extent": [4571, 4613], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["In the main menus, choose ", {"type": "ui", "text": ["Windows \u25b8 Recipe Manager"]}, "."], "extent": [4613, 4676]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Select the recipe you want to edit and click ", {"type": "ui", "text": ["Edit"]}, "."], "extent": [4676, 4738], "body": [{"type": "para", "indent": 8, "text": ["Houdini creates an instance of the original node type you captured the parameters from, applies the preset to it, and opens the preset editor on it. You can then edit the parameter values, or change the settings in the dialog (such as the preset title)."], "extent": [4738, 5005]}], "container": true}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Click ", {"type": "ui", "text": ["Save"]}, " to save the preset with the new values."], "extent": [5005, 5067]}], "container": true}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["See ", {"scheme": null, "value": "#editing", "type": "link", "text": ["how to edit a preset"], "fullpath": "/network/recipes.html#editing", "fragment": "#editing"}, " below."], "extent": [5067, 5112]}]}, {"level": 2, "id": "tool", "container": true, "type": "h", "indent": 0, "text": ["Saving tool recipes"], "extent": [5112, 5145], "body": [{"type": "para", "indent": 0, "text": ["A ", {"type": "em", "text": ["tool recipe"]}, " saves a node or set of nodes, including their wiring and current parameter values, as a new tool on the ", {"scheme": null, "value": "/basics/tabmenu", "type": "link", "text": ["tab menu"], "fullpath": "/basics/tabmenu.html"}, ". You can then choose the tool from the tab menu to recreate the saved node setup."], "extent": [5145, 5376]}, {"type": "task_group", "body": [{"ext": null, "type": "task", "indent": 0, "text": [" Save a node or set of nodes as a tool"], "role": "item", "extent": [5376, 5422], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["Select the node or nodes you want to turn into a tool."], "extent": [5422, 5484]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Right-click one of selected nodes and choose ", {"type": "ui", "text": ["Recipes \u25b8 Save Selected Items as Tool"]}, "."], "extent": [5484, 5579], "body": [{"type": "para", "indent": 8, "text": ["The node you right-click becomes the ", {"type": "q", "text": ["anchor"]}, " node of the recipe. When you ", {"type": "q", "text": ["drop"]}, " the recipe into a network, the other nodes will be positioned relative to this node. ", {"type": "strong", "text": ["You can edit which node is the ", {"type": "q", "text": ["anchor"]}, " in the dialog"]}, ", but it\u2019s convenient to be able to indicate it by which node you right-click."], "extent": [5579, 5889]}], "container": true}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["As with a regular tab menu tool that puts down a single node, the user can choose a recipe from the tab menu and drop it on an existing wire, or start a new wire and use the tab menu choose a recipe tool to connect it to. You can set which nodes in the recipe should be used as the ", {"type": "q", "text": ["input"]}, " and ", {"type": "q", "text": ["output"]}, " when the user does this. See ", {"scheme": null, "value": "#wiring", "type": "link", "text": ["controlling wiring"], "fullpath": "/network/recipes.html#wiring", "fragment": "#wiring"}, " below for more information."], "extent": [5889, 6285]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["You can choose the submenu in which the tool will appear in the tab menu. Choose an existing submenu using the drop down menu to the right of the ", {"type": "ui", "text": ["Tab submenu"]}, " field, or type a new name into the field to create a new submenu."], "extent": [6285, 6520], "body": [{"type": "para", "indent": 8, "text": ["You can have the tool appear in multiple submenus by entering multiple menu labels separated by commas. For example, ", {"type": "code", "text": ["File IO, Recipes"]}, " will make the tool appear in both the ", {"type": "ui", "text": ["File IO"]}, " and ", {"type": "ui", "text": ["Recipes"]}, " submenus of the tab menu."], "extent": [6520, 6757]}], "container": true}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["You can choose an icon that will appear next to the tool name in the tab menu. This is the same as setting the icon for a ", {"scheme": null, "value": "/assets/create", "type": "link", "text": ["digital asset"], "fullpath": "/assets/create.html"}, ": it can be a file path, an ", {"type": "code", "text": ["opdef:"]}, " reference, or the name of a built-in Houdini icon."], "extent": [6757, 7004]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["If the recipe has more than one node, you can use the ", {"type": "ui", "text": ["Anchor"]}, " pop-up menu to change which node is the ", {"type": "q", "text": ["anchor"]}, " node (other nodes are created relative to this node when the user clicks to place the tool contents in the network editor)."], "extent": [7004, 7249]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["In the ", {"type": "ui", "text": ["Recipe Options"]}, " section, enter a ", {"type": "ui", "text": ["Recipe Title"]}, "."], "extent": [7249, 7317]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["The default for the ", {"type": "ui", "text": ["Save to"]}, " menu (", {"type": "ui", "text": ["User Preferences"]}, ") saves all recipes into an asset library in your user preferences directory, which usually all you need. However, if you want to embed the recipe in an existing asset, or if you are working on a recipe to be shared (such as in a large studio), you can change ", {"scheme": null, "value": "#location", "type": "link", "text": ["where you save the preset and its internal name"], "fullpath": "/network/recipes.html#location", "fragment": "#location"}, "."], "extent": [3663, 4048], "body": [], "container": true, "attrs": {"id": "save_to"}}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Click ", {"type": "ui", "text": ["Save"]}, "."], "extent": [7341, 7364]}], "container": true}], "container": true}, {"ext": null, "type": "task", "indent": 0, "text": [" Place the contents of a tool recipe"], "role": "item", "extent": [7364, 7408], "body": [{"type": "para", "indent": 4, "text": ["Placing a tool recipe works the same as other tools that create a single node, except a recipe can create multiple nodes at once. See ", {"scheme": null, "value": "create#add", "type": "link", "text": ["adding nodes"], "fullpath": "/network/create.html#add", "fragment": "#add"}, " for more information."], "extent": [7408, 7595]}, {"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["In the network editor, press ", {"keys": ["Tab"], "type": "keys", "text": null}, " and choose the recipe from the tab menu."], "extent": [7595, 7680]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Click to place the recipe contents."], "extent": [7680, 7723]}], "container": true}], "container": true}, {"ext": null, "type": "task", "indent": 0, "text": [" Wire the contents of a tool into or out of a node"], "role": "item", "extent": [7723, 7781], "body": [{"type": "para", "indent": 4, "text": ["Starting a wire and choosing a tool recipe works the same as other tools that create a single node, except a recipe can create multiple nodes at once. See ", {"scheme": null, "value": "create#add", "type": "link", "text": ["adding nodes"], "fullpath": "/network/create.html#add", "fragment": "#add"}, " for more information."], "extent": [7781, 7989]}, {"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["In the network editor, click an input or output connector on a node to start a wire."], "extent": [7989, 8081]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["While the new wire is attached to the mouse pointer, press ", {"keys": ["Tab"], "type": "keys", "text": null}, " and choose the recipe from the tab menu."], "extent": [8081, 8196]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Click to place the recipe contents. The new wire is connected to the recipe node the recipe author set as the ", {"type": "q", "text": ["input"]}, " or ", {"type": "q", "text": ["output"]}, " of the recipe."], "extent": [8196, 8348]}], "container": true}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["See ", {"scheme": null, "value": "#editing", "type": "link", "text": ["how to edit a tool"], "fullpath": "/network/recipes.html#editing", "fragment": "#editing"}, " below."], "extent": [8348, 8391]}]}, {"level": 2, "id": "decoration", "container": true, "type": "h", "indent": 0, "text": ["Saving decoration recipes"], "extent": [8391, 8436], "body": [{"type": "para", "indent": 0, "text": ["A ", {"type": "em", "text": ["decoration"]}, " is similar to a ", {"scheme": null, "value": "#tool", "type": "link", "text": ["tool recipe"], "fullpath": "/network/recipes.html#tool", "fragment": "#tool"}, ", but you designate one node in the recipe as the ", {"type": "q", "text": ["central"]}, " node. The central node is like a ", {"type": "em", "text": ["placeholder"]}, " for the node the user applies the decoration to. When you apply the decoration to a ", {"type": "q", "text": ["target"]}, " node in the network, Houdini does the following:"], "extent": [8436, 8737]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Applies any parameters the recipe author saved on the central node."], "extent": [8737, 8807]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Creates the other nodes in the recipe around the target nodes."], "extent": [8807, 8872]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Rewires connections on the target node into the appropriate nodes in the new node setup, as set by the recipe author."], "extent": [8872, 8993]}], "container": true}, {"type": "para", "indent": 0, "text": ["For example, if you usually append nodes to sharpen the volume after a Pyro solver, you could create a tool recipe that puts down a pre-made set up of a Pyro solver plus the sharpening nodes, or you could create a decoration recipe that adds the sharpening nodes to an existing Pyro solver. Or, you could even create both, to allow you to create new setups using the tool, and add to existing setups using the decoration."], "extent": [8993, 9416]}, {"type": "task_group", "body": [{"ext": null, "type": "task", "indent": 0, "text": [" Save a node setup as a decoration"], "role": "item", "extent": [9416, 9458], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["Select the node or nodes you want to turn into a decoration."], "extent": [9458, 9526]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Right-click one of selected nodes and choose ", {"type": "ui", "text": ["Recipes \u25b8 Save Selected Items as Decoration"]}, "."], "extent": [9526, 9627], "body": [{"type": "para", "indent": 8, "text": ["The node you right-click becomes the ", {"type": "q", "text": ["central"]}, " node of the recipe. The central node represents the node the recipe will be applied to. ", {"type": "strong", "text": ["You can edit which node is ", {"type": "q", "text": ["central"]}, " in the dialog"]}, ", but it\u2019s convenient to be able to indicate it by which node you right-click."], "extent": [9627, 9906]}], "container": true}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["You can choose the submenu in which the tool will appear in the tab menu. Choose an existing submenu using the drop down menu to the right of the ", {"type": "ui", "text": ["Tab submenu"]}, " field, or type a new name into the field to create a new submenu."], "extent": [9906, 10141], "body": [{"type": "para", "indent": 8, "text": ["You can have the tool appear in multiple submenus by entering multiple menu labels separated by commas. For example, ", {"type": "code", "text": ["File IO, Recipes"]}, " will make the tool appear in both the ", {"type": "ui", "text": ["File IO"]}, " and ", {"type": "ui", "text": ["Recipes"]}, " submenus of the tab menu."], "extent": [10141, 10382]}], "container": true}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Make sure the correct node is marked as the ", {"type": "q", "text": ["central"]}, " node."], "extent": [10382, 10453], "body": [{"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": ["The current central node has a yellow outline in the schematic view in the recipe dialog."], "extent": [10453, 10558]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["To change the central node, click the node in the schematic view and choose ", {"type": "ui", "text": ["Set as Central Node"]}, ", ", {"type": "em", "text": ["or"]}, " choose the node from the ", {"type": "ui", "text": ["Central Node"]}, " popup menu."], "extent": [10558, 10729]}], "container": true}], "container": true}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["The recipe saves all (non-default and spare) parameter values on the non-central nodes it will recreate. You can choose whether to save parameter values on the central node, and re-apply them to the target node when the decoration is applied. This can be useful to set parameter values on the target node needed by the decoration nodes created around it, such as channel references."], "extent": [10729, 11119], "body": [{"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": ["By default, ", {"type": "ui", "text": ["Capture Parameters on the Centrl Node"]}, " is on. You can turn it off if you don\u2019t want to save parameters on the central node."], "extent": [11119, 11269]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["You can choose which parameters on the central node are captured using the ", {"scheme": null, "value": "#parameters", "type": "link", "text": ["parameter view"], "fullpath": "/network/recipes.html#parameters", "fragment": "#parameters"}, " in the right pane."], "extent": [11269, 11403]}], "container": true}], "container": true}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["When the user applies your decoration to a node, Houdini will rewire any existing connections on the target node. You can set which nodes in the recipe should be used as the ", {"type": "q", "text": ["input"]}, " and ", {"type": "q", "text": ["output"]}, " when this happens. See ", {"scheme": null, "value": "#wiring", "type": "link", "text": ["controlling wiring"], "fullpath": "/network/recipes.html#wiring", "fragment": "#wiring"}, " below for more information."], "extent": [11403, 11685]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["In the ", {"type": "ui", "text": ["Recipe Options"]}, " section, enter a ", {"type": "ui", "text": ["Recipe Title"]}, "."], "extent": [11685, 11753]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Use the ", {"type": "ui", "text": ["Show for"]}, " pop up menu to choose which node types can have the decoration applied to them. The default is to only show the decoration for the central node type. You can choose to show the preset for all nodes of the current node type category, or all node types that match a pattern. See ", {"scheme": null, "value": "#patterns", "type": "link", "text": ["target node patterns"], "fullpath": "/network/recipes.html#patterns", "fragment": "#patterns"}, " for more information."], "extent": [11753, 12113]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["The default for the ", {"type": "ui", "text": ["Save to"]}, " menu (", {"type": "ui", "text": ["User Preferences"]}, ") saves all recipes into an asset library in your user preferences directory, which usually all you need. However, if you want to embed the recipe in an existing asset, or if you are working on a recipe to be shared (such as in a large studio), you can change ", {"scheme": null, "value": "#location", "type": "link", "text": ["where you save the preset and its internal name"], "fullpath": "/network/recipes.html#location", "fragment": "#location"}, "."], "extent": [3663, 4048], "body": [], "container": true, "attrs": {"id": "save_to"}}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Click ", {"type": "ui", "text": ["Save"]}, "."], "extent": [12137, 12160]}], "container": true}], "container": true}, {"ext": null, "type": "task", "indent": 0, "text": [" Apply a decoration to a node"], "role": "item", "extent": [12160, 12197], "body": [{"type": "para", "indent": 4, "text": ["In the network editor, right-click the node, open the ", {"type": "ui", "text": ["Recipes"]}, " submenu and click the decoration you want to apply."], "extent": [12197, 12320]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["See ", {"scheme": null, "value": "#editing", "type": "link", "text": ["how to edit a decoration"], "fullpath": "/network/recipes.html#editing", "fragment": "#editing"}, " below."], "extent": [12320, 12369]}]}, {"level": 2, "id": "wiring", "container": true, "type": "h", "indent": 0, "text": ["Controlling wiring"], "extent": [12369, 12403], "body": [{"type": "para", "indent": 0, "text": ["You can control how existing connections are wired into the nodes created by tool and decoration recipes."], "extent": [12403, 12511]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["For tool recipes, you can choose which nodes in the recipe act as the ", {"type": "q", "text": ["input"]}, " and ", {"type": "q", "text": ["output"]}, " for the recipe. These are used when you start a wiring operation and then choose the tool from the tab menu, or when you drop the tool contents on an existing wire."], "extent": [12511, 12770]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["For decoration recipes, you can choose up to four input nodes, and one output nodes. When the decoration to the ", {"type": "q", "text": ["target"]}, " node, Houdini rewires any incoming and/or outgoing connections on the target to those nodes."], "extent": [12770, 12987]}], "container": true}, {"type": "para", "indent": 0, "text": ["For example, you might want to create a tool recipe that takes an incoming connection, subdivides it, wires it into the ", {"type": "q", "text": ["collision geometry"]}, " (third) input of a Vellum Constraints node, collides it with a sphere, splits the output to a visualize node a null, and uses the null as the outgoing connection:"], "extent": [12987, 13292]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/recipes/recipe_wiring.jpg", "type": "img", "text": ""}], "extent": [13292, 13335]}, {"type": "para", "indent": 0, "text": ["When you capture these nodes as a tool, you would set the Subdivide node as the recipe input, and the null as the recipe output:"], "extent": [13335, 13465]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/recipes/recipe_wiring_anno.jpg", "type": "img", "text": ""}], "extent": [13465, 13513]}, {"type": "para", "indent": 0, "text": ["Then, if you drop the tool onto a wire:"], "extent": [13513, 13554]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/recipes/recipe_wiring_before.jpg", "type": "img", "text": ""}], "extent": [13554, 13604]}, {"type": "para", "indent": 0, "text": ["\u2026Houdini will replace the wire with connections to the intput and output nodes of the recipe:"], "extent": [13604, 13701]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/recipes/recipe_wiring_after.jpg", "type": "img", "text": ""}], "extent": [13701, 13750]}, {"type": "task_group", "body": [{"ext": null, "type": "task", "indent": 0, "text": [" Set a node as a recipe input or output"], "role": "item", "extent": [13750, 13797], "body": [{"type": "para", "indent": 4, "text": ["In the recipe dialog, click the node in the schematic view, and choose ", {"type": "ui", "text": ["Set as Input"]}, " or ", {"type": "ui", "text": ["Set as Output"]}, ", ", {"type": "em", "text": ["or"]}, " choose the node from the input or output pop-up menus."], "extent": [13797, 13972]}, {"type": "para", "indent": 4, "text": ["You can only set nodes ", {"type": "q", "text": ["upstream"]}, " from the central node as an input, and you can only set nodes ", {"type": "q", "text": ["downstream"]}, " from the central node as the output."], "extent": [13972, 14123]}], "container": true}], "container": true, "role": "item_group"}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [14123, 14128], "body": [{"type": "para", "indent": 4, "text": ["Currently, Houdini only supports wiring the first input/output of a node. However, as a workaround you can wire a Null node into the input/output and then use the Null as the designated input/output for the recipe."], "extent": [14128, 14349]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "pattern", "container": true, "type": "h", "indent": 0, "text": ["Target node patterns"], "extent": [14349, 14386], "body": [{"type": "para", "indent": 0, "text": ["For presets and decorations, you can choose which node types the recipe appears for in the recipe menu."], "extent": [14386, 14492]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["The default is for it to appear for the same node types as the original node (for node presets) or the central node (for decorations)."], "extent": [14492, 14630]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["When creating a recipe, you can use the ", {"type": "ui", "text": ["Show for"]}, " menu to choose to show the recipe for any node in the same category (for example, any SOP node), or for any node type whose name matches a certain custom pattern."], "extent": [14630, 14849]}], "container": true}, {"type": "para", "indent": 0, "text": ["To have the recipe show up for a set of nodes, choose ", {"type": "ui", "text": ["Show for \u25b8 Node Matching a Custom Pattern"]}, " and set the custom pattern to match the nodes you want the recipe to show for."], "extent": [14849, 15029]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["The pattern uses standard Houdini pattern matching, as in the ", {"scheme": "Hom", "value": "/hom/hou/text#patternMatch", "type": "link", "text": "", "fallback_text": "hou.text.patternMatch", "fullpath": "/hom/hou/text.html#patternMatch", "fragment": "#patternMatch"}, " function. The ", {"type": "code", "text": ["*"]}, " wildcard matches any run of characters."], "extent": [15029, 15180]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The pattern can be a space-separated list of patterns. The recipe will show for a node type whose name matches ", {"type": "em", "text": ["any"]}, " of the patterns in the list."], "extent": [15180, 15329]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Houdini tries to match the pattern to a node\u2019s ", {"type": "strong", "text": ["internal name including category"]}, ", for example ", {"type": "code", "text": ["acme::Sop/foobar::2.0"]}, "."], "extent": [15329, 15452]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["For example, to match all nodes in the ", {"type": "code", "text": ["acme"]}, " namespace, use ", {"type": "code", "text": ["acme::*"]}, "."], "extent": [15452, 15527]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["If you want to match multiple categories, such as any SOP or any DOP, you need to write a space-separated list of multiple patterns to match the possible cases, in this case SOP without namespace, SOP with namespace, DOP without namespace, and DOP with namespace: ", {"type": "code", "text": ["Sop/* *:Sop/* Dop/* *:Dop/*"]}, "."], "extent": [15527, 15825]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["You don\u2019t have to use wildcards in the pattern. If you want the recipe to only show for a specific set of node types, you can simply write the internal names of those nodes in a space-separated list."], "extent": [15825, 16028]}], "container": true}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [16028, 16033], "body": [{"type": "para", "indent": 4, "text": ["You can ", {"scheme": null, "value": "#editing", "type": "link", "text": ["edit the pattern"], "fullpath": "/network/recipes.html#editing", "fragment": "#editing"}, " after creating the recipe, if you find a case where the pattern doesn\u2019t match properly."], "extent": [16033, 16166]}, {"type": "para", "indent": 4, "text": ["You can also use ", {"scheme": "Hom", "value": "/hom/hou/text#patternMatch", "type": "link", "text": "", "fallback_text": "hou.text.patternMatch", "fullpath": "/hom/hou/text.html#patternMatch", "fragment": "#patternMatch"}, " and ", {"scheme": "Hom", "value": "/hom/hou/Node#nameWithCategory", "type": "link", "text": "", "fallback_text": "hou.Node.nameWithCategory", "fullpath": "/hom/hou/Node.html#nameWithCategory", "fragment": "#nameWithCategory"}, " to check whether a node would match the pattern:"], "extent": [16166, 16301]}, {"lang": "pycon", "type": "pre", "indent": 4, "text": ["\n    >>> my_pattern = \"acme::*\"\n    >>> # Does this node match the pattern?\n    >>> hou.text.patternMatches(my_pattern, hou.node(\"/obj/geo1/my_node\").type().nameWithCategory())\n    True\n    "], "extent": [16301, 16514]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "location", "container": true, "type": "h", "indent": 0, "text": ["Choosing where to save (advanced)"], "extent": [16514, 16567], "body": [{"type": "para", "indent": 0, "text": ["The ", {"type": "ui", "text": ["Save to"]}, " menu in recipe dialogs defaults to ", {"type": "ui", "text": ["User Preferences"]}, ". This saves all recipes into an asset library in your user preferences directory, which usually all you need. However, if you want to embed the recipe in an existing asset, or if you are working on a recipe to be shared (such as in a large studio), you can change where you save the recipe, and you can edit the recipe asset\u2019s internal name."], "extent": [16567, 16983]}, {"type": "para", "indent": 0, "text": ["For example, if you're making a tool for shared use in a studio, you may want to save it to a shared network drive, and give it an internal name using a studio-specific namespace and a version number, such as ", {"type": "code", "text": ["acme::vellum_cloth_tool::2.0"]}], "extent": [16983, 17225]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Save location"], "extent": [17225, 17247], "body": [{"type": "task_group", "body": [{"ext": null, "type": "task", "indent": 0, "text": [" Captureshoose where to save a recipe"], "role": "item", "extent": [17247, 17294], "body": [{"type": "para", "indent": 4, "text": ["In the recipe dialog, click the ", {"type": "ui", "text": ["Save to"]}, " pop-up menu and choose one of the following:"], "extent": [17294, 17388]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["User Preferences"], "extent": [17388, 17410], "body": [{"type": "para", "indent": 8, "text": ["Saves the recipe asset into ", {"type": "code", "text": ["$HOUDINI_USER_PREF_DIR/otls/Recipes.hda"]}, "."], "extent": [17410, 17490]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Store In Same Library as ", {"type": "var", "text": ["name"]}], "extent": [17490, 17529], "body": [{"type": "para", "indent": 8, "text": ["Saves the recipe into the same asset library as the source node type. This option is not available for ", {"type": "q", "text": ["factory"]}, " node types installed with Houdini."], "extent": [17529, 17686]}], "container": true}, {"type": "dt", "indent": 4, "text": ["$HIP/otls Directory"], "extent": [17686, 17711], "body": [{"type": "para", "indent": 8, "text": ["Saves the asset into an ", {"type": "code", "text": ["otls"]}, " subdirectory in the same directory the current scene file."], "extent": [17711, 17810]}], "container": true}, {"type": "dt", "indent": 4, "text": ["$JOB/otls Directory"], "extent": [17810, 17835], "body": [{"type": "para", "indent": 8, "text": ["Saves the asset into an ", {"type": "code", "text": ["otls"]}, " subdirectory in the path set in the ", {"type": "code", "text": ["$JOB"]}, " environment variable."], "extent": [17835, 17944]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Embed in Current HIP File"], "extent": [17944, 17975], "body": [{"type": "para", "indent": 8, "text": ["Embeds the asset as part of the current scene file. This is sometimes useful for sharing a self-contained, working scene file. Note that this can bloat the size of the scene file."], "extent": [17975, 18168]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom File Path"], "extent": [18168, 18190], "body": [{"type": "para", "indent": 8, "text": ["Choose this option, then enter the path to the asset library you want to save to in the field next to the pop-up menu, ", {"type": "em", "text": ["or"]}, " click the file chooser icon to choose the file to save to from a file dialog."], "extent": [18190, 18402]}], "container": true}], "container": true}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 3, "id": "internal", "container": true, "type": "h", "indent": 0, "text": ["Internal name"], "extent": [18402, 18435], "body": [{"type": "para", "indent": 0, "text": ["Each recipe asset has a default internal name designed to prevent naming conflicts. It uses the ", {"type": "em", "text": ["type of the node you created the asset from"]}, " as the scope, ", {"type": "em", "text": ["your username"]}, " (or the value of ", {"type": "code", "text": ["$HOUDINI_AUTHOR"]}, " if it\u2019s set) as the namespace, and an encoded version of the recipe title as the base name."], "extent": [18435, 18736]}, {"type": "task_group", "body": [{"ext": null, "type": "task", "indent": 0, "text": [" Change the internal name when you create a recipe"], "role": "item", "extent": [18736, 18795], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["In the recipe dialog, click ", {"type": "ui", "text": ["Show Advanced Options"]}, "."], "extent": [18795, 18857]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Edit the ", {"type": "ui", "text": ["Internal name"]}, " field."], "extent": [18857, 18899]}], "container": true}], "container": true}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": "editing", "container": true, "type": "h", "indent": 0, "text": ["Editing recipes"], "extent": [18899, 18931], "body": [{"type": "task_group", "body": [{"ext": null, "type": "task", "indent": 0, "text": [" Delete a recipe"], "role": "item", "extent": [18931, 18956], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["In the main menus, choose ", {"type": "ui", "text": ["Windows \u25b8 Recipe Manager"]}, "."], "extent": [18956, 19019]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Select the recipe you want to edit and click ", {"type": "ui", "text": ["Delete"]}, "."], "extent": [19019, 19083]}], "container": true}], "container": true}, {"ext": null, "type": "task", "indent": 0, "text": [" Rename a recipe"], "role": "item", "extent": [19083, 19107], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["In the main menus, choose ", {"type": "ui", "text": ["Windows \u25b8 Recipe Manager"]}, "."], "extent": [19107, 19170]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Select the recipe and click the title in the table."], "extent": [19170, 19229], "body": [{"type": "para", "indent": 8, "text": [{"type": "em", "text": ["or"]}], "extent": [19229, 19243]}, {"type": "para", "indent": 8, "text": ["Select the recipe and click ", {"type": "ui", "text": ["Rename"]}, "."], "extent": [19243, 19292]}], "container": true}], "container": true}], "container": true}, {"ext": null, "type": "task", "indent": 0, "text": [" Edit the contents of a recipe"], "role": "item", "extent": [19292, 19330], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["In the main menus, choose ", {"type": "ui", "text": ["Windows \u25b8 Recipe Manager"]}, "."], "extent": [19330, 19393]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Select the recipe you want to edit and click ", {"type": "ui", "text": ["Edit"]}, "."], "extent": [19393, 19455], "body": [{"type": "para", "indent": 8, "text": ["Houdini creates the recipe contents in a temporary subnet, selects them, and opens the recipe editor on it. You can then edit the parameter values, or change the settings in the dialog (such as the title title)."], "extent": [19455, 19676]}, {"type": "para", "indent": 8, "text": ["To add a node to a tool or decoration recipe, create it in the temporary subnet, select it, and click ", {"type": "ui", "text": ["Reload"]}, " in the recipe editor dialog."], "extent": [19676, 19827]}, {"type": "para", "indent": 8, "text": ["To remove a node from tool or decoration recipe, delete it from the temporary subnet, and click ", {"type": "ui", "text": ["Reload"]}, " in the recipe editor dialog."], "extent": [19827, 19976]}], "container": true}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Click ", {"type": "ui", "text": ["Save"]}, " to save the preset with the new values."], "extent": [19976, 20038]}], "container": true}], "container": true}], "container": true, "role": "item_group"}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [20038, 20043], "body": [{"type": "para", "indent": 4, "text": ["Since recipes are stored in digital assets, you can also manage them using the Asset Manager (", {"type": "ui", "text": ["Assets \u25b8 Asset Manager"]}, "), the ", {"scheme": null, "value": "/ref/window/optype", "type": "link", "text": ["Type Properties Editor"], "fullpath": "/ref/window/optype.html"}, ", and HOM functions for manipulating node types and asset definitions."], "extent": [20043, 20290]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "advanced", "container": true, "type": "h", "indent": 0, "text": ["Advanced Options"], "extent": [20290, 20324], "body": [{"type": "para", "indent": 0, "text": ["You will not usually need to change these settings. To show them, in the recipe dialog, click ", {"type": "ui", "text": ["Show Advanced Options"]}, "."], "extent": [20324, 20447]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Recursively save node contents"], "extent": [20447, 20479], "body": [{"type": "para", "indent": 4, "text": ["If you turn this off, the tool or decoration will only have the top level nodes, it will not save the contents of subnetworks or unlocked assets."], "extent": [20479, 20630]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Save Editable Dive Targets"], "extent": [20630, 20658], "body": [{"type": "para", "indent": 4, "text": ["Assets can specify subnetworks in their definitions as editable dive targets, where the user who created the asset instance can put their own nodes to affect how the asset works. Houdini normally saves the contents these subnetworks as part of the recipe. Turn off this option to ignore the contents of these subnetworks."], "extent": [20658, 20985]}, {"type": "para", "indent": 4, "text": ["There are separate controls for saving editable contents of the central/anchor node, and saving them for all other nodes."], "extent": [20985, 21112]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Save View Flags (at top level)"], "extent": [21112, 21144], "body": [{"type": "para", "indent": 4, "text": ["Normally, Houdini does ", {"type": "em", "text": ["not"]}, " save view flags (output, display, render) as part of the recipe, because usually you don\u2019t want applying a recipe to change them. Non-view flags (such as ", {"type": "q", "text": ["frozen"]}, " or ", {"type": "q", "text": ["bypass"]}, ") are always saved. You can turn on this option to save view flags as part of the recipe."], "extent": [21144, 21442]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Only Save Nodes"], "extent": [21442, 21459], "body": [{"type": "para", "indent": 4, "text": ["Normally Houdini saves sticky notes, network boxes, and dots, as part of the recipe. If you turn on this option, the recipe will only save nodes, ignoring other types of network objects."], "extent": [21459, 21652]}], "container": true}], "container": true}]}, {"level": 2, "id": "hom", "container": true, "type": "h", "indent": 0, "text": ["Scripting"], "extent": [22733, 22755], "body": [{"type": "para", "indent": 0, "text": ["You can use the following HOM functions to save and apply recipes:"], "extent": [22755, 22824]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Hom", "value": "/hom/hou/data#saveNodePresetRecipe", "type": "link", "text": "", "fallback_text": "hou.data.saveNodePresetRecipe", "fullpath": "/hom/hou/data.html#saveNodePresetRecipe", "fragment": "#saveNodePresetRecipe"}], "extent": [22824, 22862]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Hom", "value": "/hom/hou/data#applyNodePresetRecipe", "type": "link", "text": "", "fallback_text": "hou.data.applyNodePresetRecipe", "fullpath": "/hom/hou/data.html#applyNodePresetRecipe", "fragment": "#applyNodePresetRecipe"}], "extent": [22862, 22901]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Hom", "value": "/hom/hou/data#saveDecorationRecipe", "type": "link", "text": "", "fallback_text": "hou.data.saveDecorationRecipe", "fullpath": "/hom/hou/data.html#saveDecorationRecipe", "fragment": "#saveDecorationRecipe"}], "extent": [22901, 22939]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Hom", "value": "/hom/hou/data#applyDecorationRecipe", "type": "link", "text": "", "fallback_text": "hou.data.applyDecorationRecipe", "fullpath": "/hom/hou/data.html#applyDecorationRecipe", "fragment": "#applyDecorationRecipe"}], "extent": [22939, 22978]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Hom", "value": "/hom/hou/data#saveTabToolRecipe", "type": "link", "text": "", "fallback_text": "hou.data.saveTabToolRecipe", "fullpath": "/hom/hou/data.html#saveTabToolRecipe", "fragment": "#saveTabToolRecipe"}], "extent": [22978, 23013]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Hom", "value": "/hom/hou/data#applyTabToolRecipe", "type": "link", "text": "", "fallback_text": "hou.data.applyTabToolRecipe", "fullpath": "/hom/hou/data.html#applyTabToolRecipe", "fragment": "#applyTabToolRecipe"}], "extent": [23013, 23049]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Hom", "value": "/hom/hou/dataNodeTypeCategory", "type": "link", "text": "", "fallback_text": "hou.dataNodeTypeCategory", "fullpath": "/hom/hou/dataNodeTypeCategory.html"}], "extent": [23049, 23083]}], "container": true}, {"type": "para", "indent": 0, "text": ["HOM also has various lower-level functions and methods to return JSON-like data from Houdini objects, and set up Houdini objects based on that JSON-like data:"], "extent": [23083, 23243]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Hom", "value": "/hom/hou/data", "type": "link", "text": ["hou.data module"], "fullpath": "/hom/hou/data.html"}], "extent": [23243, 23276]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Hom", "value": "/hom/hou/OpNode#data_methods", "type": "link", "text": ["hou.OpNode methods"], "fullpath": "/hom/hou/OpNode.html#data_methods", "fragment": "#data_methods"}], "extent": [23276, 23327]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Hom", "value": "/hom/hou/StickyNote#data_methods", "type": "link", "text": ["hou.StickyNote methods"], "fullpath": "/hom/hou/StickyNote.html#data_methods", "fragment": "#data_methods"}], "extent": [23327, 23386]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Hom", "value": "/hom/hou/NetworkBox#data_methods", "type": "link", "text": ["hou.NetworkBox methods"], "fullpath": "/hom/hou/NetworkBox.html#data_methods", "fragment": "#data_methods"}], "extent": [23386, 23445]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Hom", "value": "/hom/hou/NetworkDot#data_methods", "type": "link", "text": ["hou.NetworkDot methods"], "fullpath": "/hom/hou/NetworkDot.html#data_methods", "fragment": "#data_methods"}], "extent": [23445, 23504]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Hom", "value": "/hom/hou/Parm#data_methods", "type": "link", "text": ["hou.Parm methods"], "fullpath": "/hom/hou/Parm.html#data_methods", "fragment": "#data_methods"}], "extent": [23504, 23551]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Hom", "value": "/hom/hou/ParmTuple#data_methods", "type": "link", "text": ["hou.ParmTuple methods"], "fullpath": "/hom/hou/ParmTuple.html#data_methods", "fragment": "#data_methods"}], "extent": [23551, 23608]}], "container": true}]}], "title": ["Recipes: saving and recreating node and parameter presets"], "summary": ["How to save parameter settings and groups of nodes so you can recreate them when needed."]}