// Magic: e5f6526
// Automatically generated PSI dialog (PSI version 20.5.278)
// Fri Aug  2 13:26:22 2024


f_tmp = FLOAT_FIELD;	// dialog.top.ui

visualise.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("visualise", "Visualise") toggle VALUE(visualise.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

create_lines.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("create_lines", "Create Lines") toggle VALUE(create_lines.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

attr.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    attr.label = PARM_LABEL("Propagation Attribute", "attr") WIDTH(1.5);
    PARM_FIELD(string, "attr") VALUE(attr.val) 
	LABELREF(attr.label) HSTRETCH;

    { WIDTH(0.1) }
}

allow_sourcing.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("allow_sourcing", "Allow Animated Sourcing") toggle VALUE(allow_sourcing.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

sepparm.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.064700) }
}
maximal.gad = NULL { }
rad_min.gad = NULL { }
expansions.gad = NULL { }

source_rad.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 source_rad.label = PARM_LABEL("Search Rad (2nd Input)", "source_rad") WIDTH(1.5);
 PARM(float, 1, "source_rad", none, none) RANGE(0,1)
	 LABELREF(source_rad.label) HSTRETCH;

  { WIDTH(0.1) }
}

prop_type.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    prop_type.label = PARM_LABEL_SIMPLE("Propagation Type", "prop_type") WIDTH(1.5);
    { WIDTH(0.09) }

    prop_type.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

maxpts.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxpts.label = PARM_LABEL("Max Search points", "maxpts") WIDTH(1.5);
 PARM(integer, 1, "maxpts", none, none) RANGE(0,10)
	 LABELREF(maxpts.label) HSTRETCH;

  { WIDTH(0.1) }
}

rad.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 rad.label = PARM_LABEL("Search Radius", "rad") WIDTH(1.5);
 PARM(float, 1, "rad", none, none) RANGE(0,1)
	 LABELREF(rad.label) HSTRETCH;

  { WIDTH(0.1) }
}
use_rad_attr.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
use_rad_attr.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0, 0) NO_MARGIN_SPACING_SCALE

use_rad_attr.gad = PARM_BUTTON("use_rad_attr", "") toggle VALUE(use_rad_attr.val) RETAIN_SIZE_WHEN_HIDDEN;

rad_attr.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    {  }

    rad_attr.label = PARM_LABEL("Search Radius Attrib", "rad_attr") WIDTH(1.32);
    PARM_FIELD(string, "rad_attr") VALUE(rad_attr.val) 
	LABELREF(rad_attr.label) HSTRETCH;

    {  }
}
}	
}	// Template join.bot


rate.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 rate.label = PARM_LABEL("Propagation Rate", "rate") WIDTH(1.5);
 PARM(float, 1, "rate", none, none) RANGE(0,2)
	 LABELREF(rate.label) HSTRETCH;

  { WIDTH(0.1) }
}

velmod.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 velmod.label = PARM_LABEL("Velocity Bias", "velmod") WIDTH(1.5);
 PARM(float, 1, "velmod", none, none) RANGE(0,1)
	 LABELREF(velmod.label) HSTRETCH;

  { WIDTH(0.1) }
}

weight_neigh.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("weight_neigh", "Weight by Uninfected Neighbours") toggle VALUE(weight_neigh.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}
use_rate_attr.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
use_rate_attr.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0, 0) NO_MARGIN_SPACING_SCALE

use_rate_attr.gad = PARM_BUTTON("use_rate_attr", "") toggle VALUE(use_rate_attr.val) RETAIN_SIZE_WHEN_HIDDEN;

rate_attr.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    {  }

    rate_attr.label = PARM_LABEL("Rate Attrib", "rate_attr") WIDTH(1.32);
    PARM_FIELD(string, "rate_attr") VALUE(rate_attr.val) 
	LABELREF(rate_attr.label) HSTRETCH;

    {  }
}
}	
}	// Template join.bot


rate_min.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 rate_min.label = PARM_LABEL("Min Propagation Rate", "rate_min") WIDTH(1.5);
 PARM(float, 1, "rate_min", none, none) RANGE(0,1)
	 LABELREF(rate_min.label) HSTRETCH;

  { WIDTH(0.1) }
}

prop_thresh.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 prop_thresh.label = PARM_LABEL("Propagation threshold", "prop_thresh") WIDTH(1.5);
 PARM(float, 1, "prop_thresh", none, none) RANGE(0,1)
	 LABELREF(prop_thresh.label) HSTRETCH;

  { WIDTH(0.1) }
}
fade_rate.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

fade_rate.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 fade_rate.label = PARM_LABEL("Fade Rate", "fade_rate") WIDTH(1.5);
 PARM(float, 1, "fade_rate", none, none) RANGE(0,1)
	 LABELREF(fade_rate.label) HSTRETCH;

  {  }
}

reinfect.gad = ROW
{
    
    {  }

    PARM_BUTTON("reinfect", "Enable Re-Infection") toggle VALUE(reinfect.val);

    {  }

    {  }
}
}	// Template join.bot


iterations.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 iterations.label = PARM_LABEL("Blurring Iterations", "iterations") WIDTH(1.5);
 PARM(integer, 1, "iterations", none, none) RANGE(0,25)
	 LABELREF(iterations.label) HSTRETCH;

  { WIDTH(0.1) }
}

resimulate.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("resimulate", "Reset Simulation")
	push VALUE(resimulate.val);

    { WIDTH(0.1) }
}

startframe.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 startframe.label = PARM_LABEL("Start Frame", "startframe") WIDTH(1.5);
 PARM(integer, 1, "startframe", none, none) RANGE(1,240)
	 LABELREF(startframe.label) HSTRETCH;

  { WIDTH(0.1) }
}

substep.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 substep.label = PARM_LABEL("Sub Steps", "substep") WIDTH(1.5);
 PARM(integer, 1, "substep", none, none) RANGE(1,10)
	LOCK_RANGE_MIN LABELREF(substep.label) HSTRETCH;

  { WIDTH(0.1) }
}

folder3.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "folder3.gad"
    { 
	VALUE(folder3.gad.val) STRETCH(1,0)

	TAB "Propagation Radius"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    source_rad.gad;		
	    prop_type.gad;		
	    maxpts.gad;		
	    rad.gad;		
	    use_rad_attr.row.join;		

	    { STRETCH(1,1) }
	}

	TAB "Propagation Rate"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    rate.gad;		
	    velmod.gad;		
	    weight_neigh.gad;		
	    use_rate_attr.row.join;		
	    rate_min.gad;		
	    prop_thresh.gad;		
	    fade_rate.row.join;		
	    iterations.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Solver"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    resimulate.gad;		
	    startframe.gad;		
	    substep.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    visualise.gad; 
    create_lines.gad; 
    attr.gad; 
    allow_sourcing.gad; 
    sepparm.gad; 
    maximal.gad; 
    rad_min.gad; 
    expansions.gad; 
    folder3.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
