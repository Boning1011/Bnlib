// Magic: 4b70f645
// Automatically generated PSI dialog (PSI version 20.5.278)
// Thu Aug  1 14:06:42 2024


f_tmp = FLOAT_FIELD;	// dialog.top.ui

inputtype.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    inputtype.label = PARM_LABEL_SIMPLE("Input Type", "inputtype") WIDTH(1.5);
    { WIDTH(0.09) }

    inputtype.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

imginput.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 imginput.label = PARM_LABEL("Image Path", "imginput") WIDTH(1.5);

 PARM_FIELD (pathstring, "imginput") LABELREF(imginput.label)
	VALUE(imginput.val) HSTRETCH;

    imginput.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(imginput.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

copinput.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)
 { WIDTH(0.18) }

 copinput.label = PARM_LABEL("COP Network", "copinput") WIDTH(1.5);
 PARM_FIELD(pathstring, "copinput") VALUE(copinput.val) 
	LABELREF(copinput.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(copinput.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(copinput.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

 { WIDTH(0.1) }
}

sepparm2___3.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.064700) }
}

numcolors.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 numcolors.label = PARM_LABEL("Number of Colors", "numcolors") WIDTH(1.5);
 PARM(integer, 1, "numcolors", none, none) RANGE(1,100)
	LOCK_RANGE_MIN LABELREF(numcolors.label) HSTRETCH;

  { WIDTH(0.1) }
}

strength.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 strength.label = PARM_LABEL("Region Smoothing", "strength") WIDTH(1.5);
 PARM(float, 1, "strength", none, none) RANGE(0,50)
	LOCK_RANGE_MIN LABELREF(strength.label) HSTRETCH;

  { WIDTH(0.1) }
}

orientation.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    orientation.label = PARM_LABEL_SIMPLE("Orientation", "orientation") WIDTH(1.5);
    { WIDTH(0.09) }

    orientation.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

scale.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 scale.label = PARM_LABEL("Uniform Scale", "scale") WIDTH(1.5);
 PARM(float, 1, "scale", none, none) RANGE(0,1000)
	 LABELREF(scale.label) HSTRETCH;

  { WIDTH(0.1) }
}

extweight.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 extweight.label = PARM_LABEL("Extended Influence", "extweight") WIDTH(1.5);
 PARM(float, 1, "extweight", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(extweight.label) HSTRETCH;

  { WIDTH(0.1) }
}

iterations.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 iterations.label = PARM_LABEL("Iterations", "iterations") WIDTH(1.5);
 PARM(integer, 1, "iterations", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(iterations.label) HSTRETCH;

  { WIDTH(0.1) }
}

sepparm2.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.064700) }
}

generatecolors.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("generatecolors", "Generate Regions")
	push VALUE(generatecolors.val);

    { WIDTH(0.1) }
}

sepparm.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

addindex.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("addindex", "Add Index Attribute") toggle VALUE(addindex.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

attname2.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    attname2.label = PARM_LABEL("Attribute Name", "attname2") WIDTH(1.5);
    PARM_FIELD(string, "attname2") VALUE(attname2.val) 
	LABELREF(attname2.label) HSTRETCH;

    { WIDTH(0.1) }
}

sepparm2___2.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

addatt.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("addatt", "Add Custom Attribute") toggle VALUE(addatt.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}
attname.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

attname.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    {  }

    attname.label = PARM_LABEL("Attribute Name", "attname") WIDTH(1.5);
    PARM_FIELD(string, "attname") VALUE(attname.val) 
	LABELREF(attname.label) HSTRETCH;

    {  }
}

atttype.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    atttype.menu;

    {  }

    {  }
}
}	// Template join.bot


sepparm2___4.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

fd_extractcol.parm =
{
    LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Extracted Regions", "fd_extractcol") WIDTH(1.5);
    { WIDTH(0.1) }

    ROW
    {
	HSTRETCH(0.5) JUSTIFY(left, center) VALUE(fd_extractcol.val)

        fd_extractcol.field = PARM_FIELD (integer, "fd_extractcol")
				VALUE(fd_extractcol.val) HSTRETCH(0.5)
				 PREF_WIDTH(0.5);

        ROW
        {
	     LOOK(lightline) VMARGIN(1p)

   	     INCREMENT_ICONBUTTON VALUE(fd_extractcol.more.val)	
	    	HELP("Add Another Instance") SIZE(0.2, 0.24);
	     DECREMENT_ICONBUTTON VALUE(fd_extractcol.less.val)	
	        HELP("Remove Last Instance") SIZE(0.2, 0.24);

	}

	ACTION_BUTTON "Clear" VALUE(fd_extractcol.clear.val);
    }

    { HSTRETCH }
}

fd_extractcol.multilist = 
{
    LAYOUT(vertical) HSTRETCH MARGIN(0.05)
}

fd_extractcol.gad =
{
    LAYOUT(vertical) HSTRETCH
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
    SWITCHER tight
    {
	LAYOUT(overlap!)
        VALUE(fd_extractcol.multilist_hide_buttons.val)
	{
	    LAYOUT(vertical) HSTRETCH
	    fd_extractcol.parm;
	    {LOOK(none) HEIGHT(0.02)}
	}
	{
	}
    }
    fd_extractcol.multilist;
}

fd_neighbors.gad = 
GROUP collapsible "Neighbor Consolidation" flat   
{
    VALUE(fd_neighbors.gad.val) LAYOUT(vertical) HSTRETCH
	    extweight.gad;		
	    iterations.gad;		
} 

fd_colors.gad = 

GROUP simple "Region Generation" flat 
{ 
    VALUE(fd_colors.gad.val) LAYOUT(vertical) HSTRETCH 
	    numcolors.gad;		
	    strength.gad;		
	    orientation.gad;		
	    scale.gad;		
	    fd_neighbors.gad;		
	    sepparm2.gad;		
	    generatecolors.gad;		
	    sepparm.gad;		
	    addindex.gad;		
	    attname2.gad;		
	    sepparm2___2.gad;		
	    addatt.gad;		
	    attname.row.join;		
	    sepparm2___4.gad;		
	    fd_extractcol.gad;		
} 

fd_input.gad = 

GROUP simple "Input" flat 
{ 
    VALUE(fd_input.gad.val) LAYOUT(vertical) HSTRETCH 
	    inputtype.gad;		
	    imginput.gad;		
	    copinput.gad;		
	    sepparm2___3.gad;		
} 

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    fd_input.gad; 
    fd_colors.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
